
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article" xml:lang="EN"><?properties no_embargo?><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">Acta Crystallogr D Biol Crystallogr</journal-id><journal-id journal-id-type="publisher-id">Acta Cryst. D</journal-id><journal-title>Acta Crystallographica Section D: Biological Crystallography</journal-title><issn pub-type="ppub">0907-4449</issn><issn pub-type="epub">1399-0047</issn><publisher><publisher-name>International Union of Crystallography</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">2467521</article-id><article-id pub-id-type="publisher-id">gx5125</article-id><article-id pub-id-type="doi">10.1107/S0907444908001558</article-id><article-id pub-id-type="coden">ABCRE6</article-id><article-id pub-id-type="pii">S0907444908001558</article-id><article-id pub-id-type="pmid">18391408</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Papers</subject></subj-group></article-categories><title-group><article-title><SecTag type="TITLE"><text><SENT sid="0" pm="."><plain>A knowledge-driven approach for crystallographic protein model completion </plain></SENT>
</text></SecTag></article-title><alt-title>Model completion</alt-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Joosten</surname><given-names>Krista</given-names></name><xref ref-type="aff" rid="a">a</xref></contrib><contrib contrib-type="author"><name><surname>Cohen</surname><given-names>Serge X.</given-names></name><xref ref-type="aff" rid="a">a</xref></contrib><contrib contrib-type="author"><name><surname>Emsley</surname><given-names>Paul</given-names></name><xref ref-type="aff" rid="b">b</xref></contrib><contrib contrib-type="author"><name><surname>Mooij</surname><given-names>Wijnand</given-names></name><xref ref-type="aff" rid="a">a</xref></contrib><contrib contrib-type="author"><name><surname>Lamzin</surname><given-names>Victor S.</given-names></name><xref ref-type="aff" rid="c">c</xref></contrib><contrib contrib-type="author"><name><surname>Perrakis</surname><given-names>Anastassis</given-names></name><xref ref-type="aff" rid="a">a</xref><xref ref-type="corresp" rid="cor">*</xref></contrib><aff id="a"><label>a</label>Department of Molecular Carcinogenesis, Netherlands Cancer Institute, <country>The Netherlands</country></aff><aff id="b"><label>b</label>York Structural Biology Laboratory, Chemistry Department, The University of York, <country>England</country></aff><aff id="c"><label>c</label>EMBL Hamburg Outstation, <country>Germany</country></aff></contrib-group><author-notes><corresp id="cor">Correspondence e-mail: <email>a.perrakis@nki.nl</email></corresp></author-notes><pub-date pub-type="ppub"><day>01</day><month>4</month><year>2008</year></pub-date><pub-date pub-type="epub"><day>19</day><month>3</month><year>2008</year></pub-date><pub-date pub-type="pmc-release"><day>19</day><month>3</month><year>2008</year></pub-date><volume>64</volume><issue>Pt 4</issue><issue-id pub-id-type="publisher-id">d080400</issue-id><fpage>416</fpage><lpage>424</lpage><history><date date-type="received"><day>02</day><month>11</month><year>2007</year></date><date date-type="accepted"><day>15</day><month>1</month><year>2008</year></date></history><permissions><copyright-statement>© International Union of Crystallography 2008</copyright-statement><copyright-year>2008</copyright-year><license license-type="open-access" xlink:href="http://journals.iucr.org/services/termsofuse.html"><p>This is an open-access article distributed under the terms described at http://journals.iucr.org/services/termsofuse.html.</p></license></permissions><self-uri xlink:type="simple" xlink:href="http://dx.doi.org/10.1107/S0907444908001558">A full version of this article is available from Crystallography Journals Online.</self-uri><abstract abstract-type="toc"><p><SecTag type="ABS"><text><SENT sid="1" pm="."><plain>A novel method that uses the conformational distribution of Cα atoms in known structures is used to build short missing regions (‘loops’) in protein models. </plain></SENT>
<SENT sid="2" pm="."><plain>An initial tree of possible loop paths is pruned according to structural and electron-density criteria and the most likely loop conformation(s) are selected and built. </plain></SENT>
</text></SecTag></p></abstract><abstract><p><SecTag type="ABS"><text><SENT sid="3" pm="."><plain>One of the most cumbersome and time-demanding tasks in completing a protein model is building short missing regions or ‘loops’. </plain></SENT>
<SENT sid="4" pm="."><plain>A method is presented that uses structural and electron-density information to build the most likely conformations of such loops. </plain></SENT>
<SENT sid="5" pm="."><plain>Using the distribution of angles and dihedral angles in pentapeptides as the driving parameters, a set of possible conformations for the Cα backbone of loops was generated. </plain></SENT>
<SENT sid="6" pm="."><plain>The most likely candidate is then selected in a hierarchical manner: new and stronger restraints are added while the loop is built. </plain></SENT>
<SENT sid="7" pm="."><plain>The weight of the electron-density correlation relative to geometrical considerations is gradually increased until the most likely loop is selected on map correlation alone. </plain></SENT>
<SENT sid="8" pm="."><plain>To conclude, the loop is refined against the electron density in real space. </plain></SENT>
<SENT sid="9" pm="."><plain>This is started by using structural information to trace a set of models for the Cα backbone of the loop. </plain></SENT>
<SENT sid="10" pm="."><plain>Only in later steps of the algorithm is the electron-density correlation used as a criterion to select the loop(s). </plain></SENT>
<SENT sid="11" pm="."><plain>Thus, this method is more robust in low-density regions than an approach using density as a primary criterion. </plain></SENT>
<SENT sid="12" pm="."><plain>The algorithm is implemented in a loop-building program, Loopy, which can be used either alone or as part of an automatic building cycle. Loopy can build loops of up to 14 residues in length within a couple of minutes. </plain></SENT>
<SENT sid="13" pm="."><plain>The average root-mean-square deviation of the Cα atoms in the loops built during validation was less than 0.4 Å. </plain></SENT>
<SENT sid="14" pm="."><plain>When implemented in the context of automated model building in ARP/wARP, Loopy can increase the completeness of the built models. </plain></SENT>
</text></SecTag></p></abstract><SecTag type="KEYWORD"><kwd-group><kwd>model building</kwd><kwd>loop modelling</kwd><kwd><italic>Loopy</italic></kwd></kwd-group></SecTag></article-meta></front><body><SecTag type="INTRO"><sec sec-type="introduction" id="sec1"><label>1.</label><title><text><SENT sid="15" pm="."><plain>Introduction </plain></SENT>
</text></title><p><text><SENT sid="16" pm="."><plain>In macromolecular X-ray crystallography, building a complete model from a density map remains a challenging task. </plain></SENT>
<SENT sid="17" pm="."><plain>Even though several programs exist that aim towards automated model building [for example, ARP/wARP (Perrakis et al., 1999 ▶), RESOLVE (Terwilliger, 2003a  ▶), TEXTAL (Ioerger et al., 1999 ▶), MAID (Levitt, 2001 ▶) and Buccaneer (Cowtan, 2006 ▶)], none of these programs is expected to return a ‘complete’ model. </plain></SENT>
<SENT sid="18" pm="."><plain>This means that no matter how far the automated model building has progressed, part of the model still needs to be built manually. </plain></SENT>
<SENT sid="19" pm="."><plain>Low-density regions, for example, can cause gaps in the model. </plain></SENT>
<SENT sid="20" pm="."><plain>In these regions the user has to build the model using interactive graphics, which can be quite a laborious task. </plain></SENT>
</text></p><p><text><SENT sid="21" pm="."><plain>All automated model-building programs start by tracing the backbone of the protein from the density map, albeit in different manners. </plain></SENT>
<SENT sid="22" pm="."><plain>In ARP/wARP, for example, the electron density is first modelled by free atoms, from which the Cα backbone of the structure is traced (Morris et al., 2002 ▶). </plain></SENT>
<SENT sid="23" pm="."><plain>The next step is to assign the known protein sequence to the main-chain fragments that were found (‘sequence docking’; see, for example, Cohen et al., 2004 ▶; Terwilliger, 2003b  ▶). </plain></SENT>
<SENT sid="24" pm="."><plain>However, at the end, even after a successful automated model-building run, some regions of known start, end, length and amino-acid sequence remain to be built. </plain></SENT>
</text></p><p><text><SENT sid="25" pm="."><plain>Software that uses this information to complete the model has also been developed. </plain></SENT>
<SENT sid="26" pm="."><plain>For example, Xpleo (van den Bedem et al., 2005 ▶), LAFIRE (Yao et al., 2006 ▶) and RAPPER (de Bakker et al., 2006 ▶) are tools for automated model completion. </plain></SENT>
<SENT sid="27" pm="."><plain>In this paper, we describe the use of structural information on the Cα backbone to fill in the gaps and build the loops of the model. </plain></SENT>
<SENT sid="28" pm="."><plain>It has been shown (Jones et al., 1991 ▶) that a database of five-residue-long fragments (pentapeptides) could be used to complete and improve the backbone structure found by skeletonization of the density map. </plain></SENT>
<SENT sid="29" pm="."><plain>It has also been shown that protein conformation can be described by the angles and dihedral angles between successive Cα atoms (Kleywegt, 1997 ▶; Esnouf, 1997 ▶). </plain></SENT>
</text></p><p><text><SENT sid="30" pm="."><plain>We use knowledge from pentapeptides to predict the probable positions of the fifth Cα atom from the terminal tetrapeptides of main-chain fragments, thus extending the peptide segment. </plain></SENT>
<SENT sid="31" pm="."><plain>By iterating this process, using each set of new Cα atoms as a new set of terminal tetrapeptides, we create a tree of possible backbones for the loop. </plain></SENT>
<SENT sid="32" pm="."><plain>In several steps based on different features we remove less likely options until the most probable loop(s) is/are selected from the tree. </plain></SENT>
<SENT sid="33" pm="."><plain>Our loop-building method can be used in two modes. </plain></SENT>
<SENT sid="34" pm="."><plain>In the first case, gaps are automatically detected, the best loop for each gap is selected and the resulting model is returned to the user. </plain></SENT>
<SENT sid="35" pm="."><plain>In this mode, Loopy can easily be incorporated into an automated package. </plain></SENT>
<SENT sid="36" pm="."><plain>In the second case, the user can define an area to (re-)build. </plain></SENT>
<SENT sid="37" pm="."><plain>The program now provides a selection of the best possible loops ordered by density correlation. </plain></SENT>
<SENT sid="38" pm="."><plain>This allows the creation of an ensemble of models (Terwilliger et al., 2007 ▶; de Bakker et al., 2006 ▶; DePristo et al., 2004 ▶; Furnham et al., 2006 ▶), at least locally; this selection can also aid the user in building the loop manually by interactively inspecting and editing the given choices. </plain></SENT>
</text></p><p><text><SENT sid="39" pm="."><plain>Since our approach is based on the usage of structural information from pentapeptides, we will start with a description of the function we use and how we obtained our data. </plain></SENT>
<SENT sid="40" pm="."><plain>Next, we will explain the method we use to build the loops. </plain></SENT>
<SENT sid="41" pm="."><plain>Results of testing Loopy on manual builds as well as as a part of ARP/wARP are then described. </plain></SENT>
<SENT sid="42" pm="."><plain>Finally, we summarize our results on Loopy and add a few ideas for further improvements. </plain></SENT>
</text></p></sec></SecTag><sec id="sec2"><label>2.</label><title><text><SENT sid="43" pm="."><plain>Structure of a five-Cα fragment (pentapetide) </plain></SENT>
</text></title><p><text><SENT sid="44" pm="."><plain>Consider a missing region in the middle of a protein model (for simplicity, we will refer to such regions as ‘loops’). </plain></SENT>
<SENT sid="45" pm="."><plain>When all the fragments of the model are docked into sequence, both anchors of the loop (the preceding and succeeding residues) are known and the number of missing residues is also known. </plain></SENT>
<SENT sid="46" pm="."><plain>Moreover, not only the position and the amino-acid type of the anchors are known, but the geometrical features of the protein model close to the anchors are also known. </plain></SENT>
<SENT sid="47" pm="."><plain>Our aim is to use these features to extend the anchors over the number of missing residues, effectively filling in the gap. </plain></SENT>
</text></p><p><text><SENT sid="48" pm="."><plain>As the main geometrical feature, we consider a fragment of four Cα atoms (or tetrapeptide; see Fig. 1 ▶). </plain></SENT>
<SENT sid="49" pm="."><plain>We define a tetrapeptide from the N-terminus to the C-terminus as ‘forward’ and one in the opposite direction as ‘backward’. </plain></SENT>
<SENT sid="50" pm="."><plain>Initially, we investigated whether one can predict the position of the fourth Cα atom given the positions of the first three Cα atoms of a tetrapeptide. </plain></SENT>
<SENT sid="51" pm="."><plain>This tripeptide defines an origin and a natural basis. </plain></SENT>
<SENT sid="52" pm="."><plain>Under the assumption that the variation in the distance between successive Cα atoms, d (3.8 Å), is negligible, the relative position of the fourth Cα atom can be described by (d, ϕ0, θ0, ϕ1). </plain></SENT>
<SENT sid="53" pm="."><plain>Likewise, the relative position of the fourth Cα atom in a backward tetrapeptide is given by (d, ϕ1, θ0, ϕ0). </plain></SENT>
</text></p><p><text><SENT sid="54" pm="."><plain>The density profiles of the angle and torsion (ϕ1, θ0) for forward tetrapeptides and (ϕ0, θ0) for backward tetrapeptides have been studied in the PhD thesis of R. </plain></SENT>
<SENT sid="55" pm="."><plain>Morris (Morris, 2000 ▶); his results are illustrated in Fig. 2 ▶ and clearly show two separate peaks: a sharp peak representing the α-helices (at θ0 around 50°) and a broad peak representing β-strands (at θ0 around −150°). </plain></SENT>
<SENT sid="56" pm="."><plain>The first peak is roughly a factor of one hundred higher than the second peak. </plain></SENT>
<SENT sid="57" pm="."><plain>This suggests that trying to predict the position of the fourth Cα atom using these plots would strongly favour α-­helices, even when we include ϕ0 for forward and ϕ1 for backward peptides. </plain></SENT>
<SENT sid="58" pm="."><plain>We checked this suggestion and concluded that we indeed needed to use larger structural fragments to provide additional information. </plain></SENT>
</text></p><p><text><SENT sid="59" pm="."><plain>Therefore, we decided to consider five-Cα fragments (pentapeptides) instead of tetrapeptides. </plain></SENT>
<SENT sid="60" pm="."><plain>The fifth Cα atom of a forward pentapeptide can be described in terms of (d, ϕ0, θ0, ϕ1, θ1, ϕ2) or similarly for a backward pentapeptide in terms of (d, ϕ2, θ1, ϕ1, θ0, ϕ0) (see Fig. 1 ▶). </plain></SENT>
</text></p><p><text><SENT sid="61" pm="."><plain>To determine the frequency tables for the given combinations of angles and torsions, we downloaded all structures present in the PDB on 12 October 2005. </plain></SENT>
<SENT sid="62" pm="."><plain>From these, we kept for our learning set all structures with a reported R work better than 25% that had been refined at a resolution higher than 2.0 Å, leaving a set of approximately 12 000 structures. </plain></SENT>
<SENT sid="63" pm="."><plain>These structures were then randomly distributed over ten sets each containing 1200 structures. </plain></SENT>
<SENT sid="64" pm="."><plain>For every protein, we computed the angles and dihedral angles for every possible pentapeptide in both the forward and the backward directions. </plain></SENT>
<SENT sid="65" pm="."><plain>The results of these analyses were tabulated in multi-dimensional tables; angles (ϕ) between 75 and 155° were binned every 10° and dihedral angles (θ) between −180 and 180° every were binned 15°. </plain></SENT>
<SENT sid="66" pm="."><plain>The variation between the frequency tables derived from each of the ten sets was used to estimate the accuracy of the average of all values and look-up tables were constructed. </plain></SENT>
<SENT sid="67" pm="."><plain>We found that the variation in ϕ0 in the forward direction and in ϕ2 in the backward direction was negligible. </plain></SENT>
<SENT sid="68" pm="."><plain>Hence, we could approximate the propensity distributions to the four-dimensional tables of (θ0, ϕ1, θ1, ϕ2) in the forward direction and (θ1, ϕ1, θ0, ϕ0) in the backward direction. </plain></SENT>
</text></p><p><text><SENT sid="69" pm="."><plain>To ensure that these tables reflect changes in the secondary structure, we displayed (as in Fig. 3 ▶) the retrieved density profiles in the regions of α-helices and β-strands. </plain></SENT>
<SENT sid="70" pm="."><plain>The panels show clearly that the density profile depends strongly on the secondary structure at a given position in the protein. </plain></SENT>
</text></p><p><text><SENT sid="71" pm="?"><plain>How can we use these density tables to predict the position of a fifth Cα atom given a tetrapeptide? </plain></SENT>
<SENT sid="72" pm="."><plain>Let us consider the C-­terminus of a fragment in a protein model. </plain></SENT>
<SENT sid="73" pm="."><plain>The final tetrapeptide at this end of the fragment can be seen as the start of a forward pentapeptide. </plain></SENT>
<SENT sid="74" pm="."><plain>The Cα-atom positions of this part of the pentapeptide are known and thus (θ0, ϕ1) are fixed. </plain></SENT>
<SENT sid="75" pm="."><plain>From Fig. 3 ▶ we know that the θ0 torsion and the ϕ1 angle describe the conformation of this part of the fragment effectively. </plain></SENT>
<SENT sid="76" pm="."><plain>The probability that the fifth Cα atom lies at an angle ϕ2 and a dihedral angle θ1 to the tetrapeptide is given bywhen we use our observation that ϕ0 is independent of the other angles and torsions. </plain></SENT>
</text></p><p><text><SENT sid="77" pm="."><plain>Equivalently, the final tetrapeptide at the N-terminus of the fragment can be seen as the start of a backward pentapeptide. </plain></SENT>
<SENT sid="78" pm="."><plain>In this frame of reference, we found ϕ2 to be independent of the other angles and torsions. </plain></SENT>
<SENT sid="79" pm="."><plain>Thus, we find for the probability that (ϕ0, θ1) describes the position of the fifth Cα atomIn the next section, we explain how we use the structural information to extend a fragment by a single Cα atom and iterate it to obtain loops. </plain></SENT>
</text></p></sec><SecTag type="METHODS"><sec sec-type="methods" id="sec3"><label>3.</label><title><text><SENT sid="80" pm="."><plain>Method </plain></SENT>
</text></title><p><text><SENT sid="81" pm="."><plain>Let us consider two main-chain fragments which are docked into sequence. </plain></SENT>
<SENT sid="82" pm="."><plain>The gap between these successive fragments is n residues long. </plain></SENT>
<SENT sid="83" pm="."><plain>Let us call the Cα atom of the N-terminus of the loop the ‘N-anchor’ of the loop to be built. </plain></SENT>
<SENT sid="84" pm="."><plain>It is connected to the C-terminus of the preceding main-chain fragment. </plain></SENT>
<SENT sid="85" pm="."><plain>By extending this fragment iteratively in the forward direction, a connection can be made with the succeeding fragment. </plain></SENT>
<SENT sid="86" pm="."><plain>We call the Cα atom of the second anchor point the ‘C-anchor’ of the loop. </plain></SENT>
<SENT sid="87" pm="."><plain>Of course, a loop can also be built in the opposite direction by iterating the extension from the C-­anchor backwards. </plain></SENT>
</text></p><p><text><SENT sid="88" pm="."><plain>In our loop-building algorithm, the creation of Cα backbones for possible loops is initially geometry-driven. </plain></SENT>
<SENT sid="89" pm="."><plain>Initially, the electron-density map plays the role of a ‘mask’; it is used to avoid building over the existing model by applying negative density around the atoms of the model. </plain></SENT>
<SENT sid="90" pm="."><plain>As the ‘tree’ of possible conformations is reduced to the most likely candidates in a hierarchical manner, the contribution of the electron-density correlation to the selection criteria is slowly increased. </plain></SENT>
<SENT sid="91" pm="."><plain>The value of the correlation is only used to compare loops with each other; it is not used as a global measure. </plain></SENT>
<SENT sid="92" pm="."><plain>As a result, this method can easily bridge areas of low electron density using geometry, while at the end loops are finally selected based on the electron-density map. </plain></SENT>
</text></p><p><text><SENT sid="93" pm="."><plain>A flowchart of our algorithm is given in Fig. 4 ▶. </plain></SENT>
<SENT sid="94" pm="."><plain>A short description of the algorithm steps is given below; each step is discussed separately in the following sections.(i) Select a small number of possible Cα-atom positions, p, based on the structural information; these are likely extensions of a fragment by a single Cα atom. </plain></SENT>
<SENT sid="95" pm="."><plain>This step is iterated n times, creating a tree of possible loop backbones.(ii) The large tree (which initially contains approximately pn conformations or ‘paths’) is pruned by removing the most unlikely ‘branches’. </plain></SENT>
<SENT sid="96" pm="."><plain>Removing a single branch, which can be furcated, can result in the removal of multiple paths. </plain></SENT>
<SENT sid="97" pm="."><plain>Loops leading far away from the opposite anchor are removed, as well as loops with a geometrically unfavourable connection with the opposite anchor and those with a relatively low Cα electron-density correlation.(iii) Determine the position of all main-chain atoms of the remaining loop conformations. </plain></SENT>
<SENT sid="98" pm="."><plain>In this step, we remove paths that are unlikely based on failure to find a peptide plane for the main-chain atoms, unlikely Ramachandran dihedral angles or too low density correlation of all main-chain atoms. </plain></SENT>
<SENT sid="99" pm="."><plain>Steps (i)–(iii) are performed twice, once for each direction in which the loop can be built (forward and backward). </plain></SENT>
<SENT sid="100" pm="."><plain>This is important as the tree of possible branches depends strongly on the structure of the anchor tetrapeptides.(iv) Build the side chains of all peptides in the remaining loops. </plain></SENT>
<SENT sid="101" pm="."><plain>The best loop(s) is/are selected based on the density correlation of the all the atoms in the loop.(v) Finally, the best loop(s) are refined in real space. </plain></SENT>
</text></p><sec id="sec3.1"><label>3.1.</label><title><text><SENT sid="102" pm="."><plain>Extending fragments by a single Cα atom at a time </plain></SENT>
</text></title><p><text><SENT sid="103" pm="."><plain>We start by creating a ‘real-space’ residual map, as shown in Jones &amp; Liljas (1984 ▶) and described in a similar implementation in Cohen et al. (2004 ▶). </plain></SENT>
<SENT sid="104" pm="."><plain>This sets the map density around each atom of the existing model to a negative value. </plain></SENT>
<SENT sid="105" pm="."><plain>Next, we create a uniform spherical grid with radius d (3.8 Å) around one of the anchor points of our loop. </plain></SENT>
<SENT sid="106" pm="."><plain>The algorithm we use to create a uniform spherical grid restricts the number of grid points to the Fibonacci sequence. </plain></SENT>
<SENT sid="107" pm="."><plain>Tests showed that the performance was optimal for 377 nodes. </plain></SENT>
<SENT sid="108" pm="."><plain>For each node in the grid, we determine the density at the node itself and midway between the node and the anchor. </plain></SENT>
<SENT sid="109" pm="."><plain>Since we expect at least some density at both points, we remove nodes with negative density at either position (the density map has the mean set to zero, as commonly performed). </plain></SENT>
<SENT sid="110" pm="."><plain>We have found that including the requirement for positive density at the midway point strongly improved the performance of the program. </plain></SENT>
<SENT sid="111" pm="."><plain>Note also that this is a very generous density constraint, which mostly ensures that we do not build over existing fragments or over the fragment itself. </plain></SENT>
</text></p><p><text><SENT sid="112" pm="."><plain>For the remaining nodes, we compute the angle and torsion (ϕ, θ) and look up the corresponding structural probability from our tables. </plain></SENT>
<SENT sid="113" pm="."><plain>We use this value in combination with the electron density at the node to score the nodes. </plain></SENT>
<SENT sid="114" pm="."><plain>The contribution of the electron density is approximately a factor of ten smaller than the structural probability (the relative weights are set empirically) and thus the contribution of the density only involves the fine-tuning of the scoring. </plain></SENT>
</text></p><p><text><SENT sid="115" pm="."><plain>Since the above procedure is iterated n times, the number of nodes may lead to a combinatorial explosion, p n. </plain></SENT>
<SENT sid="116" pm="."><plain>Thus, it is desirable to keep the number of nodes to a minimum. </plain></SENT>
<SENT sid="117" pm="."><plain>However, we cannot simply select nodes with the highest score. </plain></SENT>
<SENT sid="118" pm="."><plain>Consider the example displayed in Fig. 5 ▶: the figure shows that nodes tend to cluster together, with a single cluster having several high-scoring nodes (red spheres; lower scores are blue). </plain></SENT>
<SENT sid="119" pm="."><plain>We try to select the representative nodes from each cluster by taking the one with the highest score within a sphere of 0.3 Å radius. </plain></SENT>
<SENT sid="120" pm="."><plain>We found that in general five nodes per extension sphere suffice to build most loops. </plain></SENT>
</text></p></sec><sec id="sec3.2"><label>3.2.</label><title><text><SENT sid="121" pm="."><plain>Removing unlikely conformations </plain></SENT>
</text></title><p><text><SENT sid="122" pm="."><plain>The single extension for the p node candidates n times creates a tree of possibly up to p n Cα atoms representing possible backbones for the loop. </plain></SENT>
<SENT sid="123" pm="."><plain>The tree can grow in every direction, restricted only by the structural probability and positive electron density. </plain></SENT>
<SENT sid="124" pm="."><plain>In this step, we prune the tree by removing the least likely paths as follows.(i) Those ending too far away from the opposite loop anchor are removed.(ii) Loop paths are ordered according to the density at each Cα node and their density midway from the edges. </plain></SENT>
<SENT sid="125" pm="."><plain>Only a best selection is kept (typically around 100).(iii) Structural probability is determined for the connection of each loop end node to the opposite anchor point. </plain></SENT>
<SENT sid="126" pm="."><plain>Again, the branches are ordered according to the structural probability and the best ones are kept (typically a few dozen). </plain></SENT>
</text></p></sec><sec id="sec3.3"><label>3.3.</label><title><text><SENT sid="127" pm="."><plain>Building the main-chain atoms </plain></SENT>
</text></title><p><text><SENT sid="128" pm="."><plain>After the first round of pruning, we determine the position of the main-chain atoms for each residue in the loop tree. </plain></SENT>
<SENT sid="129" pm="."><plain>The main-chain atoms of a peptide lie approximately in a plane. </plain></SENT>
<SENT sid="130" pm="."><plain>Their relative positions are known to high accuracy and with negligible variations within this plane. </plain></SENT>
<SENT sid="131" pm="."><plain>Currently, we only consider trans-peptides. </plain></SENT>
</text></p><p><text><SENT sid="132" pm="."><plain>For all amino acids except glycine, the position of the anchor Cβ atom can be determined from the positions of the C and the N atom around the anchor Cα atom. </plain></SENT>
<SENT sid="133" pm="."><plain>Furthermore, little or no density is expected outside the peptide plane. </plain></SENT>
<SENT sid="134" pm="."><plain>We selected four points (E + max, E − max, E + min, E − min) which we found to have low density in comparison to the main-chain atom positions. </plain></SENT>
<SENT sid="135" pm="."><plain>The exact location of these points was chosen such that the procedure gave optimal results for the reproduction of the orientation for each peptide plane in the structure <ext-link ext-link-type="uri" xlink:href="http://scripts.iucr.org/cgi-bin/cr.cgi?rm=pdb&amp;pdbId=1lml">1lml</ext-link> at a resolution of 2.0 Å. </plain></SENT>
<SENT sid="136" pm="."><plain>This yields eight (or seven for glycine) points to determine the orientation of the peptide plane between two successive Cα atoms. </plain></SENT>
</text></p><p><text><SENT sid="137" pm="."><plain>Let ρ(x) be the density at the position of atom x. </plain></SENT>
<SENT sid="138" pm="."><plain>The plane is rotated through two successive nodes, maximizing the value ofThis search is restricted by the constraint that the angle between N, Cα and C should be 109 ± 20°. </plain></SENT>
<SENT sid="139" pm="."><plain>If no peptide plane is found which complies with this restraint, it is assumed that the corresponding Cα candidates are wrong and all paths containing this edge in the tree are removed. </plain></SENT>
</text></p><p><text><SENT sid="140" pm="."><plain>We complete the loop tree with the main-chain atoms and remove those branches that are unlikely in the following steps.(i) Determine the most probable position of the main-chain atoms by rotating the peptide plane as described above. </plain></SENT>
<SENT sid="141" pm="."><plain>Branches with residues for which we cannot find a plane are completely removed from the tree.(ii) Determine the Ramachandran angles (Ramachandran et al., 1963 ▶) for the residues in every possible loop. </plain></SENT>
<SENT sid="142" pm="."><plain>In this reduction, glycines aside, loops which include peptides with a value of zero in the four-valued Ramachandran plot described in Kelly (2008 ▶) are removed.(iii) Order the loops based on the density correlation of all main-chain atoms and, if present, the Cβ atoms. </plain></SENT>
<SENT sid="143" pm="."><plain>Typically, about five loops are kept for the final selection step. </plain></SENT>
</text></p></sec><sec id="sec3.4"><label>3.4.</label><title><text><SENT sid="144" pm="."><plain>Completion of the loop </plain></SENT>
</text></title><p><text><SENT sid="145" pm="."><plain>After the latter selection step, in which we were still working both in the forward and the backward directions, only a small number of possible loop paths remain. </plain></SENT>
<SENT sid="146" pm="."><plain>For this final selection, the positions of all side-chain atoms in each candidate loop are determined using the algorithm from ARP/wARP. </plain></SENT>
<SENT sid="147" pm="."><plain>A weighted combination of the density correlation of the side-chain atoms and that of the main-chain atoms is used for the final scoring of the paths. </plain></SENT>
</text></p></sec><sec id="sec3.5"><label>3.5.</label><title><text><SENT sid="148" pm="."><plain>Real-space refinement </plain></SENT>
</text></title><p><text><SENT sid="149" pm="."><plain>After a loop with all side chains has been built, we refine it in real space. </plain></SENT>
<SENT sid="150" pm="."><plain>Real-space refinement for the purpose of this study has been performed as implemented in the program Coot (Emsley &amp; Cowtan, 2004 ▶) utilizing a script that refines the loop in real space with geo­metrical restraints. </plain></SENT>
</text></p></sec><sec id="sec3.6"><label>3.6.</label><title><text><SENT sid="151" pm="."><plain>Implementation and hardware details </plain></SENT>
</text></title><p><text><SENT sid="152" pm="."><plain>Loopy was written in C++. </plain></SENT>
<SENT sid="153" pm="."><plain>The ATLAS library (Whaley &amp; Petitet, 2005 ▶) provided us with an automatically optimized BLAS/LAPACK implementation for linear algebraic computations. Clipper (Cowtan, 2003 ▶) was used for handling electron-density maps. </plain></SENT>
<SENT sid="154" pm="."><plain>In the initial stage of the algorithm a linear interpolation was used to determine the electron-density correlation. </plain></SENT>
<SENT sid="155" pm="."><plain>This method is ten times faster than the Gaussian interpolation method that we use in the final stage, although less accurate. </plain></SENT>
<SENT sid="156" pm="."><plain>However, at the beginning many map correlations need to be determined and accuracy is less important at this stage than speed. </plain></SENT>
<SENT sid="157" pm="."><plain>In the final stage, where we determine the side-chain atoms and score all loops, we need a better and more precise interpolation method. </plain></SENT>
<SENT sid="158" pm="."><plain>In this stage, we compute the electron-density correlation by approximating the atoms by Gaussian distributions centred at the atomic position (Cowtan, 2003 ▶). </plain></SENT>
</text></p><p><text><SENT sid="159" pm="."><plain>Loopy compiles under different architectures and operating systems, including Linux, Mac OSC, Alpha Tru64 Unix and SGI Irix. </plain></SENT>
<SENT sid="160" pm="."><plain>The validation was performed on an Intel Xeon 2.66 GHz machine under Fedora core 5. </plain></SENT>
<SENT sid="161" pm="."><plain>Testing in the context of ARP/wARP model building was performed on an Intel Pentium 4 3.00 GHz and on a cluster of five Apple X-serve G5 nodes. </plain></SENT>
</text></p></sec></sec></SecTag><SecTag type="RESULTS"><sec sec-type="results" id="sec4"><label>4.</label><title><text><SENT sid="162" pm="."><plain>Results </plain></SENT>
</text></title><p><text><SENT sid="163" pm="."><plain>The results of our program were examined in two stages. </plain></SENT>
<SENT sid="164" pm="?"><plain>Firstly, we wanted to validate Loopy: could the program rebuild parts of a model using the best available map? </plain></SENT>
<SENT sid="165" pm="?"><plain>In the next stage, we considered a more interesting question: can Loopy build loops in difficult parts of the density map? </plain></SENT>
<SENT sid="166" pm="?"><plain>In other words, could Loopy add to the model completion by building loops where another program, in this case ARP/wARP, failed? </plain></SENT>
<SENT sid="167" pm="."><plain>All these tests will be described in the next subsections. </plain></SENT>
</text></p><sec id="sec4.1"><label>4.1.</label><title><text><SENT sid="168" pm="."><plain>Validation </plain></SENT>
</text></title><p><text><SENT sid="169" pm="."><plain>We validated Loopy on two structures: <ext-link ext-link-type="uri" xlink:href="http://scripts.iucr.org/cgi-bin/cr.cgi?rm=pdb&amp;pdbId=1lml">1lml</ext-link> and <ext-link ext-link-type="uri" xlink:href="http://scripts.iucr.org/cgi-bin/cr.cgi?rm=pdb&amp;pdbId=1o1z">1o1z</ext-link>. </plain></SENT>
<SENT sid="170" pm="."><plain>Both structures had been refined to a resolution of 2.0 Å. </plain></SENT>
<SENT sid="171" pm="."><plain>For the initial validation of Loopy, we ran it in the manual mode to rebuild a few random parts of <ext-link ext-link-type="uri" xlink:href="http://scripts.iucr.org/cgi-bin/cr.cgi?rm=pdb&amp;pdbId=1lml">1lml</ext-link> and checked the generated loop suggestions visually. </plain></SENT>
<SENT sid="172" pm="."><plain>In Fig. 6 ▶, a representative example of a loop test is shown for a loop with anchor points at residues 35 and 43. </plain></SENT>
<SENT sid="173" pm="."><plain>In this example, all loop suggestions closely resemble the final model (pink). </plain></SENT>
<SENT sid="174" pm="."><plain>The loop with the highest score (green) is very close to the reference structure. </plain></SENT>
</text></p><p><text><SENT sid="175" pm="."><plain>For a more extensive validation, we used the structure <ext-link ext-link-type="uri" xlink:href="http://scripts.iucr.org/cgi-bin/cr.cgi?rm=pdb&amp;pdbId=1o1z">1o1z</ext-link> which had also been used for the validation of Xpleo (van den Bedem et al., 2005 ▶). </plain></SENT>
<SENT sid="176" pm="."><plain>We rebuilt every polypeptide in the final structure of 4, 6, 8, 10, 12 and 14 residues long. </plain></SENT>
<SENT sid="177" pm="."><plain>Results for the various loop lengths are given in Fig. 7 ▶, which displays a box plot for the r.m.s.d. of all atoms after real-space refinement. </plain></SENT>
<SENT sid="178" pm="."><plain>Each time around 100 loops were built. </plain></SENT>
<SENT sid="179" pm="."><plain>In Table 1 ▶ we show how various settings of the maximum number of nodes per extension and loop length affect the average building time, success rate and accuracy of the loops. </plain></SENT>
<SENT sid="180" pm="."><plain>Based on these tests, we adjusted the default number of maximum number of nodes per extension to balance time, success and accuracy (defaults are highlighted in Table 1 ▶). </plain></SENT>
</text></p><p><text><SENT sid="181" pm="."><plain>We also showed that the r.m.s.d. of the Cα atoms alone gives a good indication of the quality of the loop. </plain></SENT>
<SENT sid="182" pm="."><plain>Furthermore, real-space refinement improves the loops considerably, demonstrating that despite the inherent inaccuracy of its building algorithm, Loopy places the loops accurately enough to be positioned correctly by real-space refinement. </plain></SENT>
<SENT sid="183" pm="."><plain>Details of this are illustrated in Fig. 1 of the supplementary material1. </plain></SENT>
</text></p><p><text><SENT sid="184" pm="."><plain>The validation gave us confidence to run the test as part of an automatic building procedure. </plain></SENT>
</text></p></sec><sec id="sec4.2"><label>4.2.</label><title><text><SENT sid="185" pm="."><plain>Loop building after ARP/wARP main-chain tracing </plain></SENT>
</text></title><p><text><SENT sid="186" pm="."><plain>To test how Loopy performs in the most difficult regions of a structure, which are typically those that need to be built in order to obtain a complete model, we devised the following protocol. </plain></SENT>
<SENT sid="187" pm="."><plain>The main-chain tracing and side-chain tracing modules of ARP/wARP were run on the best available map using as free atoms the atomic coordinates from the final structure, only once and without any iteration with refinement. </plain></SENT>
<SENT sid="188" pm="."><plain>This is the best possible scenario for the ARP/wARP tracing modules: the best map and the most accurate free-atom coordinates are used. </plain></SENT>
<SENT sid="189" pm="."><plain>Under these conditions, the regions of the structure that are not built by the ARP/wARP main tracing modules would almost certainly never be built by ARP/wARP and thus represent the most challenging areas of the structure. </plain></SENT>
<SENT sid="190" pm="."><plain>The test set was composed of a broad range of different structures for which we know the final model. </plain></SENT>
<SENT sid="191" pm="."><plain>The set contained 38 structures in total and included structures with multiple chains and/or NCS. </plain></SENT>
<SENT sid="192" pm="."><plain>The resolution of the data sets ranged from 1.0 to 3.3 Å. </plain></SENT>
</text></p><p><text><SENT sid="193" pm="."><plain>In the automatic mode Loopy determines the loop positions from the PDB file of the model; the sequence of the structure is provided in a PIR format file, like in a classic ARP/wARP run. Loopy then tries to build all loops according to the user input. </plain></SENT>
<SENT sid="194" pm="."><plain>Before starting to build each loop, the program checks that the anchors or their symmetry mates lie within reasonable distance. </plain></SENT>
<SENT sid="195" pm="."><plain>For our test, we used a maximum loop length of 14 residues. </plain></SENT>
<SENT sid="196" pm="."><plain>The value of p (see §3.1) was varied with the length of the loop, starting between six for short loops and two for the longest loops. </plain></SENT>
<SENT sid="197" pm="."><plain>The loop quality was determined as the r.m.s.d. between the Cα atoms in the loops and those in the reference structure. </plain></SENT>
<SENT sid="198" pm="."><plain>Since we expect that the anchors are wrong when the gap consists of only one or two residues, for these small loops the gap was broadened on each side if possible. </plain></SENT>
<SENT sid="199" pm="."><plain>This effectively meant that we rebuilt the initial anchors. </plain></SENT>
</text></p><p><text><SENT sid="200" pm="."><plain>Table 2 ▶ shows that Loopy can build difficult regions of the structure. </plain></SENT>
<SENT sid="201" pm="."><plain>Thus, it adds many additional correct Cα atoms to the structure built by the protocol described in §4.2 without adding too many incorrect atoms. </plain></SENT>
<SENT sid="202" pm="."><plain>It should also be noted that in an iterative ARP/wARP run the wrong loops would be most likely removed or, in the context of flex-wARP, flagged as wrong by ElAl (Cohen et al., 2004 ▶). </plain></SENT>
<SENT sid="203" pm="."><plain>The time needed per structure varied from a couple of seconds to 4 min at the most. </plain></SENT>
</text></p><p><text><SENT sid="204" pm="."><plain>To quantify the quality of the built loops, we studied the r.m.s.d. of the Cα atoms per loop (see Fig. 8 ▶) and observed a decrease in the accuracy of the loops with resolution. </plain></SENT>
<SENT sid="205" pm="."><plain>For a resolution &lt;2.0 Å the median of the r.m.s.d. lies at 0.2 Å and it increases to 0.8 Å for resolutions lower than 3 Å. </plain></SENT>
<SENT sid="206" pm="."><plain>We furthermore observe that the value of the r.m.s.d. increases with the length of the loop; since only a few loops with a length of eight residues or more are available, the decrease in the median r.m.s.d. is hardly significant. </plain></SENT>
<SENT sid="207" pm="."><plain>In supplementary Fig. 2 ▶ 1, we show that the percentage of Cα atoms in each loop that lie within 0.7 Å of the reference structure is also very high. </plain></SENT>
</text></p></sec><sec id="sec4.3"><label>4.3.</label><title><text><SENT sid="208" pm="."><plain>Loop building within the ARP/wARP flex-wARP module </plain></SENT>
</text></title><p><text><SENT sid="209" pm="."><plain>As a final test, we implemented Loopy within the ARP/wARP flex-wARP module (Cohen et al., 2004 ▶) that was introduced in ARP/wARP release 7.0 (July 2007). </plain></SENT>
<SENT sid="210" pm="."><plain>In this flexible module of ARP/wARP, we could not only implement Loopy after the full ARP/wARP run but could also run Loopy internally after each model-building cycle. </plain></SENT>
<SENT sid="211" pm="."><plain>In this test, we want to establish whether the overall completeness of the models delivered by ARP/wARP increases when Loopy is run in every ARP/wARP model-building cycle. </plain></SENT>
<SENT sid="212" pm="."><plain>More precisely, each time the ARP/wARP main-chain tracing module is run and the resulting main-chain fragments are docked into sequence, all possible loops shorter than ten residues are built. </plain></SENT>
<SENT sid="213" pm="."><plain>After the final main-chain tracing cycle all possible loops shorter than 14 residues are built. </plain></SENT>
<SENT sid="214" pm="."><plain>For a set of 30 structures from the ARP/wARP test-cases deposition site (<ext-link ext-link-type="uri" xlink:href="http://xtal.nki.nl/Depot">http://xtal.nki.nl/Depot</ext-link>), the best possible results were compared with those of a flex-wARP run without Loopy. </plain></SENT>
<SENT sid="215" pm="."><plain>The results are displayed in Fig. 9 ▶. </plain></SENT>
<SENT sid="216" pm="."><plain>Usage of Loopy generally increases the completeness of the models, sometimes significantly, especially for higher resolution. </plain></SENT>
<SENT sid="217" pm="."><plain>In a small number of the cases the number of residues found using Loopy was slightly reduced. </plain></SENT>
</text></p></sec></sec></SecTag><SecTag type="DISCUSS"><sec sec-type="discussion|interpretation" id="sec5"><label>5.</label><title><text><SENT sid="218" pm="."><plain>Discussion </plain></SENT>
</text></title><p><text><SENT sid="219" pm="."><plain>We have shown that using the geometry of pentapeptides as a driving force combined with a hierarchical pruning algorithm is a powerful and accurate method for loop building. </plain></SENT>
<SENT sid="220" pm="."><plain>The validation of Loopy showed that for high-resolution data Loopy can rebuild parts of a structure up to 14 residues long with a median accuracy below 0.5 Å within a couple of minutes on a 2.66 GHz Pentium 4. </plain></SENT>
</text></p><p><text><SENT sid="221" pm="."><plain>During the tests on ‘real’ loops, we found that Loopy can build difficult regions and add to model completeness, especially at resolutions higher than 2.6 Å. </plain></SENT>
<SENT sid="222" pm="."><plain>The average r.m.s.d. of the Cα atoms in the loops lies around 0.5 Å, although the r.m.s.d. increases with the loop length. </plain></SENT>
<SENT sid="223" pm="."><plain>For lower resolution data, Loopy still improves the model completeness, but the number of Cα atoms further than 0.7 Å from their equivalents in the reference structure increases. </plain></SENT>
<SENT sid="224" pm="."><plain>Note, however, that at lower resolution the accuracy of position of the atoms in the reference structure also decreases. </plain></SENT>
</text></p><p><text><SENT sid="225" pm="."><plain>In the future, we would like to improve the performance of Loopy, in particular for lower resolution and longer loops. </plain></SENT>
<SENT sid="226" pm="."><plain>We have found that in these cases a failure to find the correct loop often originates from the pruning algorithm. </plain></SENT>
<SENT sid="227" pm="."><plain>When we verified our scoring function (see Fig. 10 ▶), we found that its (negative) correlation with the r.m.s.d. is not very strong. </plain></SENT>
<SENT sid="228" pm="."><plain>As a result, we are at present not able to use the scoring as a measure of accuracy or as an indicator for incorrect loops. </plain></SENT>
<SENT sid="229" pm="."><plain>We aim to rectify this in the future. </plain></SENT>
<SENT sid="230" pm="."><plain>Furthermore, we have found that for lower resolutions and for longer loops our method for finding main-chain atoms often fails to find any possible peptide plane. </plain></SENT>
<SENT sid="231" pm="."><plain>This may be caused by the selection criteria used in previous steps of the pruning algorithm or by the plane-search algorithm. </plain></SENT>
<SENT sid="232" pm="."><plain>We plan to study this problem and to try to improve the robustness of this part of the algorithm. </plain></SENT>
<SENT sid="233" pm="."><plain>Finally, we would like to remedy the exponential time and memory usage of Loopy. </plain></SENT>
<SENT sid="234" pm="."><plain>One idea is to check the distance to the opposite anchor point during the building of the tree and remove the suggested Cα atoms that are unlikely based on that distance. </plain></SENT>
<SENT sid="235" pm="."><plain>This should reduce the size of the loop tree generated and thereby reduce both the time and the memory usage. </plain></SENT>
<SENT sid="236" pm="."><plain>A first test with this idea shows that it will indeed increase the speed and as a side effect improve the accuracy of the loops. </plain></SENT>
<SENT sid="237" pm="."><plain>As a final remark we would like to note that Loopy is currently unable to build cis-peptides. </plain></SENT>
<SENT sid="238" pm="."><plain>The method we use to search the plane of the main-chain atoms of the peptide implies trans-peptides. </plain></SENT>
<SENT sid="239" pm="."><plain>We expect as well that the angles and torsions of a pentapeptide that includes a cis-peptide will deviate from the data that we have acquired. </plain></SENT>
</text></p><p><text><SENT sid="240" pm="."><plain>Overall, we conclude that Loopy is useful software that increases model completeness in automated model building. </plain></SENT>
<SENT sid="241" pm="."><plain>It is also a valuable tool for suggesting loop conformations during manual model building. </plain></SENT>
<SENT sid="242" pm="."><plain>Finally, it can facilitate the building of ensembles of loops and testing the idea of refining partial model ensembles along the lines suggested by Furnham et al. (2006 ▶). </plain></SENT>
</text></p></sec></SecTag><SecTag type="SUPPL"><sec sec-type="supplementary-material"><title><text><SENT sid="243" pm="."><plain>Supplementary Material </plain></SENT>
</text></title><supplementary-material content-type="local-data" xlink:href="d-64-00416-sup1.pdf" position="float" xlink:type="simple"><p><text><SENT sid="244" pm="."><plain>Supplementary material file. </plain></SENT>
<SENT sid="245" pm="."><plain>DOI: <ext-link ext-link-type="uri" xlink:type="simple" xlink:href="http://dx.doi.org/10.1107/S0907444908001558/gx5125sup1.pdf">10.1107/S0907444908001558/gx5125sup1.pdf</ext-link> </plain></SENT>
</text></p><media mimetype="application" mime-subtype="pdf" xlink:href="d-64-00416-sup1.pdf" position="float" xlink:type="simple"/></supplementary-material></sec></SecTag></body><back><fn-group><SecTag type="SUPPL"><fn id="fn1"><label>1</label><p><text><SENT sid="246" pm="."><plain>Supplementary material has been deposited in the IUCr electronic archive (Reference: <ext-link ext-link-type="uri" xlink:href="http://scripts.iucr.org/cgi-bin/sendsup?gx5125sup1.pdf">GX5125</ext-link>). </plain></SENT>
<SENT sid="247" pm="."><plain>Services for accessing this material are described at the back of the journal. </plain></SENT>
</text></p></fn></SecTag></fn-group><SecTag type="ACK_FUND"><ack><p><text4fund><text><SENT sid="248" pm="."><plain>We would like to thank Richard J. </plain></SENT>
<SENT sid="249" pm="."><plain>Morris for providing the tables for the tetrapeptides. </plain></SENT>
<SENT sid="250" pm="."><plain>This research was supported by the NIH (grant No. R01 GM62612). </plain></SENT>
<SENT sid="251" pm="."><plain>SXC thanks NWO/CW (VENI 700.55.405). </plain></SENT>
<SENT sid="252" pm="."><plain>This work was performed under the coordination of the EU BIOXHIT FW6 Integrated Project (grant No. </plain></SENT>
<SENT sid="253" pm="."><plain>LSHG-CT-2003-503420). </plain></SENT>
</text></text4fund></p></ack></SecTag><SecTag type="REF"><ref-list><title>References</title><ref id="bb1"><text><SENT sid="254" pm="."><plain>Bakker, P. </plain></SENT>
<SENT sid="255" pm="."><plain>I. de, Furnham, N., Blundell, T. </plain></SENT>
<SENT sid="256" pm="."><plain>L. &amp; DePristo, M. </plain></SENT>
<SENT sid="257" pm="."><plain>A. </plain></SENT>
<SENT sid="258" pm="."><plain>(2006). Curr. </plain></SENT>
<SENT sid="259" pm="."><plain>Opin. </plain></SENT>
<SENT sid="260" pm="."><plain>Struct. </plain></SENT>
<SENT sid="261" pm="."><plain>Biol.16, 160–165. </plain></SENT>
</text></ref><ref id="bb2"><text><SENT sid="262" pm="."><plain>Bedem, H. van den, Lotan, I., Latombe, J.-C. &amp; Deacon, A. </plain></SENT>
<SENT sid="263" pm="."><plain>M. </plain></SENT>
<SENT sid="264" pm="."><plain>(2005). Acta Cryst. D61, 2–13. </plain></SENT>
</text></ref><ref id="bb3"><text><SENT sid="265" pm="."><plain>Cohen, S. </plain></SENT>
<SENT sid="266" pm="."><plain>X., Morris, R. </plain></SENT>
<SENT sid="267" pm="."><plain>J., Fernandez, F. </plain></SENT>
<SENT sid="268" pm="."><plain>J., Ben Jelloul, M., Kakaris, M., Parthasarathy, V., Lamzin, V. </plain></SENT>
<SENT sid="269" pm="."><plain>S., Kleywegt, G. </plain></SENT>
<SENT sid="270" pm="."><plain>J. &amp; Perrakis, A. </plain></SENT>
<SENT sid="271" pm="."><plain>(2004). Acta Cryst. D60, 2222–2229. </plain></SENT>
</text></ref><ref id="bb4"><text><SENT sid="272" pm="."><plain>Cowtan, K. </plain></SENT>
<SENT sid="273" pm="."><plain>(2003). IUCr CompComm. </plain></SENT>
<SENT sid="274" pm="."><plain>Newslett.2, 4–9. </plain></SENT>
</text></ref><ref id="bb5"><text><SENT sid="275" pm="."><plain>Cowtan, K. </plain></SENT>
<SENT sid="276" pm="."><plain>(2006). Acta Cryst. D62, 1002–1011. </plain></SENT>
</text></ref><ref id="bb6"><text><SENT sid="277" pm="."><plain>DePristo, M. </plain></SENT>
<SENT sid="278" pm="."><plain>A., de Bakker, P. </plain></SENT>
<SENT sid="279" pm="."><plain>I. &amp; Blundell, T. </plain></SENT>
<SENT sid="280" pm="."><plain>L. </plain></SENT>
<SENT sid="281" pm="."><plain>(2004). Structure, 12, 831–838. </plain></SENT>
</text></ref><ref id="bb7"><text><SENT sid="282" pm="."><plain>Emsley, P. &amp; Cowtan, K. </plain></SENT>
<SENT sid="283" pm="."><plain>(2004). Acta Cryst. D60, 2126–2132. </plain></SENT>
</text></ref><ref id="bb8"><text><SENT sid="284" pm="."><plain>Esnouf, R. </plain></SENT>
<SENT sid="285" pm="."><plain>M. </plain></SENT>
<SENT sid="286" pm="."><plain>(1997). Acta Cryst. D53, 665–672. </plain></SENT>
</text></ref><ref id="bb9"><text><SENT sid="287" pm="."><plain>Furnham, N., Blundell, T. </plain></SENT>
<SENT sid="288" pm="."><plain>L., DePristo, M. </plain></SENT>
<SENT sid="289" pm="."><plain>A. &amp; Terwilliger, T. </plain></SENT>
<SENT sid="290" pm="."><plain>C. </plain></SENT>
<SENT sid="291" pm="."><plain>(2006). Nature Struct. </plain></SENT>
<SENT sid="292" pm="."><plain>Mol. </plain></SENT>
<SENT sid="293" pm="."><plain>Biol.13, 184–185. </plain></SENT>
</text></ref><ref id="bb10"><text><SENT sid="294" pm="."><plain>Ioerger, T. </plain></SENT>
<SENT sid="295" pm="."><plain>R., Holton, T., Christopher, J. </plain></SENT>
<SENT sid="296" pm="."><plain>A. &amp; Sacchettini, J. </plain></SENT>
<SENT sid="297" pm="."><plain>C. </plain></SENT>
<SENT sid="298" pm="."><plain>(1999). Proceedings of the Seventh International Conference on Intelligent Systems for Molecular Biology, edited by T. </plain></SENT>
<SENT sid="299" pm="."><plain>Lengauer, R. </plain></SENT>
<SENT sid="300" pm="."><plain>Schneider, P. </plain></SENT>
<SENT sid="301" pm="."><plain>Bork, D. </plain></SENT>
<SENT sid="302" pm="."><plain>Brutlag, J. </plain></SENT>
<SENT sid="303" pm="."><plain>Glasgow, H.-W. </plain></SENT>
<SENT sid="304" pm="."><plain>Mewes &amp; R. </plain></SENT>
<SENT sid="305" pm="."><plain>Zimmer, pp. </plain></SENT>
<SENT sid="306" pm="."><plain>130–137. </plain></SENT>
<SENT sid="307" pm="."><plain>Menlo Park, USA: AAAI Press. </plain></SENT>
</text></ref><ref id="bb11"><text><SENT sid="308" pm="."><plain>Jones, T. </plain></SENT>
<SENT sid="309" pm="."><plain>A. &amp; Liljas, L. </plain></SENT>
<SENT sid="310" pm="."><plain>(1984). Acta Cryst. A40, 50–57. </plain></SENT>
</text></ref><ref id="bb12"><text><SENT sid="311" pm="."><plain>Jones, T. </plain></SENT>
<SENT sid="312" pm="."><plain>A., Zou, J.-Y., Cowan, S. </plain></SENT>
<SENT sid="313" pm="."><plain>W. &amp; Kjeldgaard, M. </plain></SENT>
<SENT sid="314" pm="."><plain>(1991). Acta Cryst. A47, 110–119. </plain></SENT>
</text></ref><ref id="bb13"><text><SENT sid="315" pm="."><plain>Kelly, K. </plain></SENT>
<SENT sid="316" pm="."><plain>(2008). Protein Structure Validation and Analysis. http://www.chemcomp.com/journal/provalid.htm. </plain></SENT>
</text></ref><ref id="bb14"><text><SENT sid="317" pm="."><plain>Kleywegt, G. </plain></SENT>
<SENT sid="318" pm="."><plain>J. </plain></SENT>
<SENT sid="319" pm="."><plain>(1997). J. </plain></SENT>
<SENT sid="320" pm="."><plain>Mol. </plain></SENT>
<SENT sid="321" pm="."><plain>Biol.273, 371–376. </plain></SENT>
</text></ref><ref id="bb15"><text><SENT sid="322" pm="."><plain>Levitt, D. </plain></SENT>
<SENT sid="323" pm="."><plain>G. </plain></SENT>
<SENT sid="324" pm="."><plain>(2001). Acta Cryst. D57, 1013–1019. </plain></SENT>
</text></ref><ref id="bb16"><text><SENT sid="325" pm="."><plain>Morris, R. </plain></SENT>
<SENT sid="326" pm="."><plain>J. </plain></SENT>
<SENT sid="327" pm="."><plain>(2000). </plain></SENT>
<SENT sid="328" pm="."><plain>PhD thesis. </plain></SENT>
<SENT sid="329" pm="."><plain>Karl-Franzens-Universität, Graz, Austria. </plain></SENT>
</text></ref><ref id="bb17"><text><SENT sid="330" pm="."><plain>Morris, R. </plain></SENT>
<SENT sid="331" pm="."><plain>J., Perrakis, A. &amp; Lamzin, V. </plain></SENT>
<SENT sid="332" pm="."><plain>S. </plain></SENT>
<SENT sid="333" pm="."><plain>(2002). Acta Cryst. D58, 968–975. </plain></SENT>
</text></ref><ref id="bb18"><text><SENT sid="334" pm="."><plain>Perrakis, A., Morris, R. &amp; Lamzin, V. </plain></SENT>
<SENT sid="335" pm="."><plain>S. </plain></SENT>
<SENT sid="336" pm="."><plain>(1999). Nature Struct. </plain></SENT>
<SENT sid="337" pm="."><plain>Biol.6, 458–463. </plain></SENT>
</text></ref><ref id="bb19"><text><SENT sid="338" pm="."><plain>Ramachandran, G. </plain></SENT>
<SENT sid="339" pm="."><plain>N., Ramakrishnan, C. &amp; Sasisekharan, V. </plain></SENT>
<SENT sid="340" pm="."><plain>(1963). J. </plain></SENT>
<SENT sid="341" pm="."><plain>Mol. </plain></SENT>
<SENT sid="342" pm="."><plain>Biol.7, 95–99. </plain></SENT>
</text></ref><ref id="bb20"><text><SENT sid="343" pm="."><plain>Terwilliger, T. </plain></SENT>
<SENT sid="344" pm="."><plain>C. </plain></SENT>
<SENT sid="345" pm="."><plain>(2003a). Acta Cryst. D59, 38–44. </plain></SENT>
</text></ref><ref id="bb21"><text><SENT sid="346" pm="."><plain>Terwilliger, T. </plain></SENT>
<SENT sid="347" pm="."><plain>C. </plain></SENT>
<SENT sid="348" pm="."><plain>(2003b). Acta Cryst. D59, 45–49. </plain></SENT>
</text></ref><ref id="bb22"><text><SENT sid="349" pm="."><plain>Terwilliger, T. </plain></SENT>
<SENT sid="350" pm="."><plain>C., Grosse-Kunstleve, R. </plain></SENT>
<SENT sid="351" pm="."><plain>W., Afonine, P. </plain></SENT>
<SENT sid="352" pm="."><plain>V., Adams, P. </plain></SENT>
<SENT sid="353" pm="."><plain>D., Moriarty, N. </plain></SENT>
<SENT sid="354" pm="."><plain>W., Zwart, P., Read, R. </plain></SENT>
<SENT sid="355" pm="."><plain>J., Turk, D. &amp; Hung, L.-W. </plain></SENT>
<SENT sid="356" pm="."><plain>(2007). Acta Cryst. D63, 597–610. </plain></SENT>
</text></ref><ref id="bb23"><text><SENT sid="357" pm="."><plain>Whaley, R. </plain></SENT>
<SENT sid="358" pm="."><plain>C. &amp; Petitet, A. </plain></SENT>
<SENT sid="359" pm="."><plain>(2005). Software Pract. </plain></SENT>
<SENT sid="360" pm="."><plain>Exp.35, 101–121. </plain></SENT>
</text></ref><ref id="bb24"><text><SENT sid="361" pm="."><plain>Yao, M., Zhou, Y. &amp; Tanaka, I. </plain></SENT>
<SENT sid="362" pm="."><plain>(2006). Acta Cryst. D62, 189–196. </plain></SENT>
</text></ref></ref-list></SecTag></back><floats-wrap><SecTag type="FIG"><fig id="fig1" position="float"><label>Figure 1</label><caption><p>Angles and dihedral angles of the C<sup>α</sup> atoms in a tetrapeptide or pentapeptide.</p></caption><graphic xlink:href="d-64-00416-fig1"/></fig></SecTag><SecTag type="FIG"><fig id="fig2" position="float"><label>Figure 2</label><caption><p>Logarithmic occurrence of angle and dihedral angle of the C<sup>α</sup> atoms in tetrapeptides.</p></caption><graphic xlink:href="d-64-00416-fig2"/></fig></SecTag><SecTag type="FIG"><fig id="fig3" position="float"><label>Figure 3</label><caption><p>Examples of the logarithmic occurrence of angle and dihedral angle of the C<sup>α</sup> atoms in pentapeptides.</p></caption><graphic xlink:href="d-64-00416-fig3"/></fig></SecTag><SecTag type="FIG"><fig id="fig4" position="float"><label>Figure 4</label><caption><p>Flowchart of <italic>Loopy</italic>.</p></caption><graphic xlink:href="d-64-00416-fig4"/></fig></SecTag><SecTag type="FIG"><fig id="fig5" position="float"><label>Figure 5</label><caption><p>Example of possible points <italic>p</italic> from an existing candidate terminal C<sup>α</sup> atom (large grey sphere) in stereographic view. Candidate positions are shown as smaller spheres using a ‘heat’ colour scheme: blue refers to a low score and red to a high score.</p></caption><graphic xlink:href="d-64-00416-fig5"/></fig></SecTag><SecTag type="FIG"><fig id="fig6" position="float"><label>Figure 6</label><caption><p>Example of loops for <ext-link ext-link-type="uri" xlink:href="http://scripts.iucr.org/cgi-bin/cr.cgi?rm=pdb&amp;pdbId=1lml">1lml</ext-link> between residue 35 and 43 in stereographic view. The pink loop is the reference structure, the green loop is the loop with the highest score and grey loops are alternative loops. (<italic>a</italic>) Before and (<italic>b</italic>) after real-space refinement.</p></caption><graphic xlink:href="d-64-00416-fig6"/></fig></SecTag><SecTag type="FIG"><fig id="fig7" position="float"><label>Figure 7</label><caption><p>For validation purposes, portions of the original structure were rebuilt. This plot shows the r.m.s.d. of all atoms in a loop <italic>versus</italic> its number of residues. The median is displayed as a thick bar, the first and third quartile are represented by the rectangle and the minimum and maximum are shown by the caps of the dotted lines. Outliers are determined as 1.5 times the interquartile range. They are displayed as circles.</p></caption><graphic xlink:href="d-64-00416-fig7"/></fig></SecTag><SecTag type="FIG"><fig id="fig8" position="float"><label>Figure 8</label><caption><p>The C<sup>α</sup> r.m.s.d. of the loops built by <italic>Loopy</italic> on models computed using the protocol described in §<xref ref-type="sec" rid="sec4.2"/>4.2 are displayed against the resolution (<italic>a</italic>) and the loop length (<italic>b</italic>). The C<sup>α</sup> r.m.s.d. clearly increases with the resolution. For the loop length, the number of loops per length (given above the median line in the box plot) is insufficient to derive any statistical conclusions for the C<sup>α</sup> r.m.s.d. as a function of the loop length. (See the caption of Fig. 7<xref ref-type="fig" rid="fig7"> ▶</xref> for an explanation of the box plot).</p></caption><graphic xlink:href="d-64-00416-fig8"/></fig></SecTag><SecTag type="FIG"><fig id="fig9" position="float"><label>Figure 9</label><caption><p>Extra correct residues built with <italic>Loopy</italic> integrated within <italic>flex-wARP</italic> compared with models created by <italic>flex-wARP</italic> without<italic> Loopy.</italic>
               </p></caption><graphic xlink:href="d-64-00416-fig9"/></fig></SecTag><SecTag type="FIG"><fig id="fig10" position="float"><label>Figure 10</label><caption><p>The scoring function is plotted against the r.m.s.d. of the C<sup>α</sup> atoms per loop built by <italic>Loopy</italic> after the protocol described in §<xref ref-type="sec" rid="sec4.2"/>4.2. The figure displays a negative correlation. The symbols in the plot represent the percentage of C<sup>α</sup> atoms in a loop that are within 0.7 Å of the reference.</p></caption><graphic xlink:href="d-64-00416-fig10"/></fig></SecTag><SecTag type="TABLE"><table-wrap id="table1" position="float"><label>Table 1</label><caption><title>Nodes per extension and average time per number of residues</title><p>The default choices for the maximum number of point per extension, <italic>p</italic>
                  <sub>max</sub>, for each loop length are shown in bold. Time is the average time per loop for about 100 loops in each case, including real-space refinement. The success rate is calculated as the percentage of times that <italic>Loopy</italic> actually returned a solution. R.m.s.d. C<sup>α</sup> is the root-mean-square deviation from the final structure for all built loops after real-space refinement.</p></caption></table-wrap></SecTag><SecTag type="TABLE"><table-wrap id="table2" position="float"><label>Table 2</label><caption><title>The results of the testing protocol described in §<xref ref-type="sec" rid="sec4.2"/>4.2</title><p>
                  <italic>R</italic>, resolution; <italic>f</italic>, number of residues in the final model. We firstly show the results after running the main-chain and side-chain building modules of <italic>ARP</italic>/<italic>wARP</italic> alone (<italic>C</italic>, chains; <italic>r</italic>, correct residues) and then we indicate the same numbers after running <italic>Loopy</italic> [<italic>C</italic>(<italic>L</italic>), <italic>r</italic>(<italic>L</italic>)]; <italic>t</italic>, time.</p></caption></table-wrap></SecTag></floats-wrap></article>
