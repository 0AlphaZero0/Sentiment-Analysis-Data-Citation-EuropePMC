
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?><?DTDIdentifier.IdentifierType public?><?SourceDTD.DTDName A++V2.4.dtd?><?SourceDTD.Version 2.4?><?ConverterInfo.XSLTName springer2nlmx2.xsl?><?ConverterInfo.Version 2?><front><journal-meta><journal-id journal-id-type="nlm-ta">J Mol Model</journal-id><journal-title-group><journal-title>Journal of Molecular Modeling</journal-title></journal-title-group><issn pub-type="ppub">1610-2940</issn><issn pub-type="epub">0948-5023</issn><publisher><publisher-name>Springer-Verlag</publisher-name><publisher-loc>Berlin/Heidelberg</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">2712621</article-id><article-id pub-id-type="pmid">19234730</article-id><article-id pub-id-type="publisher-id">454</article-id><article-id pub-id-type="doi">10.1007/s00894-009-0454-9</article-id><article-categories><subj-group subj-group-type="heading"><subject>Original Paper</subject></subj-group></article-categories><title-group><article-title><SecTag type="TITLE"><text><SENT sid="0" pm="."><plain>Solvent accessible surface area approximations for rapid and accurate protein structure prediction </plain></SENT>
</text></SecTag></article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Durham</surname><given-names>Elizabeth</given-names></name><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author"><name><surname>Dorr</surname><given-names>Brent</given-names></name><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author"><name><surname>Woetzel</surname><given-names>Nils</given-names></name><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author"><name><surname>Staritzbichler</surname><given-names>René</given-names></name><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author" corresp="yes"><name><surname>Meiler</surname><given-names>Jens</given-names></name><address><phone>+1-615-9365662</phone><fax>+1-615-9362211</fax><email>jens.meiler@vanderbilt.edu</email><uri>http://www.meilerlab.org/</uri></address><xref ref-type="aff" rid="Aff1">1</xref><xref ref-type="aff" rid="Aff2">2</xref></contrib><aff id="Aff1"><label>1</label>Departments of Chemistry, Pharmacology, and Biomedical Informatics and Center for Structural Biology, Vanderbilt University, 465 21st Ave South, BioSci/MRB III, Room 5144B, Nashville, TN 37232-8725 USA </aff><aff id="Aff2"><label>2</label>Department of Chemistry, VU Station B # 351822, Vanderbilt University, 7330 Stevenson Center, Nashville, TN 37235-1822 USA </aff></contrib-group><pub-date pub-type="epub"><day>21</day><month>2</month><year>2009</year></pub-date><pub-date pub-type="pmc-release"><day>21</day><month>2</month><year>2009</year></pub-date><pub-date pub-type="ppub"><month>9</month><year>2009</year></pub-date><volume>15</volume><issue>9</issue><fpage>1093</fpage><lpage>1108</lpage><history><date date-type="received"><day>16</day><month>11</month><year>2008</year></date><date date-type="accepted"><day>2</day><month>1</month><year>2009</year></date></history><permissions><copyright-statement>© The Author(s) 2009</copyright-statement></permissions><abstract id="Abs1"><p><SecTag type="ABS"><text><SENT sid="1" pm="."><plain>The burial of hydrophobic amino acids in the protein core is a driving force in protein folding. </plain></SENT>
<SENT sid="2" pm="."><plain>The extent to which an amino acid interacts with the solvent and the protein core is naturally proportional to the surface area exposed to these environments. </plain></SENT>
<SENT sid="3" pm="."><plain>However, an accurate calculation of the solvent-accessible surface area (SASA), a geometric measure of this exposure, is numerically demanding as it is not pair-wise decomposable. </plain></SENT>
<SENT sid="4" pm="."><plain>Furthermore, it depends on a full-atom representation of the molecule. </plain></SENT>
<SENT sid="5" pm="."><plain>This manuscript introduces a series of four SASA approximations of increasing computational complexity and accuracy as well as knowledge-based environment free energy potentials based on these SASA approximations. </plain></SENT>
<SENT sid="6" pm="."><plain>Their ability to distinguish correctly from incorrectly folded protein models is assessed to balance speed and accuracy for protein structure prediction. </plain></SENT>
<SENT sid="7" pm="."><plain>We find the newly developed “Neighbor Vector” algorithm provides the most optimal balance of accurate yet rapid exposure measures. </plain></SENT>
</text></SecTag></p></abstract><SecTag type="KEYWORD"><kwd-group><title>Keywords</title><kwd>Environment free energy</kwd><kwd>Protein structure prediction</kwd><kwd>Solvent accessible surface area</kwd></kwd-group></SecTag><custom-meta-group><custom-meta><meta-name>issue-copyright-statement</meta-name><meta-value>© Springer-Verlag 2009</meta-value></custom-meta></custom-meta-group></article-meta></front><body><SecTag type="INTRO"><sec id="Sec1"><title><text><SENT sid="8" pm="."><plain>Introduction </plain></SENT>
</text></title><sec id="Sec2"><title><text><SENT sid="9" pm="."><plain>Computational protein structure prediction gains importance in the post-genomic area </plain></SENT>
</text></title><p><text><SENT sid="10" pm="."><plain>Genome sequencing has provided a wealth of information about the amino acid sequence of proteins. </plain></SENT>
<SENT sid="11" pm="."><plain>While x-ray crystallography and nuclear magnetic resonance spectroscopy made great progress in elucidating the structure of many of these proteins, these experimental techniques are laborious and are not feasible for use on all proteins [1]. </plain></SENT>
<SENT sid="12" pm="."><plain>In particular, membrane proteins, which comprise greater than 50% of all drug targets [2], and large protein complexes evade experimental structure elucidation. </plain></SENT>
<SENT sid="13" pm="."><plain>While up to 35% of all proteins are membrane proteins [3], less than 2% of structures deposited in the PDB belong to this class (as of 02/2008). </plain></SENT>
<SENT sid="14" pm="."><plain>Therefore, there has been an increased demand for computational methods to predict the structure for such proteins and to assist in structure elucidation from sparse or low-resolution experimental data generated by complementary techniques such as electron paramagnetic resonance spectroscopy [4], x-ray crystallography [5], and cryo-electron microscopy [5]. </plain></SENT>
</text></p><p><text><SENT sid="15" pm="."><plain>Protein structure prediction techniques can be categorized into comparative modeling techniques that build a model of the target protein based on the known structure of a related template protein, and de novo structure prediction techniques that can be used in the absence of a suitable template structure [6]. </plain></SENT>
<SENT sid="16" pm="."><plain>Proteins usually fold into the conformation with the lowest free energy, so protein structure prediction is essentially a search amongst all possible conformations of an amino acid sequence for the conformation with the lowest free energy. </plain></SENT>
<SENT sid="17" pm="."><plain>While both classes of protein structure prediction techniques depend critically on energy functions to evaluate the candidate conformations (also commonly called models), de novo structure prediction in particular requires very rapid yet accurate energy evaluation functions in order to search a large conformational space in a short period of time [6]. </plain></SENT>
<SENT sid="18" pm="."><plain>These energy evaluation functions approximate the energy of a given protein model and thus provide a way to “score” each model. </plain></SENT>
<SENT sid="19" pm="."><plain>Both comparative modeling and de novo structure prediction methods have been evaluated in recent critical assessment of structure prediction (CASP) experiments [7] during which computational methods have repeatedly predicted protein structures de novo to within 5 Å \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_ \propto $$\end{document}rmsd [8]. </plain></SENT>
</text></p></sec><sec id="Sec3"><title><text><SENT sid="20" pm="."><plain>Knowledge-based energy functions allow accurate and rapid calculation of classical energy terms </plain></SENT>
</text></title><p><text><SENT sid="21" pm="."><plain>Energetic terms, such as hydrogen bonding, electrostatics, and van der Waals forces contribute to the interactions of atoms within a protein as well as between the protein and solvent [9]. </plain></SENT>
<SENT sid="22" pm="."><plain>While molecular mechanics force-fields seek to individually describe each of these starting from first principles, knowledge-based potentials (KBPs) seek to derive energy functions that describe the net effect of all these contributions in a specific setting, e.g., protein structures [10]. </plain></SENT>
<SENT sid="23" pm="."><plain>Hence, they approximate the overall free energy more generally, and frequently encompass multiple classical energy terms associated with a physical interaction [11]. </plain></SENT>
<SENT sid="24" pm="."><plain>KBPs have been shown to be an effective alternative to using atomic solvation parameters to more precisely model the folding process [12]. </plain></SENT>
</text></p><p><text><SENT sid="25" pm="."><plain>KBPs relate the probability of a conformation to the energy associated with that conformation using an inverse Boltzmann relation [13]: \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\Delta G = - RT\,\ln \,{\text{P}}$$\end{document}which provides a means for the derivation of a free energy from a propensity. </plain></SENT>
<SENT sid="26" pm="."><plain>Advantages of knowledge-based potentials include the comprehensive and unbiased inclusion of all experimentally elucidated protein structures. </plain></SENT>
<SENT sid="27" pm="."><plain>Disadvantages are the requirement of a vast knowledge-base [11], potential biases in the knowledge-base that translate into the potentials [11], and difficulty aligning components of the knowledge-based energy contributions with classical energy terms [11]. </plain></SENT>
<SENT sid="28" pm="."><plain>Nevertheless, the widespread use of knowledge-based free energy potentials in predicting protein structure [14–18], protein-protein interactions [19, 20], protein-ligand interactions [21–24], and in protein design [25, 26] underlines their success in recent years. </plain></SENT>
<SENT sid="29" pm="."><plain>Knowledge-based energy terms have been derived for all levels of protein architecture, most notably atoms [15, 27], amino acids [18], secondary structure elements [28], and the overall protein fold [29]. </plain></SENT>
<SENT sid="30" pm="."><plain>Often, several of these knowledge-based free energy approximations are linearly combined into a single composite energy function without addressing the certain overlap between the individual terms that results from the description of the same classical terms, mostly on different levels of architecture. </plain></SENT>
</text></p></sec><sec id="Sec4"><title><text><SENT sid="31" pm="."><plain>Amino acid environment energy depends on an accurate yet rapid estimation of solvent accessible surface area (SASA) </plain></SENT>
</text></title><p><text><SENT sid="32" pm="."><plain>The amino acid “environment free energy” [30, 31] encompasses amino acid interactions with the solvent (solvation) as well as with the protein core and integrates hydrogen bonding, electrostatics, and van der Waals forces among others. </plain></SENT>
<SENT sid="33" pm="."><plain>It is an important driving force in protein folding as it maps to effects like surface area minimization, burial of hydrophobic side chains, and side-chain packing density [30]. </plain></SENT>
</text></p><p><text><SENT sid="34" pm="."><plain>The extent to which an amino acid interacts with its environment, the solvent and the protein core, is naturally proportional to the degree to which it is exposed to these environments [32]. </plain></SENT>
<SENT sid="35" pm="."><plain>The solvent-accessible surface area (SASA) is a geometric measure of this exposure, and therefore a dependency exists between SASA and environment free energy [33, 34]; some approaches even assume a strictly linear relation between the two values [32, 35]. </plain></SENT>
<SENT sid="36" pm="."><plain>An explicit calculation of the SASA is computationally intractable as this value is, by nature, not pair-wise decomposable [36]. </plain></SENT>
<SENT sid="37" pm="."><plain>Hence an accurate but pair-wise decomposable approximation of SASA is often used in conjunction with KBPs to describe environment free energy [18]. </plain></SENT>
</text></p></sec><sec id="Sec5"><title><text><SENT sid="38" pm="."><plain>A precise calculation of solvent accessible surface area is numerically demanding and not practical for computational protein structure prediction </plain></SENT>
</text></title><p><text><SENT sid="39" pm="."><plain>SASA is typically calculated by methods involving the in-silico rolling of a spherical probe, which approximates a water molecule, around a full-atom protein model. </plain></SENT>
<SENT sid="40" pm="."><plain>Lee and Richards presented the first algorithm for calculating the solvent-accessible surface area (SASA) of a molecular surface [37]. </plain></SENT>
<SENT sid="41" pm="."><plain>Their method involved the extension of the van der Waals radius for each atom by 1.4 Å (the radius of a polar solvent probe) and the calculation of the surface area of these expanded-radius atoms. </plain></SENT>
<SENT sid="42" pm="."><plain>The Shrake and Rupley algorithm [38] involves the testing of points on an atom’s van der Waals surface for overlap with points on the van der Waals surface of neighboring atoms. </plain></SENT>
<SENT sid="43" pm="."><plain>Many SASA approximations have been developed including spline approximations [39] and approximations that take advantage of boolean logic and look-up tables [40]. </plain></SENT>
<SENT sid="44" pm="."><plain>Wodak and Janin’s statistical SASA approximation algorithm is a function of only interatomic distances that approximates each amino acid by one sphere at the center of mass [41]. </plain></SENT>
<SENT sid="45" pm="."><plain>Many approaches employ a lattice surrounding the protein to approximate its SASA [42–44]. </plain></SENT>
</text></p><p><text><SENT sid="46" pm="."><plain>A pairwise-decomposable method of SASA approximation is desirable as it can then be employed in minimization approaches, such as dead end elimination. </plain></SENT>
<SENT sid="47" pm="."><plain>One SASA approximation that achieves this criteria is the method of Street and Mayo in which a scaled two-body approximation of the buried area is subtracted from the total surface area in order to approximate SASA [36]. </plain></SENT>
<SENT sid="48" pm="."><plain>The method of Zhang et al. improved upon the Street and Mayo method by accounting for its shortcoming, the overlapping burial of core residues. </plain></SENT>
<SENT sid="49" pm="."><plain>Areas were calculated in the presence of generic side chains rather than the backbone alone, which reduced the error of the area calculations [45]. </plain></SENT>
<SENT sid="50" pm="."><plain>One of the more efficient non-pairwise-decomposable algorithms is the maximal speed molecular surfaces (MSMS) algorithm which fits spherical and toroidal patches onto the surfaces of atoms based on which points on the atom are accessible to a spherical probe that approximates a solvent molecule [46]. </plain></SENT>
</text></p><p><text><SENT sid="51" pm="."><plain>Several approximations for burial are based upon “neighborhood densities [47],” a weighted sum of neighboring atoms, which take advantage of the idea that neighborhood density is inversely related to SASA. </plain></SENT>
<SENT sid="52" pm="."><plain>The method used to approximate burial in an early version of Rosetta, a state-of-the-art protein structure prediction algorithm, uses the number of \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta $$\end{document} atoms within 10 Å of the \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta $$\end{document} of the amino acid of interest [18]. </plain></SENT>
<SENT sid="53" pm="."><plain>Since that time, this has been modified slightly so that centroids, pseudo-atoms located at the side chain’s center of mass, rather than \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta {\text{s}}$$\end{document} are used [48]. </plain></SENT>
<SENT sid="54" pm="."><plain>Other work has examined various burial approximations and found that the number of \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta $$\end{document} atoms within 14 Å of the \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta $$\end{document} of the amino acid of interest is most conserved in structural alignments, most predictable from amino acid sequence, and provides the greatest utility in fold recognition and sequence alignment [49]. </plain></SENT>
<SENT sid="55" pm="."><plain>A shortcoming of burial approximations is their inability to take into account the spatial orientation of neighboring atoms (illustrated in Fig. 3). </plain></SENT>
<SENT sid="56" pm="."><plain>A method that calculates burial by examining neighborhood densities in four different tetrahedral directions attempts to address this shortcoming [50]. </plain></SENT>
<SENT sid="57" pm="."><plain>The “neighbor vector” algorithm introduced in this manuscript attempts to address this shortcoming as well. </plain></SENT>
</text></p><p><text><SENT sid="58" pm="."><plain>As is evidenced by the wealth of related literature, this area has been researched extensively and many SASA approximations have been developed. </plain></SENT>
<SENT sid="59" pm="."><plain>While many of the discussed methods are very accurate, they are also time-consuming and not tractable for use in protein structure prediction, where thousands of protein models need to be evaluated. </plain></SENT>
<SENT sid="60" pm="."><plain>Additionally, the majority of these methods work on full-atom protein models whereas reduced amino acid representations are often used in early stages of protein structure prediction. </plain></SENT>
<SENT sid="61" pm="."><plain>Finally, many of these methods return the SASA of the protein model as a whole rather than the SASA of each amino acid (known as rSASA or per-residue SASA), which is necessary in order to take advantage of the knowledge-based potentials. </plain></SENT>
</text></p><p><text><SENT sid="62" pm="."><plain>In this manuscript, the authors seek to build upon several of these approaches and refine them specifically for use in protein structure prediction. </plain></SENT>
<SENT sid="63" pm="."><plain>While this manuscript focuses on the benefits of a rapid SASA approximation method for protein folding, there are additional areas that would benefit from such a method, such as protein binding and design. </plain></SENT>
<SENT sid="64" pm="."><plain>Specifically, hydrophobic surface patches, which are important in molecular recognition processes, constitute up to 60% of the SASA of a protein, and methods for their rapid identification based on SASA calculation have been developed [51]. </plain></SENT>
<SENT sid="65" pm="."><plain>The rSASA calculated by the MSMS algorithm is used as reference standard throughout the present work. </plain></SENT>
</text></p></sec><sec id="Sec6"><title><text><SENT sid="66" pm="."><plain>Four SASA approximation algorithms are presented that reflect the trade-off between accuracy and speed </plain></SENT>
</text></title><p><text><SENT sid="67" pm="."><plain>This manuscript systematically introduces and compares a series of rSASA approximations of increasing complexity. </plain></SENT>
<SENT sid="68" pm="."><plain>KBPs describing the environment free energy of an amino acid in dependence of these SASA approximations have been derived. </plain></SENT>
<SENT sid="69" pm="."><plain>All approximations are examined in terms of both runtime and the ability to discriminate native-like from nonnative-like protein models obtained in structure prediction applications, in order to fine-tune the balance between algorithm speed and accuracy. </plain></SENT>
</text></p></sec></sec></SecTag><SecTag type="METHODS"><sec id="Sec7" sec-type="materials|methods"><title><text><SENT sid="70" pm="."><plain>Materials and methods </plain></SENT>
</text></title><sec id="Sec8"><title><text><SENT sid="71" pm="."><plain>Exposure algorithms of increasing complexity </plain></SENT>
</text></title><p><text><SENT sid="72" pm="."><plain>Neighbor count (NC) The central idea behind the neighbor count algorithm is that the number of neighboring amino acids is inversely proportional to the exposure of an amino acid. </plain></SENT>
<SENT sid="73" pm="."><plain>The definition of a “neighbor” is expanded in this work by assigning a weight between 0.0 and 1.0 to all amino acids in the protein model based on their proximity to the amino acid of interest. </plain></SENT>
<SENT sid="74" pm="."><plain>A lower boundary and an upper boundary are chosen such that all amino acids whose \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta $$\end{document} lies at a distance less than or equal to the lower boundary are assigned a neighbor weight of 1.0 (i.e., they are counted as complete neighbors), amino acids whose \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta $$\end{document} lies at distance greater than the upper boundary are assigned a neighbor weight of 0.0 (i.e. they are not considered neighbors at all), and amino acids whose \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta $$\end{document} lies at a distance between the lower and upper bounds are assigned a weight between 0.0 and 1.0 (see Fig. 1). </plain></SENT>
<SENT sid="75" pm="."><plain>For glycine, a pseudo- \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta $$\end{document} atom is introduced at the geometric position where an actual \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta $$\end{document} would sit. </plain></SENT>
<SENT sid="76" pm="."><plain>This expansion of the definition of “neighbor” allows for amino acids that are spatially close to the amino acid of interest to have a greater weight in determining the neighbor count keeping the potential continuously differentiable at the same time, a characteristic essential for gradient-based minimization. \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$NeighborWeight(distance,\,\,lower\,bound,\,upper\,bound) = \left\{ {\begin{array}{*{20}c} {{1,\,if\,distance \leqslant lower\,bound}} \\ {{\frac{1}{2}{\left[ {cos{\left( {\frac{{distance - lower\,bound}}{{upper\,bound - lower\,bound}} \times \pi } \right)} + 1} \right]},}} \\ {{if\,lower\,bound &lt; distance &lt; upper\,bound}} \\ {{\,\,\,\,\,\,\,\,\,\,\,\,0,\,if\,distance\, \geqslant upper\,bound}} \\ \end{array} } \right.$$\end{document}Fig. 1This figure depicts ways in which a “neighboring” amino acid can be defined. a) Previous work uses a step function with a hard boundary to determine which amino acids are neighbors. </plain></SENT>
<SENT sid="77" pm="."><plain>Any amino acids lying within that boundary are considered neighbors and any amino acids lying outside of that boundary are not considered neighbors. b) An expanded definition of neighbor that includes a smooth transition function is used in the neighbor count algorithm. </plain></SENT>
<SENT sid="78" pm="."><plain>Rather than a single boundary, a lower and upper boundary are designated. </plain></SENT>
<SENT sid="79" pm="."><plain>Amino acids lying within the lower boundary are considered complete neighbors and are assigned a neighbor weight of 1.0. </plain></SENT>
<SENT sid="80" pm="."><plain>Amino acids lying outside of the upper boundary are not considered neighbors at all and are assigned a neighbor weight of 0.0. </plain></SENT>
<SENT sid="81" pm="."><plain>Amino acids lying between the lower and upper bounds are assigned a weight between 0.0 and 1.0 based on their proximity to the amino acid of interest </plain></SENT>
</text></p><p><text><SENT sid="82" pm="."><plain>The neighbor count value for each amino acid is generated by adding the neighbor weight values of all other amino acids in the protein model as shown in the equation below and Fig. 2. \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$NeighborCount\left( {aa_i } \right) - \sum\limits_{j \ne i} {NeighborWeight\left( {dist\left( {aa_i ,aa_j } \right),\,lower\,bound,\,upper\,bound} \right)} $$\end{document}Fig. 2This figure depicts the neighbor count algorithm. </plain></SENT>
<SENT sid="83" pm="."><plain>The inner and outer gray rings represent the lower and upper bounds respectively. </plain></SENT>
<SENT sid="84" pm="."><plain>The small circles represent the \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta $$\end{document} atoms of amino acids. </plain></SENT>
<SENT sid="85" pm="."><plain>The black circle represents the amino acid of interest. </plain></SENT>
<SENT sid="86" pm="."><plain>Amino acids a and f are assigned a neighbor weight of 0.0 because they are outside of the upper bound. </plain></SENT>
<SENT sid="87" pm="."><plain>Amino acids b and e are assigned a weight between 0.0 and 1.0 because they lie between the upper and lower bounds. </plain></SENT>
<SENT sid="88" pm="."><plain>Amino acids c and d are counted as one complete neighbor each because they lie within the lower bound </plain></SENT>
</text></p><p><text><SENT sid="89" pm="."><plain>A shortcoming of using the number of neighboring amino acids as a measure of burial is that this approach disregards the spatial distribution of its neighbors. </plain></SENT>
<SENT sid="90" pm="."><plain>Figure 3 shows two examples that represent different exposure scenarios, yet return the same neighbor count value. Fig. 3This figure depicts a shortcoming of the neighbor count algorithm. Lines are drawn from the amino acid of interest in this case to all neighboring (as defined by the neighbor count algorithm) amino acids. </plain></SENT>
<SENT sid="91" pm="."><plain>Two scenarios are shown for which the neighbor count algorithm returns a value of five. </plain></SENT>
<SENT sid="92" pm="."><plain>However, these two scenarios depict two very different exposure states </plain></SENT>
</text></p><p><text><SENT sid="93" pm="."><plain>Neighbor vector (NV) The neighbor vector algorithm is an extension of the neighbor count algorithm that takes into account the spatial orientation of neighboring amino acids. \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$NeighborVector\left( {aa_j } \right) = \left\| {\frac{{\sum {_{j \ne i} \left( {{{\overrightarrow {vector_{1j} } } \mathord{\left/{\vphantom {{\overrightarrow {vector_{1j} } } {\left\| {\overrightarrow {vector_{1j} } } \right\|}}} \right.\kern-\nulldelimiterspace} {\left\| {\overrightarrow {vector_{1j} } } \right\|}}} \right) * NeighborWeight\left( {dist\left( {i,j} \right),lower\,bound,\,upper\,bound} \right)} }}{{NeighborCount\left( {aa_i } \right)}}} \right\|$$\end{document} </plain></SENT>
</text></p><p><text><SENT sid="94" pm="."><plain>The neighbor vector is a vector associated with each amino acid whose length can range between 0.0 and 1.0. </plain></SENT>
<SENT sid="95" pm="."><plain>A neighbor vector of length ≌1.0 implies high exposure whereas a neighbor vector of length ≌0.0 implies low exposure (i.e. burial). </plain></SENT>
<SENT sid="96" pm="."><plain>This is shown graphically in Fig. 4. </plain></SENT>
<SENT sid="97" pm="."><plain>Note that the neighbor vector is still a pair-wise decomposable measure of exposure. Fig. 4This figure depicts the neighbor vector algorithm. </plain></SENT>
<SENT sid="98" pm="."><plain>The vectors drawn to the \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta {\text{s}}$$\end{document} of neighboring amino acids are shown in black and the vector sum is shown in heavyweight black. a) When summed, the vectors essentially cancel out yielding a vector of zero length which indicates burial. b) When summed, the vectors yield a vector with a large magnitude which indicates exposure </plain></SENT>
</text></p><p><text><SENT sid="99" pm="."><plain>Artificial neural network (ANN) As input for an ANN that approximates SASA, an additional term not used in previous measures is introduced: the dot product of the \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\left( {{\text{C}}_\alpha - {\text{C}}_\beta } \right)$$\end{document} vector with the neighbor vector (NV\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\left( {{\text{C}}_\alpha - {\text{C}}_\beta } \right)$$\end{document}). </plain></SENT>
<SENT sid="100" pm="."><plain>Recall that the side chain atoms extend from the \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta $$\end{document} atom. </plain></SENT>
<SENT sid="101" pm="."><plain>Therefore, this dot product term provides information about the orientation of the side chain of the amino acid of interest, with respect to neighboring amino acids. </plain></SENT>
<SENT sid="102" pm="."><plain>If the \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\left( {{\text{C}}_\alpha - {\text{C}}_\beta } \right)$$\end{document} vector points in the same direction as the neighbor vector, the angle between these vectors will be small and the dot product will be ≌+1.0. </plain></SENT>
<SENT sid="103" pm="."><plain>If the \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\left( {{\text{C}}_\alpha - {\text{C}}_\beta } \right)$$\end{document} vector points in the opposite direction as the neighbor vector, the angle between these vectors will be large and the dot product will be ≌−1.0 (see Fig. 5). </plain></SENT>
<SENT sid="104" pm="."><plain>Therefore, this dot product provides additional information about the position of the side chain atoms with respect to the neighboring amino acids. </plain></SENT>
<SENT sid="105" pm="."><plain>The neighbor count, neighbor vector, and NV • \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\left( {{\text{C}}_\alpha - {\text{C}}_\beta } \right)$$\end{document} are input to the ANN. Fig. 5A β-strand is shown where the \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_ \propto $$\end{document} atoms and \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta $$\end{document} atoms of the strand are represented by black and white circles respectively. </plain></SENT>
<SENT sid="106" pm="."><plain>The \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta {\text{s}}$$\end{document} of neighboring amino acids are represented by white circles. </plain></SENT>
<SENT sid="107" pm="."><plain>The neighbor vectors are shown as dashed lines. </plain></SENT>
<SENT sid="108" pm="."><plain>The \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\left( {{\text{C}}_ \propto - {\text{C}}_\beta } \right)$$\end{document} vectors are shown as solid lines. </plain></SENT>
<SENT sid="109" pm="."><plain>The dot product of the neighbor vector and the \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\left( {{\text{C}}_ \propto - {\text{C}}_\beta } \right)$$\end{document} vector gives information about the angle between the two vectors and hence the orientation of the side chain atoms with respect to the neighboring amino acids (large open circles) </plain></SENT>
</text></p><p><text><SENT sid="110" pm="."><plain>The ANN contains a single hidden layer with three neurons. </plain></SENT>
<SENT sid="111" pm="."><plain>The ANN was trained using a feed-forward algorithm with back-propagation over 2670 steps (5000 steps were allowed, but the training terminated early due to convergence). </plain></SENT>
<SENT sid="112" pm="."><plain>The data was split into a training set (80% of the data), a monitor set (10% of the data), and an independent set (10% of the data). </plain></SENT>
<SENT sid="113" pm="."><plain>The learning rate η was 0.01 and the momentum α was 0.5. </plain></SENT>
</text></p><p><text><SENT sid="114" pm="."><plain>Overlapping spheres (OLS) The overlapping spheres algorithm is a variant of the Shrake and Rupley [38] algorithm for calculating molecular surfaces with the exception that spheres surround amino acids rather than atoms. </plain></SENT>
<SENT sid="115" pm="."><plain>In this algorithm, a sphere is placed around each \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta $$\end{document} and points are placed on the surface of the sphere surrounding the amino acid of interest. </plain></SENT>
<SENT sid="116" pm="."><plain>The fraction of points on an amino acid’s sphere that do not overlap with any other sphere is used as a measure of exposure (see Fig. 6). </plain></SENT>
<SENT sid="117" pm="."><plain>The spheres where chosen to have a uniform size regardless of amino acid type. </plain></SENT>
<SENT sid="118" pm="."><plain>Usage of amino acid specific radii did not lead to a significant improvement in rSASA calculation (data not shown). </plain></SENT>
<SENT sid="119" pm="."><plain>While the optimal number of points placed on the sphere has been investigated [52], this parameter was not optimized. </plain></SENT>
<SENT sid="120" pm="."><plain>Points were distributed uniformly every 5° along the surface of the sphere. Fig. 6The overlapping spheres algorithm places a sphere around each \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta $$\end{document} and places points on the surface of the spheres. </plain></SENT>
<SENT sid="121" pm="."><plain>The points that do not overlap with the spheres of any other amino acids are used as a measure of relative exposure. </plain></SENT>
<SENT sid="122" pm="."><plain>The \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta $$\end{document} atoms are colored in black and the points that do not overlap with any other spheres are colored in gray. a) the exterior of the protein b) a cut away of the protein </plain></SENT>
</text></p></sec><sec id="Sec9"><title><text><SENT sid="123" pm="."><plain>Establishment of rSASA reference standard </plain></SENT>
</text></title><p><text><SENT sid="124" pm="."><plain>The maximal speed molecular surfaces (MSMS) [46] algorithm as implemented in the visual molecular dynamics (VMD) [53] molecular visualization package serves as the reference standard method for rSASA. </plain></SENT>
<SENT sid="125" pm="."><plain>Protein models with the hydrogen atoms removed are used in order to ensure a consistent representation. </plain></SENT>
<SENT sid="126" pm="."><plain>In order to convert this rSASA measure into a relative exposure, the rSASA for each amino acid in the protein is divided by the rSASA for that amino acid alone in space (i.e., all other amino acids in the protein were removed). </plain></SENT>
<SENT sid="127" pm="."><plain>This gives a relative exposure for each amino acid in the protein with a minimum exposure of 0.0 (completely buried) and a maximum exposure of 1.0 (completely exposed). </plain></SENT>
</text></p></sec><sec id="Sec10"><title><text><SENT sid="128" pm="."><plain>Optimization of parameters for each approximation algorithm </plain></SENT>
</text></title><p><text><SENT sid="129" pm="."><plain>In order to determine the optimal parameters for each SASA approximation, a Monte Carlo parameter optimization method is used. </plain></SENT>
<SENT sid="130" pm="."><plain>The parameter set that produces the output that correlates most highly with the rSASA reference standard is selected as optimal. </plain></SENT>
<SENT sid="131" pm="."><plain>90% of the proteins in the representative protein database (described below) are used in parameter optimization while 10% was withheld. </plain></SENT>
<SENT sid="132" pm="."><plain>The correlations reported in Table 1 are based only upon the withheld 10%. Table 1Optimal parameters </plain></SENT>
</text></p><p><text><SENT sid="133" pm="."><plain>The optimal parameters found for each exposure algorithm are shown. </plain></SENT>
<SENT sid="134" pm="."><plain>The parameters that maximized the correlation of exposures produced by each algorithm with exposures produced by the rSASA reference standard are selected as optimal. </plain></SENT>
</text></p></sec><sec id="Sec11"><title><text><SENT sid="135" pm="."><plain>Establishment of representative protein database for generation of KBPs </plain></SENT>
</text></title><p><text><SENT sid="136" pm="."><plain>Statistics are generated for each amino acid type and each of the exposure algorithms by analysis of the representative protein database described in Table 2. </plain></SENT>
<SENT sid="137" pm="."><plain>This database contains high resolution (&lt;2.5 Å) structures with &lt;25% homology. </plain></SENT>
<SENT sid="138" pm="."><plain>The complete list of proteins from the PDB was submitted to the PISCES server [54, 55] to identify proteins with low sequence similarity. </plain></SENT>
<SENT sid="139" pm="."><plain>The input parameters used for culling are the following: sequence percentage identity &lt;=25%, resolution = 0.0 Å–3.0 Å, R-factor = 0.3, sequence length 40–10,000 amino acids, non X-ray entries were excluded as were \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_ \propto - {\text{only}}$$\end{document} entries. </plain></SENT>
<SENT sid="140" pm="."><plain>The resulting database of unique structures contained 1795 soluble proteins. Table 2Proteins used in KBP generationInformation about the proteins used to create the KBPs is summarized in Table 2. </plain></SENT>
</text></p></sec><sec id="Sec12"><title><text><SENT sid="141" pm="."><plain>Generation of knowledge-based environment potentials using inverse Boltzmann relation </plain></SENT>
</text></title><p><text><SENT sid="142" pm="."><plain>The following equation describes how histograms are generated for each amino acid type. \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$ \begin{array}{*{20}c} {propensity\_aa_1 \left[ j \right] = \frac{{\left[ {1 + \sum {_i^n equal\_exposure\left( {aa_i ,e_j } \right)} } \right]}} {{\sum {_k^m histogram\_aa_1 \left[ k \right]} }} * m} \\ {equal\_exposure\left( {aa_i ,e_j } \right) = \left\{ {\begin{array}{*{20}l} {1,\,e\left( {aa_i } \right) = e_j } \hfill \\ {0,\,e\left( {aa_i } \right) \ne e_j } \hfill \\ \end{array} } \right.} \\ \end{array} $$\end{document}where aai is amino acid type i, n is the number of amino acids of type i in the database, j is a specific exposure value, ej is the range of exposure values j associated with that bin, and m is the number of bins (20 bins are used for all algorithms). </plain></SENT>
<SENT sid="143" pm="."><plain>Prior to multiplication by the number of exposure values, the values in each bin are probabilities (0 ≤ probability ≤1). </plain></SENT>
<SENT sid="144" pm="."><plain>Multiplying by the number of bins converts these probabilities to propensities (0 ≤ propensity ≤ number of bins). </plain></SENT>
<SENT sid="145" pm="."><plain>Propensities are then converted to energies according to the inverse Boltzmann relation discussed earlier. </plain></SENT>
</text></p><p><text><SENT sid="146" pm="."><plain>The relationship between probabilities, propensities, and energies as used in creation of KBPs is shown in Table 3. </plain></SENT>
<SENT sid="147" pm="."><plain>Prandom is defined as 1/# possible exposure values. </plain></SENT>
<SENT sid="148" pm="."><plain>States found rarely are associated with high energy whereas states found frequently are associated with low energy. Table 3Relationship between probabilities, propensities, and energies </plain></SENT>
</text></p><p><text><SENT sid="149" pm="."><plain>Essentially, exposure values that are seen rarely in native proteins are associated with high energy values whereas exposure values that are seen often in native proteins are associated with low energy values. </plain></SENT>
<SENT sid="150" pm="."><plain>A spline is used to smooth the bins into a differentiable potential. </plain></SENT>
<SENT sid="151" pm="."><plain>A pseudo-count of 1 is added to each bin so that exposure values that are never seen (i.e., have a count of 0) are not associated with an infinitely large energy. </plain></SENT>
</text></p></sec><sec id="Sec13"><title><text><SENT sid="152" pm="."><plain>Benchmark proteins are selected such that 10% of the protein models are “native-like” </plain></SENT>
</text></title><p><text><SENT sid="153" pm="."><plain>Nineteen benchmark proteins are selected for analysis of the exposure algorithms. </plain></SENT>
<SENT sid="154" pm="."><plain>The decoys were generated by the Rosetta folding algorithm and are a subset of the Rosetta benchmark set. </plain></SENT>
<SENT sid="155" pm="."><plain>For each of the benchmark proteins, multiple protein models are included in the benchmark (between 70 and 1030 depending on the availability of protein models for each benchmark protein). Rmsd100, a normalized form of rmsd [56], is used to examine the deviation of each protein model from the native conformation. </plain></SENT>
<SENT sid="156" pm="."><plain>Protein models having an rmsd100 value &lt;5 Å are referred to as “native-like” whereas protein models that have an rmsd100 value ≥5 Å are referred to as “nonnative-like.” Additional values (between 4 Å and 7 Å) were also tested as a threshold for the definition of “native-like” and yielded similar results. </plain></SENT>
<SENT sid="157" pm="."><plain>Protein models are selected such that 10% of the decoys are “native-like” and 90% of the protein models are “nonnative-like”. </plain></SENT>
<SENT sid="158" pm="."><plain>This provided a “level playing field” and basis for comparison as the maximum enrichment for all benchmark proteins with this distribution of protein models is 10.0. </plain></SENT>
</text></p><p><text><SENT sid="159" pm="."><plain>The protein models analyzed are a subset of the protein models available for a given benchmark protein and are randomly selected from this larger group. </plain></SENT>
<SENT sid="160" pm="."><plain>This random selection procedure is repeated ten times to provide standard deviations of the evaluation criteria (read below). </plain></SENT>
<SENT sid="161" pm="."><plain>Additionally, proteins of various sizes, secondary structure composition, and CATH classifications are chosen to ensure a representative benchmark set (see Table 4). Table 4Summary of benchmark proteins used in KBP analysis </plain></SENT>
</text></p><p><text><SENT sid="162" pm="."><plain>Table 4 provides information about the benchmark proteins used for analysis of the KBPs based upon each exposure algorithm. </plain></SENT>
<SENT sid="163" pm="."><plain>Proteins with multiple types of secondary structural elements and of various sizes are included. </plain></SENT>
</text></p></sec><sec id="Sec14"><title><text><SENT sid="164" pm="."><plain>Average rSASA values are used to convert the actual rSASA into a relative exposure for benchmark proteins </plain></SENT>
</text></title><p><text><SENT sid="165" pm="."><plain>In order to facilitate comparison amongst the exposure algorithms, rSASA values computed with the VMD implementation of the MSMS algorithm are converted from actual areas in Å2 to relative exposures (on a scale of 0.0 (completely buried) to 1.0 (completely exposed)). </plain></SENT>
<SENT sid="166" pm="."><plain>To convert areas into relative exposures, the rSASA is divided by the average rSASA for that amino acid type alone in space. </plain></SENT>
<SENT sid="167" pm="."><plain>The average values for each amino acid type alone in space are shown in Table 5 along with the standard deviations and the number of amino acids (n) used in determining the average. Table 5Average SASA values for amino acids </plain></SENT>
</text></p></sec><sec id="Sec15"><title><text><SENT sid="168" pm="."><plain>Evaluation metrics: enrichment, receiver operating characteristic (ROC) curves, and Z-scores are measures of the KBP’s discriminatory power </plain></SENT>
</text></title><p><text><SENT sid="169" pm="."><plain>In order to evaluate the KBPs based upon each exposure algorithm, the ability of each KBP to discriminate between native-like and nonnative-like models is examined. </plain></SENT>
<SENT sid="170" pm="."><plain>The KBP for each algorithm is used to evaluate the energy of all protein models for each benchmark protein. </plain></SENT>
<SENT sid="171" pm="."><plain>The metric enrichment is used to evaluate the ability of each KBP to distinguish between native-like and nonnative-like protein models. \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$enrichment = \frac{{\left( {\frac{{\# \,of\,native - like\,\,models\,\,in\,\,lowest\,\,10\% \,\,of\,energy\,scores}}{{\# \,of\,native - like\,models}}} \right)}}{{percentage\,of\,native - like\,models}}$$\end{document} </plain></SENT>
</text></p><p><text><SENT sid="172" pm="."><plain>As 10% of the protein models for each benchmark protein are native-like, the maximum enrichment possible for each KBP is 10.0 and a random enrichment is an enrichment of 1.0. </plain></SENT>
</text></p><p><text><SENT sid="173" pm="."><plain>ROC curves display the true positive rate versus the false positive rate for a binary classification system. </plain></SENT>
<SENT sid="174" pm="."><plain>In this case, the ability of the KBPs based on the approximation algorithms to correctly classify native-like and nonnative-like protein models, is examined. </plain></SENT>
<SENT sid="175" pm="."><plain>Additionally, the area under the ROC curve (AUC) is determined from these ROC curves. </plain></SENT>
<SENT sid="176" pm="."><plain>An AUC of 1.0 indicates perfect classification whereas an AUC of 0.5 is representative of a random measure. </plain></SENT>
</text></p><p><text><SENT sid="177" pm="."><plain>Z-scores are calculated for each KBP. </plain></SENT>
<SENT sid="178" pm="."><plain>A random KBP is expected to achieve a z-score of 0.0. </plain></SENT>
<SENT sid="179" pm="."><plain>A more negative z-score indicates greater power of the KBP in distinguishing between native-like and nonnative-like protein models. \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$z - score = \frac{{\left( {average\,score\,of\,native - like\,models} \right) - \left( {average\,score\,of\,all\,models} \right)}}{{standard\,deviation\,of\,the\,scores\,of\,all\,models}}$$\end{document} </plain></SENT>
</text></p></sec></sec></SecTag><SecTag type="RESULTS"><sec id="Sec16"><title><text><SENT sid="180" pm="."><plain>Results </plain></SENT>
</text></title><sec id="Sec17"><title><text><SENT sid="181" pm="."><plain>Increasing algorithm complexity corresponds to a more accurate rSASA approximation yet slower run times </plain></SENT>
</text></title><p><text><SENT sid="182" pm="."><plain>In order to determine how well each exposure algorithm approximates rSASA, the correlation of exposure values produced by each algorithm to the exposure values given by the reference standard rSASA algorithm is examined. </plain></SENT>
<SENT sid="183" pm="."><plain>Results displaying the correlation with the reference standard rSASA and run times for each algorithm are shown in Table 6. </plain></SENT>
<SENT sid="184" pm="."><plain>The rSASA reference standard method takes several orders of magnitude longer (0.39e-2 seconds per amino acid for the rSASA reference standard compared to &lt;6e-5 seconds per amino acid for NC, NV, and ANN and 3e-3 for OLS) than any of the approximation methods indicating its infeasibility for use in rapid protein structure prediction. </plain></SENT>
<SENT sid="185" pm="."><plain>As expected, as the algorithm complexity increases, the runtime increases as well. </plain></SENT>
<SENT sid="186" pm="."><plain>Of note, the OLS algorithm is two orders of magnitude slower than the other approximation algorithms but still 12 times faster than the rSASA reference standard algorithm. </plain></SENT>
<SENT sid="187" pm="."><plain>The correlation of the neighbor count algorithm is negative due to the fact that the number of neighbors is inversely proportional to the rSASA. </plain></SENT>
<SENT sid="188" pm="."><plain>As algorithm complexity increases, the correlation with the rSASA reference standard also increases. </plain></SENT>
<SENT sid="189" pm="."><plain>The ANN approximation algorithm correlates most highly (r = 0.89) with the rSASA reference standard. Table 6Exposure algorithm performance </plain></SENT>
</text></p></sec><sec id="Sec18"><title><text><SENT sid="190" pm="."><plain>Visual inspection of KBPs confirm expected trends </plain></SENT>
</text></title><p><text><SENT sid="191" pm="."><plain>A visual inspection of the KBPs ensures that the potentials agree with expectations (see Fig. 7). </plain></SENT>
<SENT sid="192" pm="."><plain>For example, one expects for hydrophobic amino acids in solution to prefer burial. </plain></SENT>
<SENT sid="193" pm="."><plain>This is in fact what is seen. </plain></SENT>
<SENT sid="194" pm="."><plain>Consider the preference of hydrophobic amino acids, such as valine (V), methionine (M), and phenylalanine (F) for a large number of neighbors, a small neighbor vector magnitude, and small relative exposures. </plain></SENT>
<SENT sid="195" pm="."><plain>Additionally, one expects hydrophilic amino acids to prefer exposure in solution. </plain></SENT>
<SENT sid="196" pm="."><plain>This is also the case. </plain></SENT>
<SENT sid="197" pm="."><plain>Consider the preference of the hydrophilic amino acids lysine (K), asparagine (N), and glutamine (Q) for low neighbor counts, a large neighbor vector magnitude, and large relative exposures. Fig. 7The knowledge-based potentials based upon each exposure algorithm are shown and colored by value where white represents low values and dark gray represents high values. </plain></SENT>
<SENT sid="198" pm="."><plain>A visual inspection of the KBPs confirms that the energies shown in the KBPs agree with expectations. </plain></SENT>
<SENT sid="199" pm="."><plain>For example, one expects a hydrophobic amino acid, for example valine (V), to prefer a low exposure value, a large number of neighbors, and a low neighbor vector magnitude. </plain></SENT>
<SENT sid="200" pm="."><plain>This is in fact what is seen as indicated by the minima in the plots. </plain></SENT>
<SENT sid="201" pm="."><plain>Conversely, one expects a hydrophilic amino acid, such as lysine (K) to prefer a high exposure value, a small number of neighbors and a high neighbor vector magnitude. </plain></SENT>
<SENT sid="202" pm="."><plain>This is also what is seen in the plots </plain></SENT>
</text></p></sec><sec id="Sec19"><title><text><SENT sid="203" pm="."><plain>Evaluation metrics indicate that the neighbor count algorithm does not perform as well as other approximation algorithms </plain></SENT>
</text></title><p><text><SENT sid="204" pm="."><plain>As evidenced by the enrichment values in Fig. 8, the rSASA reference standard and the neighbor vector, artificial neural network, and overlapping spheres algorithms perform similarly (enrichment = ∼3.0) and all outperform the NC method (enrichment &lt;2.5). </plain></SENT>
<SENT sid="205" pm="."><plain>While no single method clearly dominates the others, some trends can be seen (Fig. 9). </plain></SENT>
<SENT sid="206" pm="."><plain>In several cases (i.e., 1bq9, 1iib, 1enh), the neighbor count algorithm does not perform as well as the other algorithms. </plain></SENT>
<SENT sid="207" pm="."><plain>While the rSASA reference standard algorithm often provides the greatest enrichment (i.e., 1bq9, 1iib, 1a19), there are several cases in which the neighbor vector algorithm provides the better results (i.e., 1ail, 1b3a, 1e6i). Fig. 8The average enrichment, z-score, and area under the ROC curve (AUC) is shown for each exposure algorithm over all benchmark proteins. </plain></SENT>
<SENT sid="208" pm="."><plain>The z-scores are in light gray, the AUC values are in medium gray, and the enrichment values are in dark gray. </plain></SENT>
<SENT sid="209" pm="."><plain>The neighbor count algorithm performs the least favorably according to all of the evaluation measures whereas the remaining algorithms perform approximately the same with the ANN generally performing slightly better than the othersFig. 9The enrichment is shown for each algorithm over all benchmark proteins. </plain></SENT>
<SENT sid="210" pm="."><plain>There are some proteins for which none of the exposure algorithms provided an enrichment (for example 1scj) while there are some benchmark proteins for which many of the exposure algorithms provided good enrichments. </plain></SENT>
<SENT sid="211" pm="."><plain>There are also proteins for which the enrichment produced by each algorithm increased with algorithm complexity as expected (for example 1enh) </plain></SENT>
</text></p><p><text><SENT sid="212" pm="."><plain>Additionally, the area under the ROC curve (AUC) is examined for the KBPs over the benchmark proteins (see Fig. 10). </plain></SENT>
<SENT sid="213" pm="."><plain>Again, the AUC values vary widely across benchmark proteins. </plain></SENT>
<SENT sid="214" pm="."><plain>However, the neighbor count algorithm (AUC = 0.7) lags a bit behind the neighbor vector, artificial neural network, overlapping spheres, and reference standard rSASA algorithms (AUCs ≥0.75). Fig. 10The area under the ROC curve (AUC) is shown for each exposure algorithm over all benchmark proteins. </plain></SENT>
<SENT sid="215" pm="."><plain>The AUC varies widely over the benchmark proteins. </plain></SENT>
<SENT sid="216" pm="."><plain>There are some proteins for which all algorithms perform very well (for example, 1c9o) while there are some proteins for which none of the algorithms perform well (for example, 1scj) </plain></SENT>
</text></p><p><text><SENT sid="217" pm="."><plain>The z-scores also support the trends shown by the other evaluation metrics. </plain></SENT>
<SENT sid="218" pm="."><plain>The neighbor count has the least negative z-score (−0.61) whereas the artificial neural network has the most negative z-score (−0.83) with neighbor vector coming in a close second (−0.80). </plain></SENT>
</text></p></sec><sec id="Sec20"><title><text><SENT sid="219" pm="."><plain>A detailed analysis of the benchmark protein 1enh </plain></SENT>
</text></title><p><text><SENT sid="220" pm="."><plain>The benchmark protein 1enh is an example where the potentials are able to distinguish between native-like and nonnative-like models to an extent that corresponds to the complexity of each algorithm (i.e., the NC algorithm is the least effective and the OLS algorithm is the most effective). </plain></SENT>
<SENT sid="221" pm="."><plain>This is indicated by the increasing area under the ROC curve (see Fig. 11a) moving from NC to NV to ANN to OLS. </plain></SENT>
<SENT sid="222" pm="."><plain>This can also be seen when the rmsd100 is plotted against the energy score assigned to each protein model (see Fig. 11b-f). </plain></SENT>
<SENT sid="223" pm="."><plain>As the algorithm complexity increases, the KBP is able to more effectively identify native-like protein models. </plain></SENT>
<SENT sid="224" pm="."><plain>Of note, the OLS KBP yields a higher enrichment than the rSASA reference standard. </plain></SENT>
<SENT sid="225" pm="."><plain>This indicates that environment free energy KBPs based on rSASA approximation alone may not be a complete picture of the environment free energy and that additional factors should be taken into account in order to more completely capture the environment free energy. </plain></SENT>
<SENT sid="226" pm="."><plain>Further examination is necessary to explore this question. Fig. 11a) The ROC curve for 1enh. </plain></SENT>
<SENT sid="227" pm="."><plain>As the algorithm complexity increases, the area under the ROC curve increases. </plain></SENT>
<SENT sid="228" pm="."><plain>In this case, the OLS algorithm is able to distinguish between native-like and nonnative-like models more effectively than the reference standard rSASA algorithm. b) rSASA, enrichment: 5. c) neighbor count, 1.46. d) neighbor vector, 3.13. e) ann, 4.58. f) ols, 6.67. </plain></SENT>
<SENT sid="229" pm="."><plain>In b) – f) the energy scores assigned to each protein model (each protein model is represented by one point) is plotted against the rmsd100 value of that model. </plain></SENT>
<SENT sid="230" pm="."><plain>Models assigned an energy score in the lowest 10% (most energetically favorable) are shown as solid circles whereas models assigned an energy score in the highest 90% (least energetically favorable) are shown as open circles. </plain></SENT>
<SENT sid="231" pm="."><plain>If the energy potential is able to perfectly distinguish between native-like (&lt;5 Å rmsd100) and nonnative-like (≥5 Å rmsd100) models, the 10% of models identified as most energetically favorable (shown in black) would have an rmsd100 value &lt;5 Å. </plain></SENT>
<SENT sid="232" pm="."><plain>As the algorithm complexity increases, the potential based on the algorithm is able to more effectively distinguish between native-like and nonnative-like models as also indicated by the increasing enrichment values. </plain></SENT>
<SENT sid="233" pm="."><plain>Interestingly, the OLS algorithm achieves a higher enrichment value than the true rSASA value indicating that additional factors must be taken into account in order to capture all aspects of environment free energy </plain></SENT>
</text></p><p><text><SENT sid="234" pm="."><plain>For a specific example, consider ALA5 of a 1enh protein model (Fig. 12). </plain></SENT>
<SENT sid="235" pm="."><plain>The rSASA method determines that the relative exposure of ALA5 is 0.375, ranked the 13th most exposed amino acid of the 54 amino acids in the protein model. </plain></SENT>
<SENT sid="236" pm="."><plain>The NC algorithm calculated that ALA5 has 6.495 neighbors and ranked ALA5 as the 21st most exposed amino acid in the protein model. </plain></SENT>
<SENT sid="237" pm="."><plain>However, the NV algorithm was able to discern that the majority of ALA5’s neighbors are on one side of the amino acid leaving the other side relatively exposed. </plain></SENT>
<SENT sid="238" pm="."><plain>The NV algorithm assigned ALA5 a vector of magnitude 0.568 and ranked ALA5 as the 19th most exposed amino acid in the model, closer to its true rank. </plain></SENT>
<SENT sid="239" pm="."><plain>The ANN predicted a relative exposure of 0.348 for ALA5 and ranked it as the 18th most exposed amino acid in the protein model, again closer to its true rank than the ranks achieved by the NC and NV algorithms. </plain></SENT>
<SENT sid="240" pm="."><plain>The OLS algorithm returned a relative exposure of 0.372 for ALA5 and ranked it as the 13th most exposed amino acid in the protein model, which is in fact its correct ranking. </plain></SENT>
<SENT sid="241" pm="."><plain>The exposure value given for the ALA5 of a 1enh protein model as well as the rank of ALA5 amongst the 54 amino acids in the protein model is shown in Table 7. Fig. 12The backbone and \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta {\text{s}}$$\end{document} are shown in gray. </plain></SENT>
<SENT sid="242" pm="."><plain>The ALA5 \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta $$\end{document} is shown in black. </plain></SENT>
<SENT sid="243" pm="."><plain>The actual relative rSASA as determined by the reference standard method of ALA5 is 0.375 and it is the 13th most exposed exposed amino acid in the protein model. Lines are drawn from the ALA5 \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta $$\end{document} to all \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${\text{C}}_\beta {\text{s}}$$\end{document} assigned a neighbor weight &gt;0 as determined by the neighbor count algorithm. </plain></SENT>
<SENT sid="244" pm="."><plain>Although ALA5 has many neighbors, all of the neighbors are on one face of the amino acid leaving the other face exposed. </plain></SENT>
<SENT sid="245" pm="."><plain>Therefore, the neighbor count algorithm ranks ALA5 only as the 21st most exposed amino acid. </plain></SENT>
<SENT sid="246" pm="."><plain>The neighbor vector algorithm is able to distinguish that most of the neighboring amino acids are on one face of ALA5 and ranks ALA5 as the 19th most exposed amino acid in the protein model. </plain></SENT>
<SENT sid="247" pm="."><plain>The ANN is able to use the NC, NV, and NV•\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\left( {{\text{C}}_ \propto - {\text{C}}_\beta } \right)$$\end{document} information to more accurately determine the actual exposure and rank ALA5 as the 18th most exposed amino acid in the protein model. </plain></SENT>
<SENT sid="248" pm="."><plain>The OLS algorithm ranks ALA5 as the 13th most exposed amino acid in the model, its true rankTable 7Exposure algorithm performance for ALA5 </plain></SENT>
</text></p></sec></sec></SecTag><SecTag type="DISCUSS"><sec id="Sec21"><title><text><SENT sid="249" pm="."><plain>Discussion </plain></SENT>
</text></title><p><text><SENT sid="250" pm="."><plain>Four algorithms for determining the relative exposure on a reduced protein model are presented. </plain></SENT>
<SENT sid="251" pm="."><plain>The complexity of these algorithms varies and as expected, the simplest algorithms are the most efficient in terms of runtime but less effective in approximating the reference standard rSASA method and distinguishing between native-like and nonnative-like protein models. </plain></SENT>
<SENT sid="252" pm="."><plain>Also as expected, the more complex algorithms, such as the artificial neural network and overlapping spheres, achieve more accurate exposure measures and are more effectively able to distinguish between native-like and nonnative-like protein models. </plain></SENT>
</text></p><p><text><SENT sid="253" pm="."><plain>Neighbor count is the simplest measure of exposure and achieves the lowest average enrichment. </plain></SENT>
<SENT sid="254" pm="."><plain>Also as expected, as the algorithms increase in complexity, they are able to achieve a higher enrichment. </plain></SENT>
<SENT sid="255" pm="."><plain>The ANN is particularly effective at this task and achieves enrichments on reduced protein models that are nearly as high as the enrichments achieved by the rSASA on full-atom protein models. </plain></SENT>
</text></p><p><text><SENT sid="256" pm="."><plain>As the Rosetta models used for benchmarking were generated using the Rosetta environment score, most of these models bury apolar amino acids and expose polar amino acids and fulfill overall the generally expected environment architecture within proteins. </plain></SENT>
<SENT sid="257" pm="."><plain>Hence the enrichment test performed in this work is a stringent test that measures improvement over the Rosetta energy function which explains the rather moderate enrichment values. </plain></SENT>
<SENT sid="258" pm="."><plain>Substantially higher enrichments can be obtained if models are created without the use of the environment score. </plain></SENT>
</text></p><p><text><SENT sid="259" pm="."><plain>As is seen in Fig. 9 and indicated by the large standard deviations shown in Fig. 8, the degree to which the algorithms are able to recognize native-like protein varies widely. </plain></SENT>
<SENT sid="260" pm="."><plain>Consider the high enrichments produced for the protein 1e6i. </plain></SENT>
<SENT sid="261" pm="."><plain>In this case, the algorithms are fairly effective in distinguishing between native-like and nonnative-like protein models. </plain></SENT>
<SENT sid="262" pm="."><plain>However, there are proteins that are “hard,” for example 1scj. </plain></SENT>
<SENT sid="263" pm="."><plain>All algorithms produce an enrichment of 0.0 (worse than random). </plain></SENT>
</text></p><p><text><SENT sid="264" pm="."><plain>In all cases, the maximum possible enrichment of 10.0 is not achieved by any algorithm, including the rSASA reference standard. </plain></SENT>
<SENT sid="265" pm="."><plain>This indicates that the environment free energy approximations based on SASA contain a limited amount of information and additional energy terms should be considered in order to achieve additional discriminatory power. </plain></SENT>
</text></p><p><text><SENT sid="266" pm="."><plain>The large standard deviations of the enrichment values (shown in Fig. 8) indicate that further improvements to these algorithms are possible. </plain></SENT>
<SENT sid="267" pm="."><plain>The fact that the reference standard rSASA method does not always perform best in terms of ability to distinguish between native-like and nonnative-like protein models is unexpected (for example, consider the benchmark protein 1tig). </plain></SENT>
<SENT sid="268" pm="."><plain>The assumption that environment free energy is directly proportional to SASA should be investigated further to determine if this is strictly the case or if there may be other crucial contributions to environment free energy as well. </plain></SENT>
</text></p><p><text><SENT sid="269" pm="."><plain>Future work includes an in depth analysis of various histogram sizes used in creation of the KBPs and optimizing parameters with the standard for optimality being the parameters that yield the greatest enrichment for protein structure prediction rather than correlation with the reference standard rSASA. </plain></SENT>
</text></p></sec></SecTag><SecTag type="CONCL"><sec id="Sec22"><title><text><SENT sid="270" pm="."><plain>Conclusions </plain></SENT>
</text></title><p><text><SENT sid="271" pm="."><plain>Four exposure algorithms of varying complexities are presented that efficiently produce exposures on reduced protein models that closely correlate with the exposure measures given by the rSASA reference standard on a full-atom model. </plain></SENT>
<SENT sid="272" pm="."><plain>These exposure measures can be used to derive KBPs that provide discriminatory power in distinguishing between native-like and nonnative-like models. </plain></SENT>
<SENT sid="273" pm="."><plain>This measure of environment free energy is an important energy term but is best utilized as part of a more comprehensive energy evaluation function. </plain></SENT>
<SENT sid="274" pm="."><plain>For use in computational protein structure prediction, the neighbor vector algorithm provides the most optimal balance of accurate yet very rapid exposure measures. </plain></SENT>
<SENT sid="275" pm="."><plain>The assumption that environment free energy is directly proportional to SASA will be investigated further. </plain></SENT>
</text></p></sec></SecTag></body><back><SecTag type="ACK_FUND"><ack><p><text4fund><text><SENT sid="276" pm="."><plain>The authors would like to thank all members of the Meiler Lab for helpful discussions and support. </plain></SENT>
<SENT sid="277" pm="."><plain>This work was supported by grant R01-GM080403 from the National Institute of General Medical Sciences and training grant 2-T15 LM07450-06 from the National Library of Medicine. </plain></SENT>
</text></text4fund></p><p><text4fund><text><SENT sid="278" pm="."><plain>Open Access This article is distributed under the terms of the Creative Commons Attribution Noncommercial License which permits any noncommercial use, distribution, and reproduction in any medium, provided the original author(s) and source are credited. </plain></SENT>
</text></text4fund></p></ack></SecTag><SecTag type="REF"><ref-list id="Bib1"><title>References</title><ref id="CR1"><text><SENT sid="279" pm="."><plain>1.BakerDSaliAProtein structure prediction and structural genomicsScience2001294939610.1126/science.106565911588250 </plain></SENT>
</text></ref><ref id="CR2"><text><SENT sid="280" pm="."><plain>2.FangYFrutosAGLahiriJMembrane protein microarraysJ Am Chem Soc2002124112394239510.1021/ja017346+11890761 </plain></SENT>
</text></ref><ref id="CR3"><text><SENT sid="281" pm="."><plain>3.WienerMCA pedestrian guide to membrane protein crystallizationMethods200434336437210.1016/j.ymeth.2004.03.02515325654 </plain></SENT>
</text></ref><ref id="CR4"><text><SENT sid="282" pm="."><plain>4.AlexanderNDe novo high-resolution protein structure determination from sparse spin-labeling EPR dataStructure200816218119510.1016/j.str.2007.11.01518275810 </plain></SENT>
</text></ref><ref id="CR5"><text><SENT sid="283" pm="."><plain>5.JiangWBridging the information gap: computational tools for intermediate resolution structure interpretationJ Mol Biol200130851033104410.1006/jmbi.2001.463311352589 </plain></SENT>
</text></ref><ref id="CR6"><text><SENT sid="284" pm="."><plain>6.BakerDSaliAProtein structure prediction and structural genomicsScience20012945540939610.1126/science.106565911588250 </plain></SENT>
</text></ref><ref id="CR7"><text><SENT sid="285" pm="."><plain>7.BournePECASP and CAFASP experiments and their findingsMethods Biochem Anal20034450150712647401 </plain></SENT>
</text></ref><ref id="CR8"><text><SENT sid="286" pm="."><plain>8.BradleyPFree modeling with Rosetta in CASP6Proteins200561Suppl 712813410.1002/prot.2072916187354 </plain></SENT>
</text></ref><ref id="CR9"><text><SENT sid="287" pm="."><plain>9.DillKADominant forces in protein foldingBiochemistry199029317133715510.1021/bi00483a0012207096 </plain></SENT>
</text></ref><ref id="CR10"><text><SENT sid="288" pm="."><plain>10.LazaridisTKarplusMEffective energy functions for protein structure predictionCurr Opin Struct Biol200010213914510.1016/S0959-440X(00)00063-410753811 </plain></SENT>
</text></ref><ref id="CR11"><text><SENT sid="289" pm="."><plain>11.SipplMJKnowledge-based potentials for proteinsCurr Opin Struct Biol19955222923510.1016/0959-440X(95)80081-67648326 </plain></SENT>
</text></ref><ref id="CR12"><text><SENT sid="290" pm="."><plain>12.JufferAHComparison of atomic solvation parametric sets: applicability and limitations in protein folding and bindingProtein Sci19954122499250910.1002/pro.55600412068580840 </plain></SENT>
</text></ref><ref id="CR13"><text><SENT sid="291" pm="."><plain>13.BoasFEHarburyPBPotential energy functions for protein designCurr Opin Struct Biol200717219920410.1016/j.sbi.2007.03.00617387014 </plain></SENT>
</text></ref><ref id="CR14"><text><SENT sid="292" pm="."><plain>14.ChenCTHYPLOSP: a knowledge-based approach to protein local structure predictionJ Bioinform Comput Biol2006461287130710.1142/S021972000600246617245815 </plain></SENT>
</text></ref><ref id="CR15"><text><SENT sid="293" pm="."><plain>15.LuHSkolnickJApplication of statistical potentials to protein structure refinement from low resolution ab initio modelsBiopolymers200370457558410.1002/bip.1053714648767 </plain></SENT>
</text></ref><ref id="CR16"><text><SENT sid="294" pm="."><plain>16.FerradaEMeloFNonbonded terms extrapolated from nonlocal knowledge-based energy functions improve error detection in near-native protein structure modelsProtein Sci20071671410142110.1110/ps.06273590717586774 </plain></SENT>
</text></ref><ref id="CR17"><text><SENT sid="295" pm="."><plain>17.CasadioRThinking the impossible: how to solve the protein folding problem with and without homologous structures and moreMethods Mol Biol200735030532016957329 </plain></SENT>
</text></ref><ref id="CR18"><text><SENT sid="296" pm="."><plain>18.SimonsKTAssembly of protein tertiary structures from fragments with similar local sequences using simulated annealing and Bayesian scoring functionsJ Mol Biol1997268120922510.1006/jmbi.1997.09599149153 </plain></SENT>
</text></ref><ref id="CR19"><text><SENT sid="297" pm="."><plain>19.AudieJScarlataSA novel empirical free energy function that explains and predicts protein-protein binding affinitiesBiophys Chem20071292–319821110.1016/j.bpc.2007.05.02117600612 </plain></SENT>
</text></ref><ref id="CR20"><text><SENT sid="298" pm="."><plain>20.DarnellSJPageDMitchellJCAn automated decision-tree approach to predicting protein interaction hot spotsProteins200768481382310.1002/prot.2147417554779 </plain></SENT>
</text></ref><ref id="CR21"><text><SENT sid="299" pm="."><plain>21.EversAGohlkeHKlebeGLigand-supported homology modelling of protein binding-sites using knowledge-based potentialsJ Mol Biol2003334232734610.1016/j.jmb.2003.09.03214607122 </plain></SENT>
</text></ref><ref id="CR22"><text><SENT sid="300" pm="."><plain>22.RocheOKiyamaRBrooksCL3rdLigand-protein database: linking protein-ligand complex structures to binding dataJ Med Chem200144223592359810.1021/jm000467k11606123 </plain></SENT>
</text></ref><ref id="CR23"><text><SENT sid="301" pm="."><plain>23.GohlkeHHendlichMKlebeGKnowledge-based scoring function to predict protein-ligand interactionsJ Mol Biol2000295233735610.1006/jmbi.1999.337110623530 </plain></SENT>
</text></ref><ref id="CR24"><text><SENT sid="302" pm="."><plain>24.GrzybowskiBAFrom knowledge-based potentials to combinatorial lead design in silicoAcc Chem Res200235526126910.1021/ar970146b12020163 </plain></SENT>
</text></ref><ref id="CR25"><text><SENT sid="303" pm="."><plain>25.PooleAMRanganathanRKnowledge-based potentials in protein designCurr Opin Struct Biol200616450851310.1016/j.sbi.2006.06.01316843652 </plain></SENT>
</text></ref><ref id="CR26"><text><SENT sid="304" pm="."><plain>26.IsogaiYDesign of lambda Cro fold: solution structure of a monomeric variant of the de novo proteinJ Mol Biol2005354480181410.1016/j.jmb.2005.10.00516289118 </plain></SENT>
</text></ref><ref id="CR27"><text><SENT sid="305" pm="."><plain>27.DeBoltSESkolnickJEvaluation of atomic level mean force potentials via inverse folding and inverse refinement of protein structures: atomic burial position and pairwise non-bonded interactionsProtein Eng19969863765510.1093/protein/9.8.6378875641 </plain></SENT>
</text></ref><ref id="CR28"><text><SENT sid="306" pm="."><plain>28.FrishmanDArgosPKnowledge-based protein secondary structure assignmentProteins199523456657910.1002/prot.3402304128749853 </plain></SENT>
</text></ref><ref id="CR29"><text><SENT sid="307" pm="."><plain>29.DominguesFSSustained performance of knowledge-based potentials in fold recognitionProteins1999Suppl 311212010.1002/(SICI)1097-0134(1999)37:3+&lt;112::AID-PROT15&gt;3.0.CO;2-R10526359 </plain></SENT>
</text></ref><ref id="CR30"><text><SENT sid="308" pm="."><plain>30.KoehlPDelarueMPolar and nonpolar atomic environments in the protein core: implications for folding and bindingProteins199420326427810.1002/prot.3402003077892175 </plain></SENT>
</text></ref><ref id="CR31"><text><SENT sid="309" pm="."><plain>31.KoehlPLevittMStructure-based conformational preferences of amino acidsProc Natl Acad Sci USA19999622125241252910.1073/pnas.96.22.1252410535955 </plain></SENT>
</text></ref><ref id="CR32"><text><SENT sid="310" pm="."><plain>32.OoiTAccessible surface areas as a measure of the thermodynamic parameters of hydration of peptidesProc Natl Acad Sci USA198784103086309010.1073/pnas.84.10.30863472198 </plain></SENT>
</text></ref><ref id="CR33"><text><SENT sid="311" pm="."><plain>33.ViacarraCMayoSElectrostatics in computational protein designCurr Opin Chem Biol20059662262616257567 </plain></SENT>
</text></ref><ref id="CR34"><text><SENT sid="312" pm="."><plain>34.PokalaNHandelTMEnergy functions for protein design I: efficient and accurate continuum electrostatics and solvationProtein Sci200413492593610.1110/ps.0348610415010542 </plain></SENT>
</text></ref><ref id="CR35"><text><SENT sid="313" pm="."><plain>35.GordonDBMarshallSAMayoSLEnergy functions for protein designCurr Opin Struct Biol19999450951310.1016/S0959-440X(99)80072-410449371 </plain></SENT>
</text></ref><ref id="CR36"><text><SENT sid="314" pm="."><plain>36.StreetAGMayoSLPairwise calculation of protein solvent-accessible surface areasFold Des19983425325810.1016/S1359-0278(98)00036-49710572 </plain></SENT>
</text></ref><ref id="CR37"><text><SENT sid="315" pm="."><plain>37.LeeBRichardsFMThe interpretation of protein structures: estimation of static accessibilityJ Mol Biol197155337940010.1016/0022-2836(71)90324-X5551392 </plain></SENT>
</text></ref><ref id="CR38"><text><SENT sid="316" pm="."><plain>38.ShrakeARupleyJAEnvironment and exposure to solvent of protein atoms. </plain></SENT>
<SENT sid="317" pm="."><plain>Lysozyme and insulinJ Mol Biol197379235137110.1016/0022-2836(73)90011-94760134 </plain></SENT>
</text></ref><ref id="CR39"><text><SENT sid="318" pm="."><plain>39.Colloc’hNMornonJPA new tool for the qualitative and quantitative analysis of protein surfaces using B-spline and density of surface neighborhoodJ Mol Graphics1990813314010.1016/0263-7855(90)80053-I </plain></SENT>
</text></ref><ref id="CR40"><text><SENT sid="319" pm="."><plain>40.GrandSMMerzKMJrRapid approximation to molecular surface area via the use of boolean logic and look-up tablesJ Comp Chem199214334935210.1002/jcc.540140309 </plain></SENT>
</text></ref><ref id="CR41"><text><SENT sid="320" pm="."><plain>41.WodakSJJaninJAnalytical approximation to the accessible surface area of proteinsProc Natl Acad Sci USA19807741736174010.1073/pnas.77.4.173616592793 </plain></SENT>
</text></ref><ref id="CR42"><text><SENT sid="321" pm="."><plain>42.PearlLHHoneggerAGeneration of molecular surfaces for graphic displayJ Mol Graphics19831191210.1016/0263-7855(83)80048-4 </plain></SENT>
</text></ref><ref id="CR43"><text><SENT sid="322" pm="."><plain>43.YouTBashfordDAn analytical algorithm for the rapid determination of the solvent-accessibility of points in a three-dimensional lattice around a solute moleculeJ Comp Chem199416674375710.1002/jcc.540160610 </plain></SENT>
</text></ref><ref id="CR44"><text><SENT sid="323" pm="."><plain>44.JufferAHVogelHJA flexible triangulation method to describe the solvent-accessible surface of biopolymersJ Comput Aided Mol Des199812328929910.1023/A:10160899017049749371 </plain></SENT>
</text></ref><ref id="CR45"><text><SENT sid="324" pm="."><plain>45.ZhangNZengCWingreenNSFast accurate evaluation of protein solvent exposureProteins200457356557610.1002/prot.2019115382246 </plain></SENT>
</text></ref><ref id="CR46"><text><SENT sid="325" pm="."><plain>46.SannerMFOlsonAJSpehnerJCReduced surface: an efficient way to compute molecular surfacesBiopolymers199638330532010.1002/(SICI)1097-0282(199603)38:3&lt;305::AID-BIP4&gt;3.0.CO;2-Y8906967 </plain></SENT>
</text></ref><ref id="CR47"><text><SENT sid="326" pm="."><plain>47.StoutenPFWAn effective solvation term based on atomic occupancies for use in protein simulationsMol Simul1993102–69712010.1080/08927029308022161 </plain></SENT>
</text></ref><ref id="CR48"><text><SENT sid="327" pm="."><plain>48.RohlCAProtein structure prediction using RosettaMethods Enzymol2004383669310.1016/S0076-6879(04)83004-015063647 </plain></SENT>
</text></ref><ref id="CR49"><text><SENT sid="328" pm="."><plain>49.KarchinRClineMKarplusKEvaluation of local structure alphabets based on residue burialProteins200455350851810.1002/prot.2000815103615 </plain></SENT>
</text></ref><ref id="CR50"><text><SENT sid="329" pm="."><plain>50.WeiserJShenkinPSStillWCApproximate solvent-accessible surface areas from tetrahedrally directed neighbor densitiesBiopolymers199950437338010.1002/(SICI)1097-0282(19991005)50:4&lt;373::AID-BIP3&gt;3.0.CO;2-U10423546 </plain></SENT>
</text></ref><ref id="CR51"><text><SENT sid="330" pm="."><plain>51.EisenhaberFArgosPHydrophobic regions on protein surfaces: definition based on hydration shell structure and a quick method for their computationProtein Eng19969121121113310.1093/protein/9.12.11219010925 </plain></SENT>
</text></ref><ref id="CR52"><text><SENT sid="331" pm="."><plain>52.FlowerDRSERF: a program for accessible surface area calculationsJ Mol Graph Model199715423824410.1016/S1093-3263(97)00082-X9524933 </plain></SENT>
</text></ref><ref id="CR53"><text><SENT sid="332" pm="."><plain>53.HumphreyWDalkeASchultenKVMD: visual molecular dynamicsJ Mol Graph1996141333810.1016/0263-7855(96)00018-58744570 </plain></SENT>
</text></ref><ref id="CR54"><text><SENT sid="333" pm="."><plain>54.WangGLDunbrackRLPISCES: recent improvements to a PDB sequence culling serverNucleic Acids Res200533W94W9810.1093/nar/gki40215980589 </plain></SENT>
</text></ref><ref id="CR55"><text><SENT sid="334" pm="."><plain>55.WangGLDunbrackRLPISCES: a protein sequence culling serverBioinformatics200319121589159110.1093/bioinformatics/btg22412912846 </plain></SENT>
</text></ref><ref id="CR56"><text><SENT sid="335" pm="."><plain>56.CarugoOPongorSA normalized root-mean-square distance for comparing protein three-dimensional structuresProtein Sci20011071470147310.1110/ps.69010111420449 </plain></SENT>
</text></ref></ref-list></SecTag><SecTag type="ABBR"><glossary><title>Abbreviations</title><def-list><def-list><def-item><term>ANN</term><def><p>artificial neural network</p></def></def-item><def-item><term>AUC</term><def><p>Area under the receiver operating characteristic curve</p></def></def-item><def-item><term>CASP</term><def><p>Critical assessment of structure prediction</p></def></def-item><def-item><term>KBP</term><def><p>Knowledge-based potential</p></def></def-item><def-item><term>MSMS</term><def><p>Maximal speed molecular surfaces</p></def></def-item><def-item><term>NC</term><def><p>Neighbor count</p></def></def-item><def-item><term>NV</term><def><p>Neighbor vector</p></def></def-item><def-item><term>OLS</term><def><p>Overlapping spheres</p></def></def-item><def-item><term>PDB</term><def><p>Protein data bank</p></def></def-item><def-item><term>ROC</term><def><p>Receiving operating characteristic</p></def></def-item><def-item><term>RMSD</term><def><p>Root mean square deviation</p></def></def-item><def-item><term>rSASA</term><def><p>Per-residue solvent-accessible surface area</p></def></def-item><def-item><term>SASA</term><def><p>Solvent-accessible surface area</p></def></def-item><def-item><term>VMD</term><def><p>Visual molecular dynamics</p></def></def-item></def-list></def-list></glossary></SecTag></back></article>
