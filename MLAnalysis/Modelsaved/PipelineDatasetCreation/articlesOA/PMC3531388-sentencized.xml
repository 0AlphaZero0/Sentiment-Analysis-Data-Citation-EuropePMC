
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN?><?DTDIdentifier.IdentifierType public?><?SourceDTD.DTDName JATS-archivearticle1.dtd?><?SourceDTD.Version 1.1?><?ConverterInfo.XSLTName jp2nlmx2.xsl?><?ConverterInfo.Version 1?><front><journal-meta><journal-id journal-id-type="nlm-ta">PLoS One</journal-id><journal-id journal-id-type="iso-abbrev">PLoS ONE</journal-id><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="pmc">plosone</journal-id><journal-title-group><journal-title>PLoS ONE</journal-title></journal-title-group><issn pub-type="epub">1932-6203</issn><publisher><publisher-name>Public Library of Science</publisher-name><publisher-loc>San Francisco, USA</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">3531388</article-id><article-id pub-id-type="pmid">23300688</article-id><article-id pub-id-type="publisher-id">PONE-D-12-22198</article-id><article-id pub-id-type="doi">10.1371/journal.pone.0052505</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Biology</subject><subj-group><subject>Biochemistry</subject><subj-group><subject>Biomacromolecule-Ligand Interactions</subject><subject>Enzymes</subject><subject>Proteins</subject></subj-group></subj-group><subj-group><subject>Biophysics</subject><subj-group><subject>Biomacromolecule-Ligand Interactions</subject><subject>Biophysics Simulations</subject></subj-group></subj-group><subj-group><subject>Computational Biology</subject><subj-group><subject>Macromolecular Structure Analysis</subject><subj-group><subject>Protein Structure</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Chemistry</subject><subj-group><subject>Computational Chemistry</subject><subj-group><subject>Molecular Mechanics</subject></subj-group></subj-group></subj-group></article-categories><title-group><article-title><SecTag type="TITLE"><text><SENT sid="0" pm="."><plain>Binding Pocket Optimization by Computational Protein Design </plain></SENT>
</text></SecTag></article-title><alt-title alt-title-type="running-head">Computational Design of Binding Pockets</alt-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Malisi</surname><given-names>Christoph</given-names></name><xref ref-type="aff" rid="aff1">
<sup>1</sup>
</xref></contrib><contrib contrib-type="author"><name><surname>Schumann</surname><given-names>Marcel</given-names></name><xref ref-type="aff" rid="aff2">
<sup>2</sup>
</xref><xref ref-type="author-notes" rid="fn2">
<sup>¤b</sup>
</xref></contrib><contrib contrib-type="author"><name><surname>Toussaint</surname><given-names>Nora C.</given-names></name><xref ref-type="aff" rid="aff2">
<sup>2</sup>
</xref><xref ref-type="author-notes" rid="fn1">
<sup>¤a</sup>
</xref></contrib><contrib contrib-type="author"><name><surname>Kageyama</surname><given-names>Jorge</given-names></name><xref ref-type="aff" rid="aff1">
<sup>1</sup>
</xref></contrib><contrib contrib-type="author"><name><surname>Kohlbacher</surname><given-names>Oliver</given-names></name><xref ref-type="aff" rid="aff2">
<sup>2</sup>
</xref></contrib><contrib contrib-type="author"><name><surname>Höcker</surname><given-names>Birte</given-names></name><xref ref-type="aff" rid="aff1">
<sup>1</sup>
</xref><xref ref-type="corresp" rid="cor1">
<sup>*</sup>
</xref></contrib></contrib-group><aff id="aff1">
<label>1</label>
<addr-line>Max Planck Institute for Developmental Biology, Tübingen, Germany</addr-line>
</aff><aff id="aff2">
<label>2</label>
<addr-line>Center for Bioinformatics, Quantitative Biology Center, and Department of Computer Science, University of Tübingen, Tübingen, Germany</addr-line>
</aff><contrib-group><contrib contrib-type="editor"><name><surname>Levy</surname><given-names>Yaakov Koby</given-names></name><role>Editor</role><xref ref-type="aff" rid="edit1"/></contrib></contrib-group><aff id="edit1">
<addr-line>Weizmann Institute of Science, Israel</addr-line>
</aff><author-notes><corresp id="cor1">* E-mail: <email>birte.hoecker@tuebingen.mpg.de</email></corresp><fn fn-type="COI-statement"><p><text><SENT sid="1" pm="."><plain>Competing Interests: The authors have declared that no competing interests exist. </plain></SENT>
</text></p></fn><fn fn-type="con"><p><text><SENT sid="2" pm="."><plain>Conceived and designed the experiments: CM OK BH. </plain></SENT>
<SENT sid="3" pm="."><plain>Performed the experiments: CM JK. </plain></SENT>
<SENT sid="4" pm="."><plain>Analyzed the data: CM OK BH. </plain></SENT>
<SENT sid="5" pm="."><plain>Contributed reagents/materials/analysis tools: MS NT. </plain></SENT>
<SENT sid="6" pm="."><plain>Wrote the paper: CM BH. </plain></SENT>
</text></p></fn><fn id="fn1" fn-type="current-aff"><label>¤a</label><p><text><SENT sid="7" pm="."><plain>Current address: Department of Pharmaceutical Sciences, School of Pharmacy, Thomas Jefferson University, Philadelphia, Pennsylvania, United States of America </plain></SENT>
</text></p></fn><fn id="fn2" fn-type="current-aff"><label>¤b</label><p><text><SENT sid="8" pm="."><plain>Current address: Immunology Program &amp; Computational Biology Program, Lucille Castori Center for Microbes, Inflammation &amp; Cancer, Memorial Sloan-Kettering Cancer Center, New York, New York, United States of America </plain></SENT>
</text></p></fn></author-notes><pub-date pub-type="collection"><year>2012</year></pub-date><pub-date pub-type="epub"><day>27</day><month>12</month><year>2012</year></pub-date><volume>7</volume><issue>12</issue><elocation-id>e52505</elocation-id><history><date date-type="received"><day>25</day><month>7</month><year>2012</year></date><date date-type="accepted"><day>14</day><month>11</month><year>2012</year></date></history><permissions><copyright-statement>© 2012 Malisi et al</copyright-statement><copyright-year>2012</copyright-year><copyright-holder>Malisi et al</copyright-holder><license xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are properly credited.</license-p></license></permissions><abstract><p><SecTag type="ABS"><text><SENT sid="9" pm="."><plain>Engineering specific interactions between proteins and small molecules is extremely useful for biological studies, as these interactions are essential for molecular recognition. </plain></SENT>
<SENT sid="10" pm="."><plain>Furthermore, many biotechnological applications are made possible by such an engineering approach, ranging from biosensors to the design of custom enzyme catalysts. </plain></SENT>
<SENT sid="11" pm="."><plain>Here, we present a novel method for the computational design of protein-small ligand binding named PocketOptimizer. </plain></SENT>
<SENT sid="12" pm="."><plain>The program can be used to modify protein binding pocket residues to improve or establish binding of a small molecule. </plain></SENT>
<SENT sid="13" pm="."><plain>It is a modular pipeline based on a number of customizable molecular modeling tools to predict mutations that alter the affinity of a target protein to its ligand. </plain></SENT>
<SENT sid="14" pm="."><plain>At its heart it uses a receptor-ligand scoring function to estimate the binding free energy between protein and ligand. </plain></SENT>
<SENT sid="15" pm="."><plain>We compiled a benchmark set that we used to systematically assess the performance of our method. </plain></SENT>
<SENT sid="16" pm="."><plain>It consists of proteins for which mutational variants with different binding affinities for their ligands and experimentally determined structures exist. </plain></SENT>
<SENT sid="17" pm="."><plain>Within this test set PocketOptimizer correctly predicts the mutant with the higher affinity in about 69% of the cases. </plain></SENT>
<SENT sid="18" pm="."><plain>A detailed analysis of the results reveals that the strengths of PocketOptimizer lie in the correct introduction of stabilizing hydrogen bonds to the ligand, as well as in the improved geometric complemetarity between ligand and binding pocket. </plain></SENT>
<SENT sid="19" pm="."><plain>Apart from the novel method for binding pocket design we also introduce a much needed benchmark data set for the comparison of affinities of mutant binding pockets, and that we use to asses programs for in silico design of ligand binding. </plain></SENT>
</text></SecTag></p></abstract><funding-group><funding-statement>This work was supported by Deutsche Forschungsgemeinschaft Grant HO 4022/2-1. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement></funding-group><counts><page-count count="9"/></counts></article-meta></front><body><SecTag type="INTRO"><sec id="s1"><title><text><SENT sid="20" pm="."><plain>Introduction </plain></SENT>
</text></title><p><text><SENT sid="21" pm="."><plain>Computational protein design has advanced rapidly in recent years. </plain></SENT>
<SENT sid="22" pm="."><plain>A particularly exciting and dynamic area is the design of interactions between proteins and small molecule ligands. </plain></SENT>
<SENT sid="23" pm="."><plain>This includes the design of receptors that bind ligands of choice, which for example can be used as biosensors [1], as well as the design of enzymes that do not only bind a substrate, but also contain the catalytic machinery to process it [2]–[3]. </plain></SENT>
<SENT sid="24" pm="."><plain>In all these designs, an existing protein is used as a scaffold, and its binding pocket is altered or a new one is introduced that should interact with the target ligand. </plain></SENT>
</text></p><p><text><SENT sid="25" pm="."><plain>With this approach, enzymes have been designed that catalyze chemical reactions for which no natural catalysts exist, such as a kemp eliminase [4]–[5], a diels-alderase [6], and a retro-aldolase [7]. </plain></SENT>
<SENT sid="26" pm="."><plain>It has also been used to design a metalloenzyme by repurposing parts of the already existing catalytic machinery in the scaffold protein, namely the reactivity of a zinc metal center to hydrolyze organophosphates [8]. </plain></SENT>
<SENT sid="27" pm="."><plain>Furthermore, similar methods have been applied to change substrate specificities as well as affinities. </plain></SENT>
<SENT sid="28" pm="."><plain>For example human guanine deaminase was changed to bind ammelide through the remodeling of a loop that now provides a key interaction to the new target substrate [9], the substrate specificity of gramicidin S synthetase was changed from phenylalanine to leucine [10], and mutations in dihydrofolate reductase from Staphylococcus aureus were predicted that decrease binding to an inhibitor molecule while stabilizing native protein function [11]. </plain></SENT>
</text></p><p><text><SENT sid="29" pm="."><plain>While these are impressive results, there is still much room for improvement in the computational methods. </plain></SENT>
<SENT sid="30" pm="."><plain>Specifically, it seems to be difficult to accurately design a protein for high affinity binding to a ligand or transition state [12]. </plain></SENT>
<SENT sid="31" pm="."><plain>The majority of the enzyme designs mentioned have low affinities for their substrates when compared to naturally occurring enzymes [13]–[14]. </plain></SENT>
<SENT sid="32" pm="."><plain>In a rare report of a failed attempt, the unsuccessful design of a high-affinity ligand binding site for a D-Ala- D-Ala dipeptide into an endo-1,4-xylanase scaffold was discussed. </plain></SENT>
<SENT sid="33" pm="."><plain>Designs by the employed design software Rosetta did not show the predicted high affinity in the experimental tests underscoring the challenge of protein-ligand interface design [15]. </plain></SENT>
<SENT sid="34" pm="."><plain>In this respect long-range electrostatics and dynamics, accurate modeling of solvation and electrostatics at the interface, as well as the inclusion of explicit water molecules have been named as most problematic areas [13]–[16]. </plain></SENT>
<SENT sid="35" pm="."><plain>In order to improve protein-ligand interface design and to overcome current limitations it will be necessary to test design protocols more systematically. </plain></SENT>
</text></p><p><text><SENT sid="36" pm="."><plain>In this respect, we noticed that in computational design studies there is a lack of more general benchmark sets. </plain></SENT>
<SENT sid="37" pm="."><plain>Related molecular modeling techniques are regularly assessed using test sets. </plain></SENT>
<SENT sid="38" pm="."><plain>For example protein-ligand docking algorithms have been compared in detail [17]–[18] [19]–[20]. </plain></SENT>
<SENT sid="39" pm="."><plain>Also the CASP and CAPRI experiments allow unbiased testing of protein structure prediction and protein-protein docking methods [21]. </plain></SENT>
<SENT sid="40" pm="."><plain>In contrast only a few computational design studies tested their employed methodology. </plain></SENT>
<SENT sid="41" pm="."><plain>One example is the redesign of the binding pocket of ribose binding protein for its native ligand using molecular mechanics methods. </plain></SENT>
<SENT sid="42" pm="."><plain>Among the resulting binding pocket sequences, the wild type sequence was ranked second best, while the first and third ranks had only a single mutation and bound ribose with tenfold decreased affinity [22]. </plain></SENT>
<SENT sid="43" pm="."><plain>Also the aforementioned algorithm to introduce one key interaction to a ligand using loop modeling techniques was tested on eight proteins. </plain></SENT>
<SENT sid="44" pm="."><plain>For six of them the method produced a loop of the same length and similar configuration as in the crystal structures [9]. </plain></SENT>
<SENT sid="45" pm="."><plain>Both benchmark tests are very specific, they cannot be used to generally and systematically assess a method’s proficiency in designing binding to a small molecule. </plain></SENT>
<SENT sid="46" pm="."><plain>Also the broader benchmark set that was used to assess the ability of the enzyme design methods RosettaMatch and ScaffoldSelection to identify suitable scaffold proteins that can host a desired catalytic machinery [23]–[24] are not suited for this purpose. </plain></SENT>
<SENT sid="47" pm="."><plain>Such a test set, however, would be very helpful for assessing the potential and the shortcomings of available methods. </plain></SENT>
</text></p><p><text><SENT sid="48" pm="."><plain>In this study, we present PocketOptimizer, a computational pipeline that can be used to predict mutations in the binding pocket of proteins, which increase the affinity of the protein to a given small molecule ligand. </plain></SENT>
<SENT sid="49" pm="."><plain>It can be used for the analysis of few mutations as well as for the design of an entire binding pocket. </plain></SENT>
<SENT sid="50" pm="."><plain>It uses several molecular modeling modules. </plain></SENT>
<SENT sid="51" pm="."><plain>Side chain flexibility is sampled by a conformer library, which we compiled following Boas and Harbury [22]. </plain></SENT>
<SENT sid="52" pm="."><plain>The use of conformer libraries has been reported to be advantageous, especially in the context of binding-site geometries [25] [26]–[27]. </plain></SENT>
<SENT sid="53" pm="."><plain>A receptor-ligand scoring function is used to calculate protein ligand binding strength. </plain></SENT>
<SENT sid="54" pm="."><plain>The modular architecture of PocketOptimizer allows easy and systematic comparison of methods that perform the same task. </plain></SENT>
<SENT sid="55" pm="."><plain>As the first test we utilize this to examine two scoring functions in this study, the scoring function provided by CADDSuite [28] and Autodock Vina [29]. </plain></SENT>
<SENT sid="56" pm="."><plain>In order to assess the performance of PocketOptimizer and other methods that address the same task, we compiled a benchmark set. </plain></SENT>
<SENT sid="57" pm="."><plain>It consists of mutational variants of proteins and their small ligands with available experimental structural and binding affinity data. </plain></SENT>
<SENT sid="58" pm="."><plain>We also used this benchmark to test the enzyme design application included in the Rosetta molecular modeling software. </plain></SENT>
<SENT sid="59" pm="."><plain>Rosetta was used for the majority of the design studies mentioned earlier, and it is the most successful freely available protein design software to date [30]. </plain></SENT>
<SENT sid="60" pm="."><plain>We find that both methods perform similarly. </plain></SENT>
<SENT sid="61" pm="."><plain>In our benchmark PocketOptimizer succeeds slightly better in predicting the correct affinity-enhancing mutations. </plain></SENT>
<SENT sid="62" pm="."><plain>We discuss the strengths and weaknesses of our method and describe to which protein design problems it can be applied with good chances of success. </plain></SENT>
<SENT sid="63" pm="."><plain>The findings emphasize the merit of a systematic approach to evaluate computational protein design methodologies, to identify their strengths, and to pinpoint possibilities for improvement. </plain></SENT>
<SENT sid="64" pm="."><plain>And our modular program PocketOptimizer provides a suitable framework to test and implement these approaches. </plain></SENT>
</text></p></sec></SecTag><SecTag type="RESULTS,DISCUSS"><sec id="s2"><title><text><SENT sid="65" pm="."><plain>Results and Discussion </plain></SENT>
</text></title><sec id="s2a"><title><text><SENT sid="66" pm="."><plain>Computational Receptor Design Pipeline PocketOptimizer </plain></SENT>
</text></title><p><text><SENT sid="67" pm="."><plain>We developed PocketOptimizer for the design of protein-ligand interactions. </plain></SENT>
<SENT sid="68" pm="."><plain>In combination with a program such as ScaffoldSelection [24] it can also be used for enzyme design. </plain></SENT>
<SENT sid="69" pm="."><plain>PocketOptimizer is a combination of customizable molecular modeling components. </plain></SENT>
<SENT sid="70" pm="."><plain>Amino acid flexibility is modeled by a side chain conformer library, ligand flexibility is addressed by systematically sampling poses of the ligand in the binding pocket. </plain></SENT>
<SENT sid="71" pm="."><plain>The score that is optimized is a combination of protein packing energy calculated with the AMBER force field [31], and protein-ligand binding energy calculated using a scoring function. </plain></SENT>
<SENT sid="72" pm="."><plain>To identify the most promising design, the global minimum energy conformation of a protein pocket with the ligand based on the combined energy score is calculated [32]–[33]. </plain></SENT>
<SENT sid="73" pm="."><plain>Intermediate results like conformers or score tables are stored in standard file formats, making it easy to compare different approaches for a given subtask. </plain></SENT>
<SENT sid="74" pm="."><plain>Notably, we used two receptor-ligand scoring functions in this study, the scoring function included in CADDSuite [28] and Autodock Vina [29]. Figure 1 depicts the workflow of the PocketOptimizer pipeline. </plain></SENT>
</text></p><SecTag type="FIG"><fig id="pone-0052505-g001" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0052505.g001</object-id><label>Figure 1</label><caption><title><text><SENT sid="75" pm="."><plain>Workflow of PocketOptimizer. </plain></SENT>
</text></title><p><text><SENT sid="76" pm="."><plain>The input specific for a design is depicted in circles, parts of the pipeline are shown in pointed rectangles, and output components in rounded rectangles. </plain></SENT>
<SENT sid="77" pm="."><plain>The output is stored in standard file formats (SDF and PDB for structural data, csv for energy tables). </plain></SENT>
<SENT sid="78" pm="."><plain>This allows the easy replacement of a component with another that solves the same task (e.g. replacing the binding score function). </plain></SENT>
</text></p></caption><graphic xlink:href="pone.0052505.g001"/></fig></SecTag><p><text><SENT sid="79" pm="."><plain>The program PocketOptimizer is designed as a modular pipeline that allows exchange of program parts, e.g. the use of different available docking functions or force-fields. </plain></SENT>
<SENT sid="80" pm="."><plain>In contrast to other existing design programs this pipeline aims to provide a platform for the incorporation and testing of available modules so that the contribution of individual parts can be distinguished. </plain></SENT>
<SENT sid="81" pm="."><plain>In its current implementation of PocketOptimizer we chose to use a conformer library over rotamers. </plain></SENT>
<SENT sid="82" pm="."><plain>The program is geared towards the design of protein-ligand interaction, however it can also be used for prediction of protein packing only. </plain></SENT>
<SENT sid="83" pm="."><plain>Currently not incorporated are backbone flexibility and negative design capabilities. </plain></SENT>
</text></p><p><text><SENT sid="84" pm="."><plain>PocketOptimizer source code and documentation can be obtained from the authors or from <ext-link ext-link-type="uri" xlink:href="http://www.eb.mpg.de/research-groups/birte-hoecker/algorithms-and-software.html">www.eb.mpg.de/research-groups/birte-hoecker/algorithms-and-software.html</ext-link>. </plain></SENT>
</text></p></sec><sec id="s2b"><title><text><SENT sid="85" pm="."><plain>Benchmark Set </plain></SENT>
</text></title><p><text><SENT sid="86" pm="."><plain>We compiled a set of twelve proteins with structural and experimental affinity data for the assessment of computational design methods for protein-ligand binding. </plain></SENT>
<SENT sid="87" pm="."><plain>For this, we systematically searched the PDBbind database [34], which lists high quality crystal structures of protein-ligand complexes together with experimentally determined binding data. </plain></SENT>
<SENT sid="88" pm="."><plain>Each protein in our set has at least two mutational variants (usually the wild type and one or more mutants) accompanied by an affinity measure (the inhibitory constant  or dissociation constant ) for the same ligand. </plain></SENT>
<SENT sid="89" pm="."><plain>The positions of amino acids that differ between the variants are always located in the binding pocket or active site. </plain></SENT>
<SENT sid="90" pm="."><plain>For each protein, there is at least one crystal structure of a variant with the ligand, for ten of the twelve there are two or more crystal structures that allow us to compare a design model of a variant with the respective crystal structure. </plain></SENT>
<SENT sid="91" pm="."><plain>The proteins and ligands in our benchmark set are very diverse. </plain></SENT>
<SENT sid="92" pm="."><plain>All ligands are shown in Figure 2. </plain></SENT>
<SENT sid="93" pm="."><plain>Each protein in the set belongs to a different fold as defined by SCOP [35], underscoring their structural diversity. </plain></SENT>
<SENT sid="94" pm="."><plain>This diversity allows to test design methods on a wide range of problems and avoids bias. Table 1 lists the benchmark proteins and their associated data. </plain></SENT>
</text></p><SecTag type="FIG"><fig id="pone-0052505-g002" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0052505.g002</object-id><label>Figure 2</label><caption><title><text><SENT sid="95" pm="."><plain>Two-dimensional structures of benchmark set ligands. </plain></SENT>
</text></title><p><text><SENT sid="96" pm="."><plain>The ligands of the test cases of our benchmark sets. </plain></SENT>
<SENT sid="97" pm="."><plain>See Table 1 for which ligand belongs to which test case. </plain></SENT>
</text></p></caption><graphic xlink:href="pone.0052505.g002"/></fig></SecTag><SecTag type="TABLE"><table-wrap id="pone-0052505-t001" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0052505.t001</object-id><label>Table 1</label><caption><title><text><SENT sid="98" pm="."><plain>Benchmark set. </plain></SENT>
</text></title></caption><alternatives><graphic id="pone-0052505-t001-1" xlink:href="pone.0052505.t001"/></alternatives><table-wrap-foot><fn id="nt101"><label/><p><text><SENT sid="99" pm="."><plain>Each row lists a test case. </plain></SENT>
<SENT sid="100" pm="."><plain>Columns Protein and Ligand contain the name of protein or ligand, Positions the indices of the mutable positions (for HIV protease along with the chain identifier, in the other cases the pocket is formed by one chain only), Mutants lists the variants: in subcolumn AA the amino acids at the mutable positions, in aff. the affinities of the variants, and in PDB the PDB identifier of the corresponding crystal structure, should one exist. </plain></SENT>
</text></p></fn></table-wrap-foot></table-wrap></SecTag></sec><sec id="s2c"><title><text><SENT sid="101" pm="."><plain>Benchmark Results </plain></SENT>
</text></title><p><text><SENT sid="102" pm="."><plain>The optimization scheme of PocketOptimizer simultaneously chooses sequence and conformation. </plain></SENT>
<SENT sid="103" pm="."><plain>It can go over many alternatives. </plain></SENT>
<SENT sid="104" pm="."><plain>For the benchmark, however, it was necessary to restrict the sequence to the mutations for which experimental data was available. </plain></SENT>
<SENT sid="105" pm="."><plain>We tested the performance of PocketOptimizer on the benchmark set using Autodock Vina and CADDSuite receptor-ligand scores as well as Rosetta’s enzyme design application. </plain></SENT>
<SENT sid="106" pm="."><plain>Each method was used for the same set of design calculations. </plain></SENT>
<SENT sid="107" pm="."><plain>Each available crystal structure was used as a scaffold for the design of each mutational variant. </plain></SENT>
<SENT sid="108" pm="."><plain>We obtained a design for each mutation in each scaffold structure by forcing the methods to select a particular mutation in a separate run. </plain></SENT>
<SENT sid="109" pm="."><plain>This allowed us to compare the predicted binding and total energy scores as well as the designed conformations with the experimental data. Figure 3 shows the RMSD values between the designs and the respective crystal structures. </plain></SENT>
<SENT sid="110" pm="."><plain>This is a measure of how well the respective method models the conformation of the binding pocket residues and the ligand pose in the pocket. </plain></SENT>
<SENT sid="111" pm="."><plain>Rosetta performs better in modeling side chains in the binding pocket. </plain></SENT>
<SENT sid="112" pm="."><plain>The difference between the pocket RMSDs of Rosetta and each of the two PocketOptimizer variants is statistically significant with a p-value &lt;0.01 according to a Mann-Whitney test. </plain></SENT>
<SENT sid="113" pm="."><plain>This might not come as a surprise considering that the Rosetta molecular modeling software is extensively used and optimized for protein packing tasks, especially protein structure prediction. </plain></SENT>
<SENT sid="114" pm="."><plain>PocketOptimizer on the other hand focuses on the identification of residues interacting favorably with the ligand. </plain></SENT>
<SENT sid="115" pm="."><plain>The observed differences in ligand pose RMSD are not statistically significant (Figure 3). </plain></SENT>
<SENT sid="116" pm="."><plain>To assess whether the methods can differentiate correctly between protein variants that have a large affinity difference, we looked at pairs that have an affinity difference of at least 50-fold. </plain></SENT>
<SENT sid="117" pm="."><plain>This cutoff translates to roughly 2.3 kcal/mole and was chosen to make sure that only pairs with clear, trustworthy affinity differences well outside experimental error are investigated. Table 2 lists the number of pairs in which the order of the mutants according to energy score is the same as the order according to affinity, meaning the design method would produce the correct ranking. </plain></SENT>
<SENT sid="118" pm="."><plain>Here, PocketOptimizer performs in the same range as Rosetta, with 69% correctly predicted pairs opposed to 64%. </plain></SENT>
<SENT sid="119" pm="."><plain>When comparing the two receptor-ligand score functions we used in our approach it seems that Autodock Vina has some advantage over the CADDSuite score. </plain></SENT>
<SENT sid="120" pm="."><plain>The total scores of the different methods are also listed. </plain></SENT>
<SENT sid="121" pm="."><plain>Based on these scores PocketOptimizer performs even better with 71% and 76% correctly predicted pairs. </plain></SENT>
<SENT sid="122" pm="."><plain>However, since we are looking at affinity prediction, the binding score appears to be more appropriate for the comparison. </plain></SENT>
</text></p><SecTag type="FIG"><fig id="pone-0052505-g003" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0052505.g003</object-id><label>Figure 3</label><caption><title><text><SENT sid="123" pm="."><plain>Differences of the ligand poses and pocket side chains in the benchmark designs compared to the crystal structures. </plain></SENT>
</text></title><p><text><SENT sid="124" pm="."><plain>The upper graph shows the average RMSDs and standard deviation between the ligand pose in the designs and in the crystal structures. </plain></SENT>
<SENT sid="125" pm="."><plain>The lower graph shows the average RMSD and standard deviation between the binding pocket side chain heavy atoms of designs and the corresponding crystal structure. </plain></SENT>
<SENT sid="126" pm="."><plain>The RMSDs are calculated after superimposing the structures using the backbone to make sure that the differences come from pocket/ligand pose differences only. </plain></SENT>
<SENT sid="127" pm="."><plain>RMSD from PocketOptimizer CADDSuite score designs are plotted in blue, from PocketOptimizer vina designs in green, and from Rosetta designs in red. </plain></SENT>
<SENT sid="128" pm="."><plain>Each point marks the average RMSD for all designs of a test case usign one score. </plain></SENT>
<SENT sid="129" pm="."><plain>The number of designs that contribute to a value depends on the number of mutations with a crystal structure, it is the square of this number (because each structure is used as a design scaffold for each mutation). </plain></SENT>
<SENT sid="130" pm="."><plain>Test cases are: CA: Carbonic anhydrase II, ABP D7r4 amine binding protein, ER: Estrogen receptor , HP: HIV-1 protease, KI: Ketosteroid isomerase, L: Lectin, MS: Methylglyoxal synthase, N1: Neuroaminidase test 1, N2: Neuroaminidase test 2, PNP: Purine nucleoside phosphorylase, S1: Streptavidin test 1, S2: Streptavidin test 2, TS: Thymidylate synthase, T: Trypsin. </plain></SENT>
</text></p></caption><graphic xlink:href="pone.0052505.g003"/></fig></SecTag><SecTag type="TABLE"><table-wrap id="pone-0052505-t002" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0052505.t002</object-id><label>Table 2</label><caption><title><text><SENT sid="131" pm="."><plain>Order of designs by predicted binding score. </plain></SENT>
</text></title></caption><alternatives><graphic id="pone-0052505-t002-2" xlink:href="pone.0052505.t002"/></alternatives><table-wrap-foot><fn id="nt102"><label/><p><text><SENT sid="132" pm="."><plain>Numbers of correctly ranked design mutation pairs with large affinity difference. All mutation pairs for which there is an affinity difference of at least 50-fold are investigated. </plain></SENT>
<SENT sid="133" pm="."><plain>All design pairs with these mutations (i.e. for each of these pairs there are as many design pairs as scaffold crystal structures) are checked, if the order of the mutations by total score or binding score is the same order as by affinity. </plain></SENT>
<SENT sid="134" pm="."><plain>A cell shows the number of correctly ordered design pairs, and the number of all design pairs. </plain></SENT>
<SENT sid="135" pm="."><plain>The mean for this part is calculated by scaling the percentage of a test case by the number of mutation pairs (i.e. NOT by design pairs, which would bias the value too much towards test cases with many crystal structures). </plain></SENT>
</text></p></fn></table-wrap-foot></table-wrap></SecTag><p><text><SENT sid="136" pm="."><plain>We further examined how well the energy scores correlate with the affinities. </plain></SENT>
<SENT sid="137" pm="."><plain>For this we plotted the predicted energy of each design against the logarithmic affinities for all seven test cases with more than two mutations (Figure 4). </plain></SENT>
<SENT sid="138" pm="."><plain>The scores should correspond to the binding free energy, which in turn is proportional to the logarithm of the affinity of binding. </plain></SENT>
<SENT sid="139" pm="."><plain>Here, all mutants with experimental affinity values of a test case are included, regardless of the extent of the affinity difference. </plain></SENT>
<SENT sid="140" pm="."><plain>Overall we find that the energy values follow the affinity logarithm only in some cases. </plain></SENT>
</text></p><SecTag type="FIG"><fig id="pone-0052505-g004" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0052505.g004</object-id><label>Figure 4</label><caption><title><text><SENT sid="141" pm="."><plain>Comparison of the energy scores versus the affinities of the mutations show how well the programs reproduce the differences. </plain></SENT>
</text></title><p><text><SENT sid="142" pm="."><plain>For each test case with more than two mutations, we plotted the top binding scores of CADDSuite, Vina, and Rosetta designs for each mutation on each scaffold structure together with the logarithm of the affinity. </plain></SENT>
<SENT sid="143" pm="."><plain>Here we show plots for Carbonic anhydrase II, HIV-1 protease, and Streptavidin test 1. </plain></SENT>
<SENT sid="144" pm="."><plain>All other plots are shown in Information S1. </plain></SENT>
<SENT sid="145" pm="."><plain>Values are scaled to fit in the same range. </plain></SENT>
<SENT sid="146" pm="."><plain>Shown on the x-axis of a plot are the mutants in order of affinity to the ligand (the leftmost has the lowest affinity, compare Table 1 for the actual values). </plain></SENT>
<SENT sid="147" pm="."><plain>The y-axis measures predicted binding scores for the designs, and the log affinities, scaled between 0 and 1. </plain></SENT>
<SENT sid="148" pm="."><plain>Both are proportional to the binding free energy, and can therefore be compared when scaled to the same range. </plain></SENT>
<SENT sid="149" pm="."><plain>The lowest predicted binding score or log affinity is set to 0, the highest respective value to 1. </plain></SENT>
<SENT sid="150" pm="."><plain>Each plot contains a line for the affinity logarithm (solid, black no marker). </plain></SENT>
<SENT sid="151" pm="."><plain>This line represents the goal, if a method predicts binding well, the binding score lines should closely follow the log affinity line. </plain></SENT>
<SENT sid="152" pm="."><plain>The other markers and lines show the scaled predicted binding scores. </plain></SENT>
<SENT sid="153" pm="."><plain>One line represents the designs calculated for all available mutants, calculated by using one crystal structure as the scaffold. </plain></SENT>
<SENT sid="154" pm="."><plain>(Crystal structure 1: dashed, blue, circle markers; structure 2: red, dotted, square markers; structure 3: green, dash-dot pattern, diamond markers; structure 4: cyan, two dashes one dot pattern, star markers). </plain></SENT>
<SENT sid="155" pm="."><plain>We chose to use lines for representation, because this makes it easy to visually compare the shape of the black log affinity line to the lines representing the design binding scores. </plain></SENT>
<SENT sid="156" pm="."><plain>Each row has plots for one test case, in parentheses the order of scaffold structures is listed: CA: Carbonic anhydrase II (1ydb, 1yda, 1ydd), HP: HIV-1 protease (1met, 1meu, 1mes), S1: Streptavidin test 1 (1swe, 1n43). </plain></SENT>
</text></p></caption><graphic xlink:href="pone.0052505.g004"/></fig></SecTag></sec><sec id="s2d"><title><text><SENT sid="157" pm="."><plain>Discussion of Benchmark Results </plain></SENT>
</text></title><p><text><SENT sid="158" pm="."><plain>When looking at a pair of protein variants, PocketOptimizer is able to correctly predict which variant has a better binding affinity if that difference is based on the introduction or abolition of a direct interaction of the mutable residue’s side chain with the ligand. </plain></SENT>
<SENT sid="159" pm="."><plain>This is especially noteworthy for pairs where one residue forms a hydrogen bond with the ligand, while the other does not. </plain></SENT>
<SENT sid="160" pm="."><plain>This was predicted correctly in seven of eight cases where the better binding variant forms an additional hydrogen bond. </plain></SENT>
<SENT sid="161" pm="."><plain>It also works well if the variable side chain of one mutation variant is bulkier than its counterpart in another variant, and therefore packs better against the ligand, i.e. forms more van der Waals (vdW) interactions with the ligand and shields it better from solvent, improving the solvation energy contribution. </plain></SENT>
<SENT sid="162" pm="."><plain>A potential downside of this effect of vdW contact improvement is that PocketOptimizer sometimes seems to prefer larger side chains even if they are detrimental to binding for other reasons. </plain></SENT>
<SENT sid="163" pm="."><plain>This tendency could lead to an overpacking of the designed pocket. </plain></SENT>
<SENT sid="164" pm="."><plain>When differences in binding have more complex causes, such as rearrangements in the pocket’s side chains that affect the ligand interaction indirectly by influencing other pocket side chains, the program generally fails to capture these differences. </plain></SENT>
</text></p><p><text><SENT sid="165" pm="."><plain>Both scoring functions used within PocketOptimizer, from Autodock Vina and CADDSuite, produce results that are quite similar. </plain></SENT>
<SENT sid="166" pm="."><plain>The overpacking effect discussed before is less pronounced in Vina, which explains its slightly better performance in predicting which variant of a pair binds better (see Table 2). </plain></SENT>
<SENT sid="167" pm="."><plain>Generally, the order of the designs by energy scores calculated by our method does not depend on which variant’s crystal structure was used as the scaffold. </plain></SENT>
<SENT sid="168" pm="."><plain>Only in a few cases a significant difference can be observed, notably for carbonic anhydrase II and trypsin. </plain></SENT>
</text></p><p><text><SENT sid="169" pm="."><plain>In some cases, the PocketOptimizer designs did not contain a conformational configuration that avoids vdW clashes in the binding pocket. </plain></SENT>
<SENT sid="170" pm="."><plain>In one test case, namely for neuroaminidase, the program was unable to identify any acceptable pocket conformation. </plain></SENT>
<SENT sid="171" pm="."><plain>One limitation of PocketOptimizer and a probable cause for such problems is the assumption of a fixed backbone in our designs. </plain></SENT>
<SENT sid="172" pm="."><plain>An adjustment of the backbone conformation might have helped to accommodate the tyrosine. </plain></SENT>
<SENT sid="173" pm="."><plain>It is also conceivable that our way of systematically sampling possible ligand poses could have failed to generate a pose that is sterically compatible in the neuroaminidase case. </plain></SENT>
</text></p><p><text><SENT sid="174" pm="."><plain>Rosetta’s enzyme design application does not suffer from unresolvable vdW clashes. </plain></SENT>
<SENT sid="175" pm="."><plain>It includes minimization steps in its algorithm that can resolve potential clashes introduced by discrete conformational sampling. </plain></SENT>
<SENT sid="176" pm="."><plain>However, Rosetta apparently cannot convey its superiority in modeling the binding pocket side chains to the prediction of the correct binding score order. </plain></SENT>
<SENT sid="177" pm="."><plain>It is unable to predict the rearrangements of side chain conformations that lead to binding affinity changes in the more complicated test cases. </plain></SENT>
<SENT sid="178" pm="."><plain>The energy term for hydrogen bonds in Rosetta seems to have less influence on the output than in our program. </plain></SENT>
<SENT sid="179" pm="."><plain>This causes Rosetta to miss existing hydrogen bonds between ligand and side chains. </plain></SENT>
<SENT sid="180" pm="."><plain>The binding scores and their differences predicted for different mutants are more dependent on the scaffold structure used in Rosetta designs than it is in PocketOptimizer. </plain></SENT>
<SENT sid="181" pm="."><plain>This can be seen in Figure 4: the lines for designs of both PocketOptimizer variants, Vina and CADDSuite, are more similar to each other than the ones for Rosetta designs. </plain></SENT>
<SENT sid="182" pm="."><plain>This is rather surprising, as we anticipated that the limited backbone flexibility included in the Rosetta enzyme design protocol would lead to less dependency on these small input structure differences. </plain></SENT>
</text></p><p><text><SENT sid="183" pm="."><plain>A more detailed description of each test case, including what is known from experimental and structural studies about the factors that influence binding differences in the test cases, as well as the success of the methods in reproducing these factors, is provided in the Information S1. </plain></SENT>
</text></p></sec><sec id="s2e"><title><text><SENT sid="184" pm="."><plain>Conclusion </plain></SENT>
</text></title><p><text><SENT sid="185" pm="."><plain>We developed a pipeline of molecular modeling tools named PocketOptimizer. </plain></SENT>
<SENT sid="186" pm="."><plain>The program can be used to predict affinity altering mutations in existing protein binding pockets. </plain></SENT>
<SENT sid="187" pm="."><plain>For enzyme design applications it can be combined with a program such as ScaffoldSelection [24]. </plain></SENT>
<SENT sid="188" pm="."><plain>In PocketOptimizer receptor-ligand scoring functions are used to assess binding. </plain></SENT>
<SENT sid="189" pm="."><plain>For its evaluation, we compiled a benchmark set of proteins for which crystal structures and experimental affinity data are available and that can be used to test our and other methodologies. </plain></SENT>
<SENT sid="190" pm="."><plain>We subjected PocketOptimizer as well as the state-of-the-art method Rosetta to our benchmark test. </plain></SENT>
<SENT sid="191" pm="."><plain>The overall performance of both approaches was similar, but in detail both had different benefits. </plain></SENT>
<SENT sid="192" pm="."><plain>Rosetta handles the conformational modeling of the binding pocket better, while PocketOptimizer has the advantage in predicting which of a pair of mutants of the same protein binds the ligand better. </plain></SENT>
<SENT sid="193" pm="."><plain>This prediction was correct in 66 or 69% of the tested cases using PocketOptimizer (CADDSuite or Vina score, respectively) and in 64% of the cases using Rosetta. </plain></SENT>
</text></p><p><text><SENT sid="194" pm="."><plain>The results show that PocketOptimizer is a well performing tool for the design of protein-ligand interactions. </plain></SENT>
<SENT sid="195" pm="."><plain>It is especially suited for the introduction of a hydrogen bond if there is an unsatisfied hydrogen donor or acceptor group in the ligand, and for filling voids between the protein and the ligand to improve vdW interactions. </plain></SENT>
<SENT sid="196" pm="."><plain>For affinity design problems that require a more complex rearrangement of the binding pocket, e.g. a mutation making room for another side chain to interact with the ligand, none of the tested methods appear to perform well. </plain></SENT>
</text></p><p><text><SENT sid="197" pm="."><plain>There are also some other obvious effects that can influence binding, but that are not addressable with the current methods, e.g. protein dynamics or rearrangements of the backbone. </plain></SENT>
<SENT sid="198" pm="."><plain>Such problems are probably harder to address than the more complicated test cases dealt with in this study, so that we do not expect that current methods can tackle them with much success. </plain></SENT>
<SENT sid="199" pm="."><plain>Some apparent problems of PocketOptimizer, however, such as the occurrence of unresolvable steric clashes between ligand and side chains should be mendable by better sampling of the conformational space and the introduction of backbone flexibility [36] [37]–[38]. </plain></SENT>
<SENT sid="200" pm="."><plain>It is conceivable that a continuous minimization step at the end of the design calculation could also be beneficial. </plain></SENT>
</text></p><p><text><SENT sid="201" pm="."><plain>In conclusion, it seems that although PocketOptimizer performs well, and even better in some respects than the state-of-the-art method Rosetta, there is still room for improvement in computational design of protein-ligand binding. </plain></SENT>
<SENT sid="202" pm="."><plain>Our study highlights the usefulness of benchmark data sets and systematic testing in order to arrive at an informed assessment of computational design methods. </plain></SENT>
<SENT sid="203" pm="."><plain>In fact it would be interesting to test other available protein design schemes using our benchmark. </plain></SENT>
<SENT sid="204" pm="."><plain>A comparison of their performance should be very informative. </plain></SENT>
<SENT sid="205" pm="."><plain>Further, the benchmark will be useful in future test of parts of our modular design pipeline, e.g. by exchanging the force-field in PocketOptimizer its contribution can be tested rather than the overall design approach. </plain></SENT>
</text></p><p><text><SENT sid="206" pm="."><plain>When we started to compile our benchmark set, we were hoping for considerably more test cases. </plain></SENT>
<SENT sid="207" pm="."><plain>The fact that out of the 6,005 protein structures currently contained in the PDBbind database, only ten suitable test cases could be extracted (twelve if the double cases of neuroaminidase and streptavidin are counted), was rather surprising to us. </plain></SENT>
<SENT sid="208" pm="."><plain>This emphasizes the need for more benchmark data. </plain></SENT>
<SENT sid="209" pm="."><plain>Thus, an explicit effort to systematically create experimental and structural data is required. </plain></SENT>
<SENT sid="210" pm="."><plain>For protein-ligand interaction design it would be desirable to have data that covers many mutations of several pocket positions, ideally also of a set of different proteins. </plain></SENT>
</text></p></sec></sec></SecTag><SecTag type="METHODS"><sec sec-type="materials|methods" id="s3"><title><text><SENT sid="211" pm="."><plain>Materials and Methods </plain></SENT>
</text></title><sec id="s3a"><title><text><SENT sid="212" pm="."><plain>Benchmark Set </plain></SENT>
</text></title><p><text><SENT sid="213" pm="."><plain>The basis for the benchmark set is the PDBbind database. </plain></SENT>
<SENT sid="214" pm="."><plain>It contains a set of crystal structures of proteins complexed with small ligands, and the corresponding experimentally determined binding affinity. [34]. </plain></SENT>
<SENT sid="215" pm="."><plain>Our analysis is based on release 2010. </plain></SENT>
<SENT sid="216" pm="."><plain>First, we aligned the sequences of all proteins in the database to each other, using the Needleman-Wunsch algorithm [39] as implemented in the EMBOSS suite [40]. </plain></SENT>
<SENT sid="217" pm="."><plain>The proteins were then clustered with single linkage clustering, a link was assumed if the sequence identity was ≥95%. </plain></SENT>
<SENT sid="218" pm="."><plain>One cluster was assumed to contain structures of variants of the same protein with some mutations. </plain></SENT>
<SENT sid="219" pm="."><plain>Several descriptors were calculated for the protein-ligand complexes. </plain></SENT>
<SENT sid="220" pm="."><plain>If the crystal structure contains water molecules in the binding pocket, waters that have a high probability to play a role in binding were identified and counted. </plain></SENT>
<SENT sid="221" pm="."><plain>This was done with the tool WaterFinder included in CADDSuite [28]–[41] that estimates the strength of binding of a water molecule observed in a crystal structure to the protein. </plain></SENT>
<SENT sid="222" pm="."><plain>The number of rotatable bonds in the ligand is used as a measure of ligand size and flexibility. </plain></SENT>
<SENT sid="223" pm="."><plain>The ligands of all proteins in a cluster were pairwise compared using ligand fingerprints as implemented in OpenBabel [42] to measure their similarity and identity. </plain></SENT>
<SENT sid="224" pm="."><plain>For protein pairs of the same cluster with identical ligands, the pockets as defined by PDBbind were investigated for any mismatches corresponding to mutations. </plain></SENT>
<SENT sid="225" pm="."><plain>To identify suitable protein pairs, we searched our dataset for protein variants within a cluster that (1) have the same ligand bound, (2) contain at least one mutation in the binding pocket, (3) have no mutations elsewhere, (4) contain less than four water molecules potentially involved in binding, and (5) have a ligand with less than 15 rotatable bonds. </plain></SENT>
<SENT sid="226" pm="."><plain>As the results contained mostly single mutants, an additional search was performed looking for mutants with (1) at least two mutations in the pocket, (2) no mutations elsewhere, (3) allowing for less than 15 rotatable ligand bonds and (4) less than 7 potential binding waters molecules. </plain></SENT>
<SENT sid="227" pm="."><plain>The proteins identified by these searches were investigated further by visually inspecting their structure and looking at the corresponding literature. </plain></SENT>
<SENT sid="228" pm="."><plain>Suitable proteins were included in our set. </plain></SENT>
<SENT sid="229" pm="."><plain>Reasons for rejecting a protein were large conformational differences of the backbone in the binding pocket, the fact that affinity differences between variants is not caused by any protein-ligand interaction, but for example by changes in protein dynamics, and missing atoms of residues in the binding pocket in a crystal structure. </plain></SENT>
</text></p></sec><sec id="s3b"><title><text><SENT sid="230" pm="."><plain>Design Pipeline PocketOptimizer </plain></SENT>
</text></title><p><text><SENT sid="231" pm="."><plain>A diagram of the PocketOptimizer workflow is shown in Figure 1. </plain></SENT>
<SENT sid="232" pm="."><plain>The backbone conformation of the protein stays fixed in the calculations, as do the side chain conformations of residues that do not contact the ligand or a residue that is mutated between variants. </plain></SENT>
<SENT sid="233" pm="."><plain>Amino acid side chain flexibility is sampled by a conformer library we compiled for this purpose [25]–[27]. </plain></SENT>
<SENT sid="234" pm="."><plain>For this, a set of high-quality protein structures from the PDB was selected by requiring a maximal resolution of 1.2 Å at least 40 residues, no CAVEAT record. </plain></SENT>
<SENT sid="235" pm="."><plain>Hydrogen atoms were added using reduce [43]. </plain></SENT>
<SENT sid="236" pm="."><plain>Side chain conformers of these structures were further filtered by requiring a temperature factor below 30, no alternative conformations and no overlaps with other atoms in the structure according to probe [44]. </plain></SENT>
<SENT sid="237" pm="."><plain>The conformers were superimposed at the backbone atoms and clustered as described in reference [22], resulting in 2211 conformers. </plain></SENT>
<SENT sid="238" pm="."><plain>The generation of ligand conformers and binding pocket poses also closely follows reference [22]. </plain></SENT>
<SENT sid="239" pm="."><plain>Ligand conformers are created with omega2 by OpenEye Software [45]. </plain></SENT>
<SENT sid="240" pm="."><plain>These are superimposed onto the ligand in the crystal structure, rotated around 6 approximately equally distributed axes through the ligand center of mass, and translated in x, y, z directions. </plain></SENT>
<SENT sid="241" pm="."><plain>The resulting ligand poses are filtered to exclude poses with obvious clashes with the protein backbone. </plain></SENT>
</text></p><p><text><SENT sid="242" pm="."><plain>Binding energy scores between protein and ligand are calculated by a receptor-ligand scoring function. </plain></SENT>
<SENT sid="243" pm="."><plain>The first one is contained in CADDSuite [28]. </plain></SENT>
<SENT sid="244" pm="."><plain>It is composed of terms for electrostatic, vdW, solvation and hydrogen bond energy scores. </plain></SENT>
<SENT sid="245" pm="."><plain>The second score used by PocketOptimizer is Autodock Vina [29]. </plain></SENT>
<SENT sid="246" pm="."><plain>Protein packing energies are calculated using the AMBER force field [31] with electrostatics scaled by a factor of 0.01. </plain></SENT>
<SENT sid="247" pm="."><plain>In order to be compatible with the energy score optimization algorithm, the energy values have to be pairwise decomposable, i.e. of the form .  are the self energies of the variables (side chain conformers or ligand poses), i.e. their inherent energies and the energies with the fixed protein parts, and  the pairwise energies between the variables. </plain></SENT>
<SENT sid="248" pm="."><plain>As we are interested in improving binding affinity, we chose to upscale the binding energies by a factor of ten for CADDSuite scores and a factor of 100 for Autodock Vina scores to arrive at absolute values that are in the same range as the AMBER packing energies. </plain></SENT>
<SENT sid="249" pm="."><plain>The  and  energy tables are computed for all side chain conformers at the pocket positions and the ligand poses. </plain></SENT>
<SENT sid="250" pm="."><plain>The problem of finding the minimum energy conformation is formulated in graph-theroretic terms [32] and solved using the MPLP algorithm by Sontag et al. [33]. </plain></SENT>
<SENT sid="251" pm="."><plain>The energy minimum identifies the best design with corresponding score values and conformation. </plain></SENT>
</text></p><p><text><SENT sid="252" pm="."><plain>PocketOptimizer is realized as a collection of binaries and scripts that perform the different subtasks. </plain></SENT>
<SENT sid="253" pm="."><plain>It was developed and tested on Ubuntu Linux 10.04 operating system. </plain></SENT>
<SENT sid="254" pm="."><plain>AMBER packing energy calculations are implemented in C++ using BALL [41], so is the ligand pose generation tool. </plain></SENT>
<SENT sid="255" pm="."><plain>Protein-ligand energies for CADDSuite are calculated with a scorer binary implemented in C++ as well, vina energies are calculated using the vina binary provided with the Autodock vina software distribution. </plain></SENT>
<SENT sid="256" pm="."><plain>The side chain conformer library contains the structures of the amino acid side chains in PDB and SDF formats. </plain></SENT>
<SENT sid="257" pm="."><plain>Several Python scripts are provided that interface between the different parts and allow a convenient conducting of a protein design task with the PocketOptimizer pipeline. </plain></SENT>
<SENT sid="258" pm="."><plain>Intermediate result are stored in standard file formats, SDF and PDB formats for structural data, and CSV files for energy tables. </plain></SENT>
<SENT sid="259" pm="."><plain>This allows the user to easily inspect this data with standard tools. </plain></SENT>
<SENT sid="260" pm="."><plain>It also facilitates the possibility to use a different approach for one of the modules, e.g. a different docking function, while the rest of the pipeline can remain unaltered. </plain></SENT>
</text></p></sec><sec id="s3c"><title><text><SENT sid="261" pm="."><plain>Setup for PocketOptimizer Benchmark </plain></SENT>
</text></title><p><text><SENT sid="262" pm="."><plain>The protein structures were briefly minimized using Chimera’s [46] AMBER implementation. </plain></SENT>
<SENT sid="263" pm="."><plain>Amino acids of the binding pocket positions that were allowed to change conformations in the calculations had to have a distance smaller than 4 Å of at least one side chain atom to the ligand or to one of the residues that are mutable. </plain></SENT>
<SENT sid="264" pm="."><plain>Ligand conformers were rotated by ±20° around each axis and translated by 0.5 Å in each direction to create the ligand poses. </plain></SENT>
<SENT sid="265" pm="."><plain>If this resulted in more than 3000 poses, the conformers were filtered by similarity to the crystal structure conformation until meeting the max 3000 poses criterion. </plain></SENT>
<SENT sid="266" pm="."><plain>For proteins that contain metals in their binding pocket that are coordinated by the ligand, the ligand poses were filtered for poses that are geometrically compatible for coordination. </plain></SENT>
</text></p></sec><sec id="s3d"><title><text><SENT sid="267" pm="."><plain>Rosetta Design Setup </plain></SENT>
</text></title><p><text><SENT sid="268" pm="."><plain>The Rosetta enzyme design application as implemented in Rosetta 3.3 [30] was used with parameters closely following the relevant documentation. </plain></SENT>
<SENT sid="269" pm="."><plain>Protein structures were briefly minimized using the Rosetta receptor preparation application provided for this task, generating ten resulting structures of which the one with the best energy was used for the design runs. </plain></SENT>
<SENT sid="270" pm="."><plain>Ligand conformers were generated using omega2, ligand charges added with the quacpac program of OpenEye software [45], and Rosetta ligand params files generated with the provided molfile_to_params python script as included in the 3.3 distribution. </plain></SENT>
<SENT sid="271" pm="."><plain>No catalytic constraints were used for the enzyme design application runs, effectively making it a receptor design application. </plain></SENT>
<SENT sid="272" pm="."><plain>1000 designs were created for every protein and every mutation on that protein with experimental affinity data in the test set. </plain></SENT>
<SENT sid="273" pm="."><plain>The best design was determined by the ranking scheme suggested in the documentation, it is the design with the best predicted binding energy among the designs with the 10% top total scores. </plain></SENT>
</text></p></sec></sec></SecTag><SecTag type="SUPPL"><sec sec-type="supplementary-material" id="s4"><title><text><SENT sid="274" pm="."><plain>Supporting Information </plain></SENT>
</text></title><supplementary-material content-type="local-data" id="pone.0052505.s001"><label>Information S1</label><caption><p><text><SENT sid="275" pm="."><plain>(PDF) </plain></SENT>
</text></p></caption><media xlink:href="pone.0052505.s001.pdf"><caption><p><text><SENT sid="276" pm="."><plain>Click here for additional data file. </plain></SENT>
</text></p></caption></media></supplementary-material></sec></SecTag></body><back><SecTag type="REF"><ref-list><title>References</title><ref id="pone.0052505-ValleBlisle1"><text><SENT sid="277" pm="."><plain>1 Vallée-BélisleA, PlaxcoKW (2010) Structure-switching biosensors: inspired by nature. Curr Opin Struct Biol 20: 518–526.20627702 </plain></SENT>
</text></ref><ref id="pone.0052505-Benson1"><text><SENT sid="278" pm="."><plain>2 BensonDE, WiszMS, HellingaHW (2000) Rational design of nascent metalloenzymes. Proc Natl Acad Sci U S A 97: 6292–6297.10841535 </plain></SENT>
</text></ref><ref id="pone.0052505-Bolon1"><text><SENT sid="279" pm="."><plain>3 BolonDN, MayoSL (2001) Enzyme-like proteins by computational design. Proc Natl Acad Sci U S A 98: 14274–14279.11724958 </plain></SENT>
</text></ref><ref id="pone.0052505-Rthlisberger1"><text><SENT sid="280" pm="."><plain>4 RöthlisbergerD, KhersonskyO, WollacottAM, JiangL, DeChancieJ, et al (2008) Kemp elimination catalysts by computational enzyme design. Nature 453: 190–195.18354394 </plain></SENT>
</text></ref><ref id="pone.0052505-Korendovych1"><text><SENT sid="281" pm="."><plain>5 KorendovychIV, KulpDW, WuY, ChengH, RoderH, et al (2011) Design of a switchable eliminase. Proc Natl Acad Sci U S A 108: 6823–7.21482808 </plain></SENT>
</text></ref><ref id="pone.0052505-Siegel1"><text><SENT sid="282" pm="."><plain>6 SiegelJB, ZanghelliniA, LovickHM, KissG, LambertAR, et al (2010) Computational design of an enzyme catalyst for a stereoselective bimolecular diels-alder reaction. Science 329: 309–313.20647463 </plain></SENT>
</text></ref><ref id="pone.0052505-Jiang1"><text><SENT sid="283" pm="."><plain>7 JiangL, AlthoffEA, ClementeFR, DoyleL, RöthlisbergerD, et al (2008) De novo computational design of retro-aldol enzymes. Science 319: 1387–1391.18323453 </plain></SENT>
</text></ref><ref id="pone.0052505-Khare1"><text><SENT sid="284" pm="."><plain>8 KhareSD, KipnisY, GreisenPJ, TakeuchiR, AshaniY, et al (2012) Computational redesign of a mononuclear zinc metalloenzyme for organophosphate hydrolysis. Nat Chem Biol 8: 294–300.22306579 </plain></SENT>
</text></ref><ref id="pone.0052505-Murphy1"><text><SENT sid="285" pm="."><plain>9 MurphyPM, BolducdJM, GallahereJL, StoddarddBL, BakerD (2009) Alteration of enzyme specificity by computational loop remodeling and design. Proc Natl Acad Sci U S A 0: 00–00. </plain></SENT>
</text></ref><ref id="pone.0052505-Chen1"><text><SENT sid="286" pm="."><plain>10 ChenCY, GeorgievI, AndersonAC, DonaldBR (2009) Computational structure-based redesign of enzyme activity. Proc Natl Acad Sci U S A 106: 3764–3769.19228942 </plain></SENT>
</text></ref><ref id="pone.0052505-Frey1"><text><SENT sid="287" pm="."><plain>11 FreyKM, GeorgievI, DonaldBR, AndersonAC (2010) Predicting resistance mutations using protein design algorithms. Proc Natl Acad Sci U S A 107: 13707–13712.20643959 </plain></SENT>
</text></ref><ref id="pone.0052505-Schreier1"><text><SENT sid="288" pm="."><plain>12 SchreierB, StumppC, WiesnerS, HockerB (2009) Computational design of ligand binding is not a solved problem. Proc Natl Acad Sci U S A 106: 18491–18496.19833875 </plain></SENT>
</text></ref><ref id="pone.0052505-Baker1"><text><SENT sid="289" pm="."><plain>13 BakerD (2010) An exciting but challenging road ahead for computational enzyme design. Protein Sci 19: 1817–1819.20717908 </plain></SENT>
</text></ref><ref id="pone.0052505-Wang1"><text><SENT sid="290" pm="."><plain>14 WangL, AlthoffEA, BolducJ, JiangL, MoodyJ, et al (2012) Structural analyses of covalent enzyme-substrate analog complexes reveal strengths and limitations of de novo enzyme design. J Mol Biol 415: 615–625.22075445 </plain></SENT>
</text></ref><ref id="pone.0052505-Morin1"><text><SENT sid="291" pm="."><plain>15 MorinA, KaufmannKW, FortenberryC, HarpJM, MizoueLS, et al (2011) Computational design of an endo-1,4-beta-xylanase ligand binding site. Protein Eng Des Sel 24: 503–516.21349882 </plain></SENT>
</text></ref><ref id="pone.0052505-Morin2"><text><SENT sid="292" pm="."><plain>16 MorinA, MeilerJ, MizoueLS (2011) Computational design of protein-ligand interfaces: potential in therapeutic development. Trends Biotechnol 29: 159–66.21295366 </plain></SENT>
</text></ref><ref id="pone.0052505-Plewczynski1"><text><SENT sid="293" pm="."><plain>17 PlewczynskiD, ’zniewskiM, AugustyniakR, GinalskiK (2011) Can we trust docking results? evaluation of seven commonly used programs on pdbbind database. J Comput Chem 32: 742–755.20812323 </plain></SENT>
</text></ref><ref id="pone.0052505-Cole1"><text><SENT sid="294" pm="."><plain>18 ColeJC, MurrayCW, NissinkJWM, TaylorRD, TaylorR (2005) Comparing protein-ligand docking programs is difficult. Proteins 60: 325–32.15937897 </plain></SENT>
</text></ref><ref id="pone.0052505-Zavodszky1"><text><SENT sid="295" pm="."><plain>19 ZavodszkyMI, RohatgiA, VanVoorstJR, YanH, KuhnLA (2009) Scoring ligand similarity in structure-based virtual screening. J Mol Recognit 22: 280–92.19235177 </plain></SENT>
</text></ref><ref id="pone.0052505-Perola1"><text><SENT sid="296" pm="."><plain>20 PerolaE, WaltersWP, CharifsonPS (2004) A detailed comparison of current docking and scoring methods on systems of pharmaceutical relevance. Proteins 56: 235–49.15211508 </plain></SENT>
</text></ref><ref id="pone.0052505-Moult1"><text><SENT sid="297" pm="."><plain>21 MoultJ, FidelisK, KryshtafovychA, TramontanoA (2011) Critical assessment of methods of protein structure prediction (casp) –round ix. Proteins 79 Suppl 101–5. </plain></SENT>
</text></ref><ref id="pone.0052505-Boas1"><text><SENT sid="298" pm="."><plain>22 BoasFE, HarburyPB (2008) Design of protein-ligand binding based on the molecular-mechanics energy model. J Mol Biol 380: 415–424.18514737 </plain></SENT>
</text></ref><ref id="pone.0052505-Zanghellini1"><text><SENT sid="299" pm="."><plain>23 ZanghelliniA, JiangL, WollacottAM, ChengG, MeilerJ, et al (2006) New algorithms and an in silico benchmark for computational enzyme design. Protein Sci 15: 2785–94.17132862 </plain></SENT>
</text></ref><ref id="pone.0052505-Malisi1"><text><SENT sid="300" pm="."><plain>24 MalisiC, KohlbacherO, HöckerB (2009) Automated scaffold selection for enzyme design. Proteins 77: 74–83.19408301 </plain></SENT>
</text></ref><ref id="pone.0052505-Shetty1"><text><SENT sid="301" pm="."><plain>25 ShettyRP, BakkerPIWD, DePristoMA, BlundellTL (2003) Advantages of fine-grained side chain conformer libraries. Protein Eng 16: 963–969.14983076 </plain></SENT>
</text></ref><ref id="pone.0052505-Lassila1"><text><SENT sid="302" pm="."><plain>26 LassilaJK, PrivettHK, AllenBD, MayoSL (2006) Combinatorial methods for small-molecule placement in computational enzyme design. Proc Natl Acad Sci U S A 103: 16710–16715.17075051 </plain></SENT>
</text></ref><ref id="pone.0052505-Xiang1"><text><SENT sid="303" pm="."><plain>27 XiangZ, HonigB (2001) Extending the accuracy limits of prediction for side-chain conformations. J Mol Biol 311: 421–430.11478870 </plain></SENT>
</text></ref><ref id="pone.0052505-Schumann1"><text><SENT sid="304" pm="."><plain>28Schumann M (2012). </plain></SENT>
<SENT sid="305" pm="."><plain>Caddsuite 1.0. </plain></SENT>
<SENT sid="306" pm="."><plain>URL <ext-link ext-link-type="uri" xlink:href="http://caddsuite.github.com/">http://caddsuite.github.com/</ext-link>. </plain></SENT>
</text></ref><ref id="pone.0052505-Trott1"><text><SENT sid="307" pm="."><plain>29 TrottO, OlsonAJ (2010) Autodock vina: improving the speed and accuracy of docking with a new scoring function, efficient optimization, and multithreading. J Comput Chem 31: 455–461.19499576 </plain></SENT>
</text></ref><ref id="pone.0052505-Richter1"><text><SENT sid="308" pm="."><plain>30 RichterF, Leaver-FayA, KhareSD, BjelicS, BakerD (2011) De novo enzyme design using rosetta3. PLoS One 6: e19230.21603656 </plain></SENT>
</text></ref><ref id="pone.0052505-Ponder1"><text><SENT sid="309" pm="."><plain>31 PonderJW, CaseDA (2003) Force fields for protein simulations. Adv Protein Chem 66: 27–85.14631816 </plain></SENT>
</text></ref><ref id="pone.0052505-Kingsford1"><text><SENT sid="310" pm="."><plain>32 KingsfordCL, ChazelleB, SinghM (2005) Solving and analyzing side-chain positioning problems using linear and integer programming. Bioinformatics 21: 1028–1036.15546935 </plain></SENT>
</text></ref><ref id="pone.0052505-Sontag1"><text><SENT sid="311" pm="."><plain>33Sontag D, Meltzer T, Globerson A, Weiss Y, Jaakkola T (2008) Tightening LP relaxations for MAP using message-passing. </plain></SENT>
<SENT sid="312" pm="."><plain>In: 24th Conference in Uncertainty in Artificial Intelligence. </plain></SENT>
<SENT sid="313" pm="."><plain>AUAI Press, 503–510. </plain></SENT>
</text></ref><ref id="pone.0052505-Wang2"><text><SENT sid="314" pm="."><plain>34 WangR, FangX, LuY, YangCY, WangS (2005) The pdbbind database: methodologies and updates. J Med Chem 48: 4111–4119.15943484 </plain></SENT>
</text></ref><ref id="pone.0052505-Murzin1"><text><SENT sid="315" pm="."><plain>35 MurzinAG, BrennerSE, HubbardT, ChothiaC (1995) Scop: a structural classification of proteins database for the investigation of sequences and structures. J Mol Biol 247: 536–540.7723011 </plain></SENT>
</text></ref><ref id="pone.0052505-Georgiev1"><text><SENT sid="316" pm="."><plain>36 GeorgievI, KeedyD, RichardsonJS, RichardsonDC, DonaldBR (2008) Algorithm for backrub motions in protein design. Bioinformatics 24: i196–204.18586714 </plain></SENT>
</text></ref><ref id="pone.0052505-Smith1"><text><SENT sid="317" pm="."><plain>37 SmithCA, KortemmeT (2008) Backrub-like backbone simulation recapitulates natural protein conformational variability and improves mutant side-chain prediction. J Mol Biol 380: 742–56.18547585 </plain></SENT>
</text></ref><ref id="pone.0052505-Kellogg1"><text><SENT sid="318" pm="."><plain>38 KelloggEH, Leaver-FayA, BakerD (2011) Role of conformational sampling in computing mutationinduced changes in protein structure and stability. Proteins 79: 830–8.21287615 </plain></SENT>
</text></ref><ref id="pone.0052505-Needleman1"><text><SENT sid="319" pm="."><plain>39 NeedlemanSB, WunschCD (1970) A general method applicable to the search for similarities in the amino acid sequence of two proteins. J Mol Biol 48: 443–453.5420325 </plain></SENT>
</text></ref><ref id="pone.0052505-Rice1"><text><SENT sid="320" pm="."><plain>40 RiceP, LongdenI, BleasbyA (2000) Emboss: the european molecular biology open software suite. Trends Genet 16: 276–277.10827456 </plain></SENT>
</text></ref><ref id="pone.0052505-Hildebrandt1"><text><SENT sid="321" pm="."><plain>41 HildebrandtA, DehofAK, RurainskiA, BertschA, SchumannM, et al (2010) Ball–biochemical algorithms library 1.3. BMC Bioinformatics 11: 531.20973958 </plain></SENT>
</text></ref><ref id="pone.0052505-OBoyle1"><text><SENT sid="322" pm="."><plain>42 O'BoyleNM, BanckM, JamesCA, MorleyC, VandermeerschT, et al (2011) Open babel: An open chemical toolbox. J Cheminform 3: 33.21982300 </plain></SENT>
</text></ref><ref id="pone.0052505-Word1"><text><SENT sid="323" pm="."><plain>43 WordJM, LovellSC, RichardsonJS, RichardsonDC (1999) Asparagine and glutamine: using hydrogen atom contacts in the choice of side-chain amide orientation. J Mol Biol 285: 1735–1747.9917408 </plain></SENT>
</text></ref><ref id="pone.0052505-Word2"><text><SENT sid="324" pm="."><plain>44 WordJM, LovellSC, LaBeanTH, TaylorHC, ZalisME, et al (1999) Visualizing and quantifying molecular goodness-of-fit: small-probe contact dots with explicit hydrogen atoms. J Mol Biol 285: 1711–1733.9917407 </plain></SENT>
</text></ref><ref id="pone.0052505-Hawkins1"><text><SENT sid="325" pm="."><plain>45 HawkinsPCD, SkillmanAG, WarrenGL, EllingsonBA, StahlMT (2010) Conformer generation with omega: algorithm and validation using high quality structures from the protein databank and cambridge structural database. J Chem Inf Model 50: 572–584.20235588 </plain></SENT>
</text></ref><ref id="pone.0052505-Pettersen1"><text><SENT sid="326" pm="."><plain>46 PettersenEF, GoddardTD, HuangCC, CouchGS, GreenblattDM, et al (2004) Ucsf chimera–a visualization system for exploratory research and analysis. J Comput Chem 25: 1605–1612.15264254 </plain></SENT>
</text></ref></ref-list></SecTag></back></article>
