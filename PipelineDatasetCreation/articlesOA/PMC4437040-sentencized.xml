<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1d3 20150301//EN" "JATS-archivearticle1.dtd"> 
<article xmlns:ali="http://www.niso.org/schemas/ali/1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?><?DTDIdentifier.IdentifierType public?><?SourceDTD.DTDName journalpublishing.dtd?><?SourceDTD.Version 2.3?><?ConverterInfo.XSLTName jp2nlmx2.xsl?><?ConverterInfo.Version 2?><front><journal-meta><journal-id journal-id-type="nlm-ta">Front Genet</journal-id><journal-id journal-id-type="iso-abbrev">Front Genet</journal-id><journal-id journal-id-type="publisher-id">Front. Genet.</journal-id><journal-title-group><journal-title>Frontiers in Genetics</journal-title></journal-title-group><issn pub-type="epub">1664-8021</issn><publisher><publisher-name>Frontiers Media S.A.</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">4437040</article-id><article-id pub-id-type="doi">10.3389/fgene.2015.00172</article-id><article-categories><subj-group subj-group-type="heading"><subject>Genetics</subject><subj-group><subject>Methods</subject></subj-group></subj-group></article-categories><title-group><article-title><SecTag type="TITLE"><text><SENT sid="0" pm="."><plain>FAST: FAST Analysis of Sequences Toolbox </plain></SENT>
</text></SecTag></article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Lawrence</surname><given-names>Travis J.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><uri xlink:type="simple" xlink:href="http://community.frontiersin.org/people/u/171209"/></contrib><contrib contrib-type="author"><name><surname>Kauffman</surname><given-names>Kyle T.</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><uri xlink:type="simple" xlink:href="http://community.frontiersin.org/people/u/223000"/></contrib><contrib contrib-type="author"><name><surname>Amrine</surname><given-names>Katherine C. H.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><uri xlink:type="simple" xlink:href="http://community.frontiersin.org/people/u/164699"/></contrib><contrib contrib-type="author"><name><surname>Carper</surname><given-names>Dana L.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><uri xlink:type="simple" xlink:href="http://community.frontiersin.org/people/u/218888"/></contrib><contrib contrib-type="author"><name><surname>Lee</surname><given-names>Raymond S.</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref></contrib><contrib contrib-type="author"><name><surname>Becich</surname><given-names>Peter J.</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><uri xlink:type="simple" xlink:href="http://community.frontiersin.org/people/u/226983"/></contrib><contrib contrib-type="author"><name><surname>Canales</surname><given-names>Claudia J.</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref></contrib><contrib contrib-type="author"><name><surname>Ardell</surname><given-names>David H.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="author-notes" rid="fn001"><sup>*</sup></xref><uri xlink:type="simple" xlink:href="http://community.frontiersin.org/people/u/154951"/></contrib></contrib-group><aff id="aff1"><sup>1</sup><institution>Quantitative and Systems Biology Program, University of California, Merced</institution><country>Merced, CA, USA</country></aff><aff id="aff2"><sup>2</sup><institution>Molecular Cell Biology Unit, School of Natural Sciences, University of California, Merced</institution><country>Merced, CA, USA</country></aff><aff id="aff3"><sup>3</sup><institution>Department of Viticulture and Enology, University of California, Davis</institution><country>Davis, CA, USA</country></aff><aff id="aff4"><sup>4</sup><institution>School of Engineering, University of California, Merced</institution><country>Merced, CA, USA</country></aff><author-notes><fn fn-type="edited-by"><p><text><SENT sid="1" pm="."><plain>Edited by: Christian M. Zmasek, Sanford-Burnham Medical Research Institute, USA </plain></SENT>
</text></p></fn><fn fn-type="edited-by"><p><text><SENT sid="3" pm="."><plain>Reviewed by: Erick Antezana, Norwegian University of Science and Technology, Norway; Liang Liu, Wake Forest School of Medicine, USA </plain></SENT>
</text></p></fn><corresp id="fn001">*Correspondence: David H. Ardell, Molecular Cell Biology Unit, School of Natural Sciences, University of California, Merced, 5200 North Lake Road, Merced, CA 95343, USA <email xlink:type="simple">dardell@ucmerced.edu</email></corresp><fn fn-type="other" id="fn002"><p><text><SENT sid="4" pm="."><plain>This article was submitted to Bioinformatics and Computational Biology, a section of the journal Frontiers in Genetics </plain></SENT>
</text></p></fn></author-notes><pub-date pub-type="epub"><day>19</day><month>5</month><year>2015</year></pub-date><pub-date pub-type="collection"><year>2015</year></pub-date><volume>6</volume><elocation-id>172</elocation-id><history><date date-type="received"><day>09</day><month>2</month><year>2015</year></date><date date-type="accepted"><day>20</day><month>4</month><year>2015</year></date></history><permissions><copyright-statement>Copyright Â© 2015 Lawrence, Kauffman, Amrine, Carper, Lee, Becich, Canales and Ardell.</copyright-statement><copyright-year>2015</copyright-year><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License (CC BY). The use, distribution or reproduction in other forums is permitted, provided the original author(s) or licensor are credited and that the original publication in this journal is cited, in accordance with accepted academic practice. No use, distribution or reproduction is permitted which does not comply with these terms.</license-p></license></permissions><abstract><p><SecTag type="ABS"><text><SENT sid="5" pm="."><plain>FAST (FAST Analysis of Sequences Toolbox) provides simple, powerful open source command-line tools to filter, transform, annotate and analyze biological sequence data. </plain></SENT>
<SENT sid="6" pm="."><plain>Modeled after the GNU (GNU's Not Unix) Textutils such as grep, cut, and tr, FAST tools such as fasgrep, fascut, and fastr make it easy to rapidly prototype expressive bioinformatic workflows in a compact and generic command vocabulary. </plain></SENT>
<SENT sid="7" pm="."><plain>Compact combinatorial encoding of data workflows with FAST commands can simplify the documentation and reproducibility of bioinformatic protocols, supporting better transparency in biological data science. </plain></SENT>
<SENT sid="8" pm="."><plain>Interface self-consistency and conformity with conventions of GNU, Matlab, Perl, BioPerl, R, and GenBank help make FAST easy and rewarding to learn. </plain></SENT>
<SENT sid="9" pm="."><plain>FAST automates numerical, taxonomic, and text-based sorting, selection and transformation of sequence records and alignment sites based on content, index ranges, descriptive tags, annotated features, and in-line calculated analytics, including composition and codon usage. </plain></SENT>
<SENT sid="10" pm="."><plain>Automated content- and feature-based extraction of sites and support for molecular population genetic statistics make FAST useful for molecular evolutionary analysis. </plain></SENT>
<SENT sid="11" pm="."><plain>FAST is portable, easy to install and secure thanks to the relative maturity of its Perl and BioPerl foundations, with stable releases posted to CPAN. </plain></SENT>
<SENT sid="12" pm="."><plain>Development as well as a publicly accessible Cookbook and Wiki are available on the FAST GitHub repository at <ext-link ext-link-type="uri" xlink:href="https://github.com/tlawrence3/FAST">https://github.com/tlawrence3/FAST</ext-link>. </plain></SENT>
<SENT sid="13" pm="."><plain>The default data exchange format in FAST is Multi-FastA (specifically, a restriction of BioPerl FastA format). </plain></SENT>
<SENT sid="14" pm="."><plain>Sanger and Illumina 1.8+ FastQ formatted files are also supported. </plain></SENT>
<SENT sid="15" pm="."><plain>FAST makes it easier for non-programmer biologists to interactively investigate and control biological data at the speed of thought. </plain></SENT>
</text></SecTag></p></abstract><SecTag type="KEYWORD"><kwd-group><kwd>Unix philosophy</kwd><kwd>MultiFASTA</kwd><kwd>pipeline</kwd><kwd>bioinformatic workflow</kwd><kwd>open source</kwd><kwd>BioPerl</kwd><kwd>regular expression</kwd><kwd>NCBI taxonomy</kwd></kwd-group></SecTag><counts><fig-count count="2"/><table-count count="2"/><equation-count count="0"/><ref-count count="56"/><page-count count="12"/><word-count count="7315"/></counts></article-meta></front><body><SecTag type="INTRO"><sec id="s1"><title><text><SENT sid="16" pm="."><plain>1. </plain></SENT>
<SENT sid="17" pm="."><plain>Introduction </plain></SENT>
</text></title><p><text><SENT sid="18" pm="."><plain>Bioinformatic software for non-programmers is traditionally implemented for user convenience in monolithic applications with Graphical User Interfaces (GUIs) (Smith et al., 1994; Stothard, 2000; Rampp et al., 2006; Librado and Rozas, 2009; Waterhouse et al., 2009; Gouy et al., 2010). </plain></SENT>
<SENT sid="19" pm="."><plain>However, the monolithic application paradigm is easily outscaled by today's big biological data, particularly Next Generation Sequencing (NGS) data at gigabyte- and terabyte-scales. </plain></SENT>
<SENT sid="20" pm="."><plain>Better empowerment of non-programmers for genome-scale analytics of big biological data has been achieved through web-based genome browser interfaces (Markowitz et al., 2014; Cunningham et al., 2015; Rosenbloom et al., 2015). </plain></SENT>
<SENT sid="21" pm="."><plain>On the other hand, for smaller datasets, sequence and alignment editor applications encourage manual manipulation of data, which is error-prone and essentially irreproducible. </plain></SENT>
<SENT sid="22" pm="."><plain>To reduce error and increase reproducibility in the publishing of bioinformatic and biostatistical protocols it is important to facilitate the documentation and automation of data science workflows through scripts and literate programming facilities (Knuth, 1984) such as emacs org-mode (<ext-link ext-link-type="uri" xlink:href="http://orgmode.org">http://orgmode.org</ext-link>), as demonstrated in, for example (Delescluse et al., 2012) that both completely document and encode scientific workflows for machine processing of biological data. </plain></SENT>
</text></p><p><text><SENT sid="23" pm="."><plain>Reproducibility in bioinformatics and biostatistics protocols is crucial to maintaining public trust in the value of its investments in high-throughput and high-dimensional measurements of complex biological systems (Baggerly and Coombes, 2009; Hutson, 2010; Baggerly and Coombes, 2011; Huang and Gottardo, 2013). </plain></SENT>
<SENT sid="24" pm="."><plain>In one analysis, only two of 18 published microarray gene-expression analyses were completely reproducible, in part because key analysis steps were made with proprietary closed-source software (Ioannidis et al., 2008). </plain></SENT>
<SENT sid="25" pm="."><plain>Furthermore, even though analytical errors are a major source of retractions in the scientific literature (Casadevall et al., 2014), peer-review and publication of scientific data processing protocols is generally not yet required to publish scientific studies. </plain></SENT>
<SENT sid="26" pm="."><plain>Adequate documentation of bioinformatic and biostatistical workflows and open source sharing of code upon publication (Peng, 2009) facilitates crowd-sourced verification, correction and extension of code-based analyses (Barnes, 2010; Morin et al., 2012), and reuse of software and data to enable more scientific discovery returns from public data (Peng, 2011). </plain></SENT>
<SENT sid="27" pm="."><plain>Peer review and publication of the data science protocols associated to scientific studies stems temptation to overinterpret results and encourages more objectivity in data science (Boulesteix, 2010). </plain></SENT>
<SENT sid="28" pm="."><plain>The ultimate remedy for these problems is to expand literacy in modern computational and statistical data science for science students in general (Morin et al., 2012; Joppa et al., 2013). </plain></SENT>
</text></p><p><text><SENT sid="29" pm="."><plain>Web-based open-source workflow suites such as Galaxy (Blankenberg and Hillman-Jackson, 2014), Taverna (Oinn et al., 2006) and BioExtract (Lushbough et al., 2011) are a recent innovation in the direction of greater reproducibility in bioinformatics protocols for genome-scale analytics. </plain></SENT>
<SENT sid="30" pm="."><plain>However, the most powerful, transparent and customizable medium for reproducible bioinformatics work is only available to bioinformatics specialists and programmers through Application Programming Interfaces (APIs) such as BioPerl and Ensembl (Yates et al., 2015). </plain></SENT>
</text></p><p><text><SENT sid="31" pm="."><plain>Yet workflow design suites and programming APIs require dedication and time to learn. </plain></SENT>
<SENT sid="32" pm="."><plain>There is a need for more bioinformatics software in between GUIs and APIs, that empowers non-programmer scientists and researchers to interactively and reproducibly control, process and analyze their data without manual interventions. </plain></SENT>
<SENT sid="33" pm="."><plain>Closer inspection of data and interactive construction and control of data workflows makes it so much easier to rapidly prototype error-free workflows, nipping errors in the bud that can completely confound downstream analyses. </plain></SENT>
<SENT sid="34" pm="."><plain>In scientific computing, the time-tested paradigm for rapid prototyping of reproducible data workflows is the Unix command-line. </plain></SENT>
</text></p><p><text><SENT sid="35" pm="."><plain>In this tradition we here present FAST: FAST Analysis Sequences Toolbox, modeled after the standard Unix toolkit (Peek, 2001), now called Coreutils. </plain></SENT>
<SENT sid="36" pm="."><plain>The FAST tools follow the Unix philosophy to âdo one thing and do it wellâ and âwrite programs to work together.â (Stutz, 2000). </plain></SENT>
<SENT sid="37" pm="."><plain>FAST workflows are completely automated; no manual interventions to data are required. </plain></SENT>
<SENT sid="38" pm="."><plain>FAST falls between a GUI and an API, because it is used through a Command-Line Interface (CLI). </plain></SENT>
<SENT sid="39" pm="."><plain>Although the FAST tools are written in Perl using BioPerl packages (Stajich et al., 2002), FAST users do not need to be able to program Perl or know BioPerl. </plain></SENT>
<SENT sid="40" pm="."><plain>FAST users only need basic competence in Unix and the modest skill to compose command pipelines in the Unix shell. </plain></SENT>
<SENT sid="41" pm="."><plain>FAST therefore supports an emerging movement to empower non-programmer biologists to learn Unix for scientific computing. </plain></SENT>
<SENT sid="42" pm="."><plain>Books and courses in this emerging market include the recent âUNIX and Perl to the Rescue!â (Bradnam and Korf, 2012) and the Software Carpentry and Data Carpentry Foundations workshops (Wilson, 2014). </plain></SENT>
</text></p><p><text><SENT sid="43" pm="."><plain>Unix command pipe-lines are the paradigmatic example of the âpipes and filtersâ design pattern that embodies serial processing of data through sequences of modular and reuseable computations. </plain></SENT>
<SENT sid="44" pm="."><plain>The âpipes and filtersâ design pattern is a special case of component-based software engineering (McIlroy, 1969) and a core paradigm in software architecture (Garlan and Shaw, 1994). </plain></SENT>
<SENT sid="45" pm="."><plain>The component-wise organization of FAST affords access to an infinite variety of customizable queries and workflows on biological sequence data using a small command vocabulary and combinatorial logic. </plain></SENT>
<SENT sid="46" pm="."><plain>Component-based software is easier to learn, maintain and extend. </plain></SENT>
<SENT sid="47" pm="."><plain>It also makes it easy for users to interactively develop new protocols through the modular extension and recombination of existing protocols. </plain></SENT>
<SENT sid="48" pm="."><plain>As shown from the examples below, non-trivial computations may be expressed on a single line of the printed page. </plain></SENT>
<SENT sid="49" pm="."><plain>Thus, FAST can help empower non-biologist programmers to develop and communicate powerful and reproducible bioinformatic workflows for scientific investigations and publishing. </plain></SENT>
</text></p><p><text><SENT sid="50" pm="."><plain>Open-source command-line utilities for bioinformatics such as the EMBOSS package (Rice et al., 2000), the FASTX tools (Gordon, 2009) or the scripts that come with BioPerl (Stajich et al., 2002) typically offer suites of tools with simple, well-defined functions that lend themselves to scripting, but are not necessarily designed according to the Unix toolbox philosophy specifically to interoperate through serial composition over pipes. </plain></SENT>
<SENT sid="51" pm="."><plain>Similarly, FaBox (Villesen, 2007) is a free and open online server with functions that overlap with FAST tools, but is not designed for serial composition. </plain></SENT>
<SENT sid="52" pm="."><plain>On the other hand, the Unix toolbox model has been used before in more or less more specialized bioinformatics applications such as the popular SAMTools suite (Li et al., 2009) and in the processing of NMR data (Delaglio et al., 1995). </plain></SENT>
<SENT sid="53" pm="."><plain>A toolsuite called bp-utils, with a similar design philosophy and some overlapping functionality with FAST, has recently been released at <ext-link ext-link-type="uri" xlink:href="http://diverge.hunter.cuny.edu/labwiki/Bioutils">http://diverge.hunter.cuny.edu/labwiki/Bioutils</ext-link>. </plain></SENT>
</text></p><p><text><SENT sid="54" pm="."><plain>We have written extensive documentation for each FAST utility along with useful error messages following recommended practice (Seemann, 2013). </plain></SENT>
<SENT sid="55" pm="."><plain>FAST is free and open source; its code is freely available to anyone to re-use, verify and extend through its GitHub repository. </plain></SENT>
</text></p></sec></SecTag><SecTag type="METHODS"><sec><title><text><SENT sid="56" pm="."><plain>2. </plain></SENT>
<SENT sid="57" pm="."><plain>Design and implementation of FAST tools </plain></SENT>
</text></title><sec><title><text><SENT sid="58" pm="."><plain>2.1. </plain></SENT>
<SENT sid="59" pm="."><plain>The FAST data model </plain></SENT>
</text></title><p><text><SENT sid="60" pm="."><plain>The Unix Coreutils paradigm allows users to treat plain-text files and data streams as databases in which records correspond to single lines containing fields separated by delimiters such as commas, tabs, or strings of white-space characters. </plain></SENT>
<SENT sid="61" pm="."><plain>FAST extends this paradigm to biological sequence data, allowing users to treat collections of files and streams of multi-line sequence records as databases for complex queries, transformations and analytics. </plain></SENT>
<SENT sid="62" pm="."><plain>FAST generalizes the GNU Coreutils model exactly because it models sequence record descriptions as an ordered collection of description fields (see below). </plain></SENT>
</text></p><p><text><SENT sid="63" pm="."><plain>Another design feature of Unix tools that also characterizes the FAST tools is their ability to accept input not only from one or more files but also from what is called standard input, a data-stream supported by the Unix shell, and to output analogously to standard output. </plain></SENT>
<SENT sid="64" pm="."><plain>It is this facility that allows FAST tools to be serially composed in Unix pipelines that compactly represent an infinite variety of expressive bioinformatic workflows. </plain></SENT>
</text></p><p><text><SENT sid="65" pm="."><plain>The default data exchange format for FAST tools is the universally recognized FastA format (Lipman and Pearson, 1985). </plain></SENT>
<SENT sid="66" pm="."><plain>While no universal standard exists for this format, for FAST, âFastA formatâ means what is conventionally called âmulti-fastaâ format of sequence or alignment data, largely as implementated in BioPerl in the module Bio::SeqIO::fasta (Stajich et al., 2002). </plain></SENT>
</text></p><p><text><SENT sid="67" pm="."><plain>In the FAST implementation of FastA format, multiple sequence records may appear in a single file or input stream. </plain></SENT>
<SENT sid="68" pm="."><plain>Sequence data may contain gap characters. </plain></SENT>
<SENT sid="69" pm="."><plain>The logical elements (or fields) of a sequence record are its identifier, its description and its sequence. </plain></SENT>
<SENT sid="70" pm="."><plain>The identifier (indicated with id in the illustration below) and description (desc) together make the identifier line of a sequence record, which must begin with the sequence record start symbol &gt; on a single line. </plain></SENT>
<SENT sid="71" pm="."><plain>The description begins after the first block of white-space on this line (indicated with &lt;space&gt;). </plain></SENT>
<SENT sid="72" pm="."><plain>The sequence of a record appears immediately after its identifier line and may continue over multiple lines until the next record starts. </plain></SENT>
</text></p><p><text><SENT sid="73" pm="."><plain>In FAST, users may alter how description fields are defined in sequence records by using Perl-style regular expressions to define delimiters (indicated by &lt;delim&gt;). </plain></SENT>
<SENT sid="74" pm="."><plain>FAST uses one-based indexing of description fields. </plain></SENT>
</text></p><p><text><SENT sid="75" pm="."><plain>The FAST data model is illustrated as follows: </plain></SENT>
</text></p><preformat>&gt;seq1-id&lt;space&gt;seq1-desc-field1
Â &lt;delim&gt;seq1-desc-field2&lt;delim&gt;...
seq1-sequence
seq1-sequence
...
seq1-sequence
&gt;seq2-id&lt;space&gt;seq2-desc-field1
Â &lt;delim&gt;seq2-desc-field2&lt;delim&gt;...
seq2-sequence
seq2-sequence
...
seq2-sequence</preformat><p><text><SENT sid="76" pm="."><plain>In FAST, the sequence identifier is thought of as the 0th field of the identifier line. </plain></SENT>
<SENT sid="77" pm="."><plain>One-based indexing of description fields in FAST is therefore consistent with zero-based indexing in Perl and one-based indexing of sequence coordinates, making all indexing consistent and uniform in FAST. </plain></SENT>
</text></p><p><text><SENT sid="78" pm="."><plain>Most FAST tools extend the field-based paradigm further by supporting tagged values in sequence record descriptions. </plain></SENT>
<SENT sid="79" pm="."><plain>Tagged values are name-value pairs with a format âname=value" as common in General Feature Format (GFF) used in sequence annotation (see e.g., <ext-link ext-link-type="uri" xlink:href="https://www.sanger.ac.uk/resources/software/gff/">https://www.sanger.ac.uk/resources/software/gff/</ext-link>) or an alternative âname:valueâ format that certain FAST tools themselves can annotate in-line into sequence records by appending a new field to sequence record descriptions. </plain></SENT>
<SENT sid="80" pm="."><plain>Support for tagged values in FAST makes it possible to operate on sequence records with unordered or heterogeneous description fields. </plain></SENT>
</text></p></sec><sec><title><text><SENT sid="81" pm="."><plain>2.2. </plain></SENT>
<SENT sid="82" pm="."><plain>Overview of the FAST tools </plain></SENT>
</text></title><p><text><SENT sid="83" pm="."><plain>FAST utilities may be assigned to categories according to their default behavior and intended use. </plain></SENT>
<SENT sid="84" pm="."><plain>There are FAST tools for selection of data from sequence records, transformation of data, annotation of sequence record descriptions with computed characteristics of the data, and analysis. </plain></SENT>
<SENT sid="85" pm="."><plain>A complete description of all utilities included in the first major release of FAST is shown in Table 1. </plain></SENT>
</text></p><SecTag type="TABLE"><table-wrap id="T1" position="float"><label>Table 1</label><caption><p><text><SENT sid="86" pm="."><plain>Utilities in first major release of FAST. </plain></SENT>
</text></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="1" colspan="1"><text><SENT sid="87" pm="."><plain>Tool/Category </plain></SENT>
</text></th><th align="left" rowspan="1" colspan="1"><text><SENT sid="88" pm="."><plain>Function </plain></SENT>
</text></th><th align="left" rowspan="1" colspan="1"><text><SENT sid="89" pm="."><plain>Coreutil analog </plain></SENT>
</text></th><th align="left" rowspan="1" colspan="1"><text><SENT sid="90" pm="."><plain>Operates by default upon </plain></SENT>
</text></th></tr></thead><tbody><tr><td align="left" colspan="4" rowspan="1"><text><SENT sid="91" pm="."><plain>SELECTION </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="92" pm="."><plain>fasgrep </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="93" pm="."><plain>Regex selection of records </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="94" pm="."><plain>grep </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="95" pm="."><plain>Identifiers </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="96" pm="."><plain>fasfilter </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="97" pm="."><plain>Numerical selection of records </plain></SENT>
</text></td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"><text><SENT sid="98" pm="."><plain>Identifiers </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="99" pm="."><plain>fastax </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="100" pm="."><plain>Taxonomic selection of records </plain></SENT>
</text></td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"><text><SENT sid="101" pm="."><plain>Descriptions </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="102" pm="."><plain>fashead </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="103" pm="."><plain>Order-based selection of records </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="104" pm="."><plain>head </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="105" pm="."><plain>Records </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="106" pm="."><plain>fastail </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="107" pm="."><plain>Order-based selection of records </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="108" pm="."><plain>tail </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="109" pm="."><plain>Records </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="110" pm="."><plain>fascut </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="111" pm="."><plain>Index-based selection and reordering of data </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="112" pm="."><plain>cut </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="113" pm="."><plain>Sequences </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="114" pm="."><plain>gbfcut </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="115" pm="."><plain>Extract sequences by regex matching on features </plain></SENT>
</text></td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"><text><SENT sid="116" pm="."><plain>Features </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="117" pm="."><plain>alncut </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="118" pm="."><plain>Selection of sites by content </plain></SENT>
</text></td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"><text><SENT sid="119" pm="."><plain>Sites </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="120" pm="."><plain>gbfalncut </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="121" pm="."><plain>Selection of sites by features </plain></SENT>
</text></td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"><text><SENT sid="122" pm="."><plain>Sites </plain></SENT>
</text></td></tr><tr><td align="left" colspan="4" rowspan="1"><text><SENT sid="123" pm="."><plain>TRANSFORMATION </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="124" pm="."><plain>fassort </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="125" pm="."><plain>Numerical or text sorting of records </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="126" pm="."><plain>sort </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="127" pm="."><plain>Identifiers </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="128" pm="."><plain>fastaxsort </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="129" pm="."><plain>Taxonomic sorting of records </plain></SENT>
</text></td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"><text><SENT sid="130" pm="."><plain>Identifiers </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="131" pm="."><plain>fasuniq </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="132" pm="."><plain>Remove or count redundant records </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="133" pm="."><plain>uniq </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="134" pm="."><plain>Records </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="135" pm="."><plain>faspaste </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="136" pm="."><plain>Merging of records </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="137" pm="."><plain>paste </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="138" pm="."><plain>Sequences </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="139" pm="."><plain>fastr </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="140" pm="."><plain>Character transformations on records </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="141" pm="."><plain>tr </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="142" pm="."><plain>Identifiers </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="143" pm="."><plain>fassub </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="144" pm="."><plain>Regex substitutions on records </plain></SENT>
</text></td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"><text><SENT sid="145" pm="."><plain>Identifiers </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="146" pm="."><plain>fasconvert </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="147" pm="."><plain>Convert sequence formats </plain></SENT>
</text></td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"><text><SENT sid="148" pm="."><plain>Records </plain></SENT>
</text></td></tr><tr><td align="left" colspan="4" rowspan="1"><text><SENT sid="149" pm="."><plain>ANNOTATION </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="150" pm="."><plain>faslen </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="151" pm="."><plain>Annotate sequence lengths </plain></SENT>
</text></td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"><text><SENT sid="152" pm="."><plain>Descriptions </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="153" pm="."><plain>fascomp </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="154" pm="."><plain>Annotate monomeric compositions </plain></SENT>
</text></td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"><text><SENT sid="155" pm="."><plain>Descriptions </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="156" pm="."><plain>fascodon </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="157" pm="."><plain>Annotate codon usage </plain></SENT>
</text></td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"><text><SENT sid="158" pm="."><plain>Descriptions </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="159" pm="."><plain>fasxl </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="160" pm="."><plain>Annotate biological translations </plain></SENT>
</text></td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"><text><SENT sid="161" pm="."><plain>Descriptions </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="162" pm="."><plain>fasrc </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="163" pm="."><plain>Annotate reverse complements </plain></SENT>
</text></td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"><text><SENT sid="164" pm="."><plain>Descriptions </plain></SENT>
</text></td></tr><tr><td align="left" colspan="4" rowspan="1"><text><SENT sid="165" pm="."><plain>ANALYSIS </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="166" pm="."><plain>alnpi </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="167" pm="."><plain>Molecular population genetic statistics </plain></SENT>
</text></td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"><text><SENT sid="168" pm="."><plain>Sites </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="169" pm="."><plain>faswc </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="170" pm="."><plain>Tally sequences and characters </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="171" pm="."><plain>wc </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="172" pm="."><plain>Sequences </plain></SENT>
</text></td></tr></tbody></table></table-wrap></SecTag><p><text><SENT sid="173" pm="."><plain>The analysis class is distinguished from the other classes because by default, these utilities output tables of plain-text data rather than sequence record data in FastA format. </plain></SENT>
<SENT sid="174" pm="."><plain>Two other tools, fasconvert and gbfcut, are designed to either input or output FastA format sequence records by default. </plain></SENT>
<SENT sid="175" pm="."><plain>Standardization of the FAST data model allows users to serially compose FAST tools into pipelines at the Unix command-line, which is indicated as the âmain workflowâ in the overview of the project shown in Figure 1. </plain></SENT>
</text></p><SecTag type="FIG"><fig id="F1" position="float"><label>Figure 1</label><caption><p><text><SENT sid="176" pm="."><plain>Overview of the first major release of FAST with data and workflow dependencies indicated. </plain></SENT>
<SENT sid="177" pm="."><plain>Inputs to FAST tools are shown at the top of the figure with outputs at the bottom. </plain></SENT>
<SENT sid="178" pm="."><plain>Outlined in blue is the primary working model, in which Multi-fastA sequence or alignment data is successively annotated, selected upon and transformed into new Multi-fastA data, or fed into a utility in the analysis category for tabular output of data summaries. </plain></SENT>
<SENT sid="179" pm="."><plain>Many of the utilities in the annotation category are also optionally capable of tabular output. </plain></SENT>
</text></p></caption><graphic xlink:href="fgene-06-00172-g0001"/></fig></SecTag></sec><sec><title><text><SENT sid="180" pm="."><plain>2.3. </plain></SENT>
<SENT sid="181" pm="."><plain>General implementation and benchmarking </plain></SENT>
</text></title><p><text><SENT sid="182" pm="."><plain>The BioPerl backend of FAST 1.x is version 1.6.901 downloaded in January, 2012. Bio::SeqIO components were updated to version 1.6.923 on June 4, 2014 and some Bio::Root components were updated on July 10, 2014 (github commit 50f87e9a4d). </plain></SENT>
<SENT sid="183" pm="."><plain>We introduced a small number of customizations to the BioPerl code-base, primarily to enable the translation of sequences containing gaps. </plain></SENT>
<SENT sid="184" pm="."><plain>All of the BioPerl dependencies of FAST are isolated under its own FAST name-space. </plain></SENT>
</text></p><p><text><SENT sid="185" pm="."><plain>To help reduce the overall installation footprint of FAST, BioPerl dependencies of FAST scripts were analyzed with the Cava packager (<ext-link ext-link-type="uri" xlink:href="http://www.cavapackager.com">http://www.cavapackager.com</ext-link>). </plain></SENT>
</text></p><p><text><SENT sid="186" pm="."><plain>Nearly all FAST utilities process sequence records inline and therefore have linear runtime complexity in the number of sequences. </plain></SENT>
<SENT sid="187" pm="."><plain>Exceptions are fassort and fastail which both require some paging of data into temporary files. </plain></SENT>
<SENT sid="188" pm="."><plain>We performed benchmarking of FAST tools using randomly generated sequences of even composition sourced generated in Python and the Benchmark v1.15 Perl module on a MacBook Pro 2.5 Ghz Intel i7, with 8 Gb of RAM. </plain></SENT>
<SENT sid="189" pm="."><plain>We examined average CPU runtime over 100 replicates, comparing input sizes of 25K, 250K, or 1M sequence records of length 100, 10K, 100K, or 1M bp. </plain></SENT>
<SENT sid="190" pm="."><plain>Our benchmarking results show that despite data paging, fassort runtimes scale linearly with input size (Figure 2). </plain></SENT>
</text></p><SecTag type="FIG"><fig id="F2" position="float"><label>Figure 2</label><caption><p><text><SENT sid="191" pm="."><plain>Average processor time of 100 repetitions required to complete analysis using indicated utility. </plain></SENT>
<SENT sid="192" pm="."><plain>Utilities were run on six datasets consisting of (A) 25,000, 2,50,000, and 10,00,000 100 bp sequences and (B) 10,000, 1,00,000, and 10,00,000 1000 bp sequences. </plain></SENT>
</text></p></caption><graphic xlink:href="fgene-06-00172-g0002"/></fig></SecTag><p><text><SENT sid="193" pm="."><plain>FAST is not designed to be fastest at computing its solutions. </plain></SENT>
<SENT sid="194" pm="."><plain>Rather the fastness of FAST lies in how quickly an adept user can interactively prototype, develop, and express bioinformatic workflows with it. </plain></SENT>
</text></p></sec><sec><title><text><SENT sid="195" pm="."><plain>2.4. </plain></SENT>
<SENT sid="196" pm="."><plain>Installation and dependencies </plain></SENT>
</text></title><p><text><SENT sid="197" pm="."><plain>FAST requires a working Perl installation, with official releases distributed through the Comprehensive Perl Archive Network (CPAN). </plain></SENT>
<SENT sid="198" pm="."><plain>A small footprint of BioPerl dependencies has been packaged together in the FAST namespace. </plain></SENT>
<SENT sid="199" pm="."><plain>Other CPAN dependencies may be detected and installed by the cpan package manager. </plain></SENT>
<SENT sid="200" pm="."><plain>A fully automated install from CPAN may on many systems be initiated by executing perl -MCPAN -e 'install FAST'. </plain></SENT>
<SENT sid="201" pm="."><plain>A manual install follows standard Perl install procedure. </plain></SENT>
<SENT sid="202" pm="."><plain>After downloading and unpacking the source directory, change into that directory and execute: perl Makefile.PL; make; make test; (sudo) make install. </plain></SENT>
</text></p><p><text><SENT sid="203" pm="."><plain>We recommend that first-time users first complete the automated install from CPAN which will handle prerequisites, and then download and open the source code directory in order to practice the example usage commands (such as those in the sequel) on sample data provided within. </plain></SENT>
</text></p></sec><sec><title><text><SENT sid="204" pm="."><plain>2.5. </plain></SENT>
<SENT sid="205" pm="."><plain>Implementation and usage of individual tools </plain></SENT>
</text></title><p><text><SENT sid="206" pm="."><plain>Further implementation and usage details of individual FAST tools follows. </plain></SENT>
<SENT sid="207" pm="."><plain>Usage examples for individual tools refer to example data that ships with the FAST source-code installer, available from CPAN. </plain></SENT>
<SENT sid="208" pm="."><plain>The most recent version at the time of publication is 1.06, available from <ext-link ext-link-type="uri" xlink:href="http://search.cpan.org/~dhard/FAST-1.06/">http://search.cpan.org/~dhard/FAST-1.06/</ext-link> and as Supplementary Material. </plain></SENT>
<SENT sid="209" pm="."><plain>However we recommend to use the most recent version of FAST. </plain></SENT>
<SENT sid="210" pm="."><plain>For maximum reproducibility, always cite the version number when publishing results with FAST. </plain></SENT>
<SENT sid="211" pm="."><plain>These usage examples should be able to run from within the installation directory after installation has completed. </plain></SENT>
</text></p><list list-type="simple"><list-item><p><text><SENT sid="212" pm="."><plain>fasgrep supports regular expression-based selection of sequence records. </plain></SENT>
<SENT sid="213" pm="."><plain>FAST uses Perl-style regular expressions, which are documented freely online and within Perl, and are closely related to Unix extended regular expressions. </plain></SENT>
<SENT sid="214" pm="."><plain>For reference on Perl regular expressions, try executing man perlre or perldoc perlre. </plain></SENT>
<SENT sid="215" pm="."><plain>For example, to print only protein sequences that do not start with M for methionine, execute: fasgrep -s -v â³^Mâ³ t/data/P450.fas </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="216" pm="."><plain>In the above command the -s option directs fasgrep to search the sequence data of each record. </plain></SENT>
<SENT sid="217" pm="."><plain>The -v option directs fasgrep to print records that do not match the pattern given by its argument, which is the regular expression ^M, in which the anchor ^ specifies the beginning of the sequence data. fasgrep uses the BioPerl Bio::Tools::SeqPattern library to support ambiguity expansion of IUPAC codes in its regular expression arguments. </plain></SENT>
<SENT sid="218" pm="."><plain>Thus, to show that a segment of Saccharomyces cerevisiae chromosome 1 contains at least one instance of an âAutonomous Consensus Sequenceâ characteristic of yeast origins of replication (Leonard and McHali, 2013), look whether the following command outputs a sequence or not (note that all commands reproduced here should be entered on a single line at the Unix shell prompt): fasgrep -se 'WTTTAYRTTTW' t/data/chr01.fas </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="219" pm="."><plain>which is equivalent to: fasgrep -se '[AT]TTTA[CT][AG]TTT[AT]' t/data/chr01.fas </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="220" pm="."><plain>These examples demonstrate queries on sequence data, but fasgrep may be directed to search against other parts of sequence records including identifiers, descriptions, fields and more. </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="221" pm="."><plain>fasfilter supports precise numerical-based selections of sequence records from numerical data in identifiers, descriptions, fields or tagged-values in descriptions. fasfilter supports open ranges such as 100-, meaning âgreater than or equal to 100,â closed ranges like 1e6-5e8 (meaning 1 Ã 106 to 5 Ã 108) and compound ranges such as 200â400, 500-. </plain></SENT>
<SENT sid="222" pm="."><plain>Ranges may be specified in Perl-style (or GenBank coordinate style) like from..to, in R/Octave-style like from:to or UNIX cut-style as in from-to. </plain></SENT>
<SENT sid="223" pm="."><plain>For example, to print records with gi numbers between 200 and 500 million, try executing: fasfilter -x â³gi\|(\d+)â³ 2e8..5e8 t/data/P450.fas </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="224" pm="."><plain>This example uses the -x option which directs fasfilter to filter on the value within the capture buffer which occurs within the left-most pair of parentheses of the argument, here (\d+), and \d+ is a regular expression matching a string of one or more digits from 0 to 9. </plain></SENT>
<SENT sid="225" pm="."><plain>The backslash after gi in the first argument quotes the vertical bar character to make it literal, since the vertical bar character is a special character in regular expressions. </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="226" pm="."><plain>fascut supports index-based selections of characters and fields in sequence records allowing repetition, reordering, variable steps, and reversals. </plain></SENT>
<SENT sid="227" pm="."><plain>Ranges are specified otherwise similarly to fasfilter. </plain></SENT>
<SENT sid="228" pm="."><plain>Negative indices count backwards from last characters and fields. fascut outputs the concatenation of data selections for each sequence record. </plain></SENT>
<SENT sid="229" pm="."><plain>Variable step-sizes in index ranges conveniently specify first, second or third codon positions in codon sequence records, for example. </plain></SENT>
<SENT sid="230" pm="."><plain>Examples using this syntax appear in the sequel. </plain></SENT>
<SENT sid="231" pm="."><plain>To print the last ten residues of each sequence, execute: fascut -10..-1 t/data/P450.fas </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="232" pm="."><plain>alncut implements content-based selection of sites in alignments including gap-free sites, non-allgap sites, variable or invariant sites and parsimoniously informative sites, or their set-complements, all with the option of state-frequency-thresholds applied per site. </plain></SENT>
<SENT sid="233" pm="."><plain>By default, alncut prints only invariant sites. </plain></SENT>
<SENT sid="234" pm="."><plain>To print the set-complement, or only variable sites, use the -v option: alncut -v t/data/popset_32329588.fas </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="235" pm="."><plain>To print sites in which no more than two sequences contain gaps, execute: alncut -gf 2 t/data/popset_32329588.fas </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="236" pm="."><plain>gbfcut allows annotation-based sequence-extraction from GenBank format sequence files, useful for extracting all sequences that correspond to sets of the same type of annotated features in genome data. </plain></SENT>
<SENT sid="237" pm="."><plain>For example, to output 5â² and 3â² Untranslated Region (UTR) sequences from a GenBank formatted sequence of a gene, we use the -k option to restrict matching to features whose âkeysâ match the regular expression âUTRâ: gbfcut -k UTR t/data/AF194338.1.gb </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="238" pm="."><plain>gbfcut can handle split features such as a coding region (CDS) that is split over several exons: gbfcut -k CDS t/data/AF194338.1.gb </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="239" pm="."><plain>More fine-grained queries of features are possible using qualifiers defined with the -q option. </plain></SENT>
<SENT sid="240" pm="."><plain>Multiple qualifiers may be provided at once, specifying the selection of records for which all qualifiers apply (conjunction). </plain></SENT>
<SENT sid="241" pm="."><plain>For example, compare the output of the following two commands: gbfcut -k tRNA t/data/mito-ascaris.gb gbfcut -k tRNA -q product=Ser -q note^AGN t/data/mito-ascaris.gb </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="242" pm="."><plain>The second command queries for features with key âtRNAâ containing at least one qualifier â/productâ whose value matches the string literal âSerâ and no qualifiers of type â/noteâ whose values match the string literal âAGN.â </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="243" pm="."><plain>gbfalncut automates the selection of sites from alignments that correspond to one or more features annotated on one of the sequences in a separate GenBank record. </plain></SENT>
<SENT sid="244" pm="."><plain>This workflow eliminates the need for manual entry of coordinates and implements a useful bioinformatic query in terms of known and reproducible quantities from public data and sequence records, allowing users to query sites based on biological vocabularies of sequence features. </plain></SENT>
<SENT sid="245" pm="."><plain>For an example of its use see the section âComposing Workflows in FASTâ in the sequel. </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="246" pm="."><plain>faspaste concatenates data from records input in parallel from multiple data-streams or files, record-by-record. </plain></SENT>
<SENT sid="247" pm="."><plain>The user may paste data from the standard input stream and from multiple input files, in an order defined by the arguments. </plain></SENT>
<SENT sid="248" pm="."><plain>Records from standard input may be used multiple times in concatenating data. </plain></SENT>
<SENT sid="249" pm="."><plain>Like in some implementions of the Unix tool paste, a hyphen input argument - to faspaste refers to the standard input stream and may be used more than once as an input argument. </plain></SENT>
<SENT sid="250" pm="."><plain>For maximum configurability, faspaste concatenates only one data field type (i.e., sequences or descriptions) at a time. </plain></SENT>
<SENT sid="251" pm="."><plain>Users may select which data stream will provide templates to receive concatenated data in output records. </plain></SENT>
<SENT sid="252" pm="."><plain>For example, to paste sequences of corresponding records from two data-files together and output them with the identifiers and descriptions of the data in the first file, execute: faspaste data1.fas data2.fas </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="253" pm="."><plain>See the sequel for more advanced usage examples with faspaste. </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="254" pm="."><plain>fassort and fasuniq are designed to be often used together in Unix pipelines. </plain></SENT>
<SENT sid="255" pm="."><plain>The fassort utility implements numerical and textual sorting of sequence records by specific fields. </plain></SENT>
<SENT sid="256" pm="."><plain>The fasuniq utility removes (and optionally counts) records that are redundant with respect to a specific field, such as sequences or identifiers. </plain></SENT>
<SENT sid="257" pm="."><plain>In the implementation of fassort, pages of data are sorted with optimized routines in Perl Sort::Key that, if necessary, are written to temporary files and merged with Sort::MergeSort. </plain></SENT>
<SENT sid="258" pm="."><plain>Like its Unix Coreutil analog uniq, fasuniq compares only immediately successive input records. </plain></SENT>
<SENT sid="259" pm="."><plain>Therefore, users will usually want to first sort data with fassort before passing it to fasuniq. </plain></SENT>
<SENT sid="260" pm="."><plain>To illustrate, the following example combines and sorts input records from two instances of the same file, and then counts and removes each redundant record: fassort -s t/data/P450.fas t/data/P450.fas | fasuniq -c </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="261" pm="."><plain>This example illustrates that the same file may be specified as an input stream more than once to any FAST command. </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="262" pm="."><plain>fastax and fastaxsort implement taxonomic searching and sorting of sequence records, whose records are already annotated with NCBI taxonomic identifiers using taxonomic data from NCBI taxonomy (Benson et al., 2009; Sayers et al., 2009). </plain></SENT>
<SENT sid="263" pm="."><plain>For example, a query of âMetazoaâ would match records labeled âHomo sapiens,â âDrosophila melanogaster,â and âLepidopteraâ but not âCandida albicansâ or âAlphaproteobacteria.â Taxonomic selections may be logically negated and/or restricted to only those records containing valid NCBI taxonomic identifiers. </plain></SENT>
<SENT sid="264" pm="."><plain>Purely for historical reasons, the internal implementation of NCBI taxonomic data is custom to FAST rather than the Bio::Taxonomy libraries in BioPerl. </plain></SENT>
<SENT sid="265" pm="."><plain>A sample of data from tRNAdb-CE (Abe et al., 2014), in which data records are annotated with valid NCBI taxonomic identifiers in specific description fields, is included with the FAST installation package. </plain></SENT>
<SENT sid="266" pm="."><plain>After downloading datafiles ânodes.dmpâ and ânames.dmpâ from NCBI Taxonomy, the following command filters sequences from Rhizobiales, assuming that records are labeled with their species (and strain) of origin in the third field of the description of the sample data file: fastax -f 3 -S â³ \| â³ nodes.dmp names.dmp Rhizobiales t/data/tRNAdb-CE.sample2000.fas </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="267" pm="."><plain>fastr and fassub handle, respectively, character- and string-based transformations of sequence records. </plain></SENT>
<SENT sid="268" pm="."><plain>The utility fastr handles character-based transliterations, deletions and âsquashingâ (deletion of consecutive repeats), sequence degapping, and restriction or remapping of sequence data to strict or IUPAC ambiguity alphabets. </plain></SENT>
<SENT sid="269" pm="."><plain>For example, to lower-case all sequence characters, execute: fastr -s 'A-Z' 'a-z' t/data/P450.fas </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="270" pm="."><plain>Degapping requires only the simple command: fastr --degap t/data/P450.clustalw2.fas </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="271" pm="."><plain>The utility fassub allows more arbitrary substitutions on sets of strings matched to Perl regexes, implemented through direction of the Perl s/// substitution operator on specific fields. </plain></SENT>
<SENT sid="272" pm="."><plain>Capture buffers may be used to refer to matched data in substitutions, for example, to reverse the order of genus and species in a file in which scientific names occur in descriptions enclosed with square brackets: fassub -d '\[(\w+) (\w+)\]' '[$2 $1]' Â Â Â Â t/data/P450.fas </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="273" pm="."><plain>fascomp, fasxl and fascodon provide for annotation and analytics of compositions, translations, and codon usage frequencies of sequence records (with start and stop codons counted distinctly, in the last case). </plain></SENT>
<SENT sid="274" pm="."><plain>All genetic codes included in BioPerl, ultimately from NCBI Entrez, are supported. </plain></SENT>
</text></p></list-item><list-item><p><text><SENT sid="275" pm="."><plain>alnpi outputs molecular population genetic statistics cited in Table 2 for each alignment on input. </plain></SENT>
<SENT sid="276" pm="."><plain>It can output a set of statistics for each alignment on input in plain text or  format. alnpi also supports sliding window and pairwise analysis of input data. </plain></SENT>
<SENT sid="277" pm="."><plain>Data and command examples are provided to reproduce the tables and sliding window analyses of statistics published in Ardell et al. (2003). </plain></SENT>
<SENT sid="278" pm="."><plain>Purely for historical reasons, alnpi does not use the perlymorphism routines in the BioPerl library Bio::PopGen (Stajich and Hahn, 2005). </plain></SENT>
<SENT sid="279" pm="."><plain>However, all of the code for these calculations has been reviewed and compared against calculations produced from DNASP (Librado and Rozas, 2009) as described previously (Ardell, 2004). </plain></SENT>
</text></p></list-item></list><SecTag type="TABLE"><table-wrap id="T2" position="float"><label>Table 2</label><caption><p><text><SENT sid="280" pm="."><plain>Molecular population genetic statistics in FAST. </plain></SENT>
</text></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="1" colspan="1"><text><SENT sid="281" pm="."><plain>Statistic </plain></SENT>
</text></th><th align="center" rowspan="1" colspan="1"><text><SENT sid="282" pm="."><plain>Symbol </plain></SENT>
</text></th><th align="left" rowspan="1" colspan="1"><text><SENT sid="283" pm="."><plain>Citation </plain></SENT>
</text></th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="284" pm="."><plain>Number of sequences </plain></SENT>
</text></td><td align="center" rowspan="1" colspan="1"><text><SENT sid="285" pm="."><plain>n </plain></SENT>
</text></td><td rowspan="1" colspan="1"/></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="286" pm="."><plain>Number of alleles/distinct sequences </plain></SENT>
</text></td><td align="center" rowspan="1" colspan="1"><text><SENT sid="287" pm="."><plain>k </plain></SENT>
</text></td><td rowspan="1" colspan="1"/></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="288" pm="."><plain>Number of segregating sites </plain></SENT>
</text></td><td align="center" rowspan="1" colspan="1"><text><SENT sid="289" pm="."><plain>S </plain></SENT>
</text></td><td rowspan="1" colspan="1"/></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="290" pm="."><plain>Fraction of segregating sites </plain></SENT>
</text></td><td align="center" rowspan="1" colspan="1"><text><SENT sid="291" pm="."><plain>s </plain></SENT>
</text></td><td rowspan="1" colspan="1"/></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="292" pm="."><plain>Average number of pairwise differences </plain></SENT>
</text></td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1"><text><SENT sid="293" pm="."><plain>Nei and Li, 1979 </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="294" pm="."><plain>Nucleotide diversity </plain></SENT>
</text></td><td align="center" rowspan="1" colspan="1"><text><SENT sid="295" pm="."><plain>Ï </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="296" pm="."><plain>Nei and Li, 1979 </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="297" pm="."><plain>Watterson estimator </plain></SENT>
</text></td><td align="center" rowspan="1" colspan="1"><text><SENT sid="298" pm="."><plain>Î¸W </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="299" pm="."><plain>Watterson, 1975 </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="300" pm="."><plain>Expected number of alleles </plain></SENT>
</text></td><td align="center" rowspan="1" colspan="1"><text><SENT sid="301" pm="."><plain>E(K) </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="302" pm="."><plain>Ewens, 1972 </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="303" pm="."><plain>Tajima's D </plain></SENT>
</text></td><td align="center" rowspan="1" colspan="1"><text><SENT sid="304" pm="."><plain>D </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="305" pm="."><plain>Tajima, 1989 </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="306" pm="."><plain>Fu and Li's D* </plain></SENT>
</text></td><td align="center" rowspan="1" colspan="1"><text><SENT sid="307" pm="."><plain>D* </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="308" pm="."><plain>Fu and Li, 1993 </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="309" pm="."><plain>Fu and Li's F* </plain></SENT>
</text></td><td align="center" rowspan="1" colspan="1"><text><SENT sid="310" pm="."><plain>F* </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="311" pm="."><plain>Fu and Li, 1993; Simonsen et al., 1995 </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="312" pm="."><plain>Fu and Li's Eta S </plain></SENT>
</text></td><td align="center" rowspan="1" colspan="1"><text><SENT sid="313" pm="."><plain>Î·S </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="314" pm="."><plain>Fu and Li, 1993 </plain></SENT>
</text></td></tr><tr><td align="left" rowspan="1" colspan="1"><text><SENT sid="315" pm="."><plain>Fu and Li's Eta </plain></SENT>
</text></td><td align="center" rowspan="1" colspan="1"><text><SENT sid="316" pm="."><plain>Î· </plain></SENT>
</text></td><td align="left" rowspan="1" colspan="1"><text><SENT sid="317" pm="."><plain>Fu and Li, 1993 </plain></SENT>
</text></td></tr></tbody></table></table-wrap></SecTag></sec></sec></SecTag><sec><title><text><SENT sid="318" pm="."><plain>3. </plain></SENT>
<SENT sid="319" pm="."><plain>Composing workflows in FAST </plain></SENT>
</text></title><p><text><SENT sid="320" pm="."><plain>Here we show how to interactively prototype a pipeline that computes the sliding window profile of Tajima's D of Figure 4A in (Ardell et al., 2003) from a publicly available datafile. </plain></SENT>
<SENT sid="321" pm="."><plain>The datafile associated to this figure is an NCBI PopSet with accession ID 32329588 containing an alignment of a fully annotated ciliate gene (accession AF194338.1) against several partially sequenced allelic variants. </plain></SENT>
<SENT sid="322" pm="."><plain>One of the variants with accession ID AY243496.1 appears to be partly non-functionalized. </plain></SENT>
</text></p><p><text><SENT sid="323" pm="."><plain>First to see this data, we view it in the pager less (press âqâ to quit and âspaceâ to page): </plain></SENT>
</text></p><preformat>less t/data/popset_32329588.fas</preformat><p><text><SENT sid="324" pm="."><plain>A key feature of the Unix shell allows users to recall previous commands in their so-called history, usually by typing the âup-arrow,â for possble re-use and editing. </plain></SENT>
<SENT sid="325" pm="."><plain>To check the number of sequences and characters in the alignment, execute: </plain></SENT>
</text></p><preformat>faswc t/data/popset_32329588.fas</preformat><p><text><SENT sid="326" pm="."><plain>To compute our population genetic statistics we wish to remove the annotated reference sequence, the deactivated allele, and one additional sequence from analysis, which we can do using fasgrep, and verify that it reduced data by the correct number of records (six) by piping to faswc (the command is broken over two lines here but may be entered as one line on the Unix prompt): </plain></SENT>
</text></p><preformat>fasgrep -v â³(AF194|349[06])â³
Â Â t/data/popset_32329588.fas | faswc</preformat><p><text><SENT sid="327" pm="."><plain>We can check the identifier lines by modifying the end of this pipeline: </plain></SENT>
</text></p><preformat>fasgrep -v â³(AF194|349[06])â³
Â Â t/data/popset_32329588.fas | grep \&gt;</preformat><p><text><SENT sid="328" pm="."><plain>Sequencing ambiguities and gap-characters can introduce noise and uncertainty in the execution and documention of bioinformatic workflows. </plain></SENT>
<SENT sid="329" pm="."><plain>For some computations, for example in molecular population genetics, one may want to be conservative and remove ambiguity- and gap-containing sites from an alignment. </plain></SENT>
<SENT sid="330" pm="."><plain>We can check for ambiguities in our data by outputing a composition table: </plain></SENT>
</text></p><preformat>fasgrep -v â³(AF194|349[06])â³
Â Â Â t/data/popset_32329588.fas | fascomp
Â Â Â Â Â --table</preformat><p><text><SENT sid="331" pm="."><plain>To remap ambiguities to gap characters, with the intent of removing all sites containing either ambiguities or gaps, we may use fastr to remap all non-strict DNA characters to gap (â) and verify the result using fascomp again: </plain></SENT>
</text></p><preformat>
fasgrep -v â³(AF194|349[06])â³
t/data/popset_32329588.fas |
Â Â fastr --strict -N - | fascomp --table</preformat><p><text><SENT sid="332" pm="."><plain>Now, with confidence in our remapping, we extract exclusively gap-free sites from the alignment using alncut, and verify that we reduced alignment size with faswc: </plain></SENT>
</text></p><preformat>fasgrep -v â³(AF194|349[06])â³
Â t/data/popset_32329588.fas |
Â fastr --strict -N - | alncut -g | faswc</preformat><p><text><SENT sid="333" pm="."><plain>Finally, we pass the verified pipeline output to alnpi for sliding-window analysis of Tajima's D in overlapping windows of width 100 and step size 25: </plain></SENT>
</text></p><preformat>fasgrep -v â³(AF194|349[06])â³
t/data/popset_32329588.fas |
fastr --strict -N - | alncut -g | alnpi
--window 100:25:d</preformat></sec><sec><title><text><SENT sid="334" pm="."><plain>4. </plain></SENT>
<SENT sid="335" pm="."><plain>Further FAST workflow examples </plain></SENT>
</text></title><sec><title><text><SENT sid="336" pm="."><plain>4.1. </plain></SENT>
<SENT sid="337" pm="."><plain>Selecting sites from alignments by annotated features </plain></SENT>
</text></title><p><text><SENT sid="338" pm="."><plain>Another example, that reproduces a published result from (Ardell et al., 2003), demonstrates the utility of combining gbfalncut with alnpi, allowing users to select sites from alignments corresponding to features annotated on one of the sequences in a separate GenBank file. </plain></SENT>
<SENT sid="339" pm="."><plain>For example, to calculate a Tajima's D statistic for 5â² UTRs, corresponding to the the last line in Table 1 of that work, execute: </plain></SENT>
</text></p><preformat>gbfalncut -k t/data/AF194338.1.gb 5.UTR
t/data/popset_32329588.fas | fasgrep -v
Â â³(AF194|349[06])â³ | fastr --strict -N
Â - | alncut -g | alnpi</preformat></sec><sec><title><text><SENT sid="340" pm="."><plain>4.2. </plain></SENT>
<SENT sid="341" pm="."><plain>Selecting sequences by encoded motifs </plain></SENT>
</text></title><p><text><SENT sid="342" pm="."><plain>An advantage of the annotation approach in FAST is the ability to select and sort sequences by attributes computed and annotated into data by utilities upstream in the pipeline. </plain></SENT>
<SENT sid="343" pm="."><plain>For example, to select protein-coding genes from a file cds.fas whose translations contain the N-glycosylation amino acid motif (Kornfeld and Kornfeld, 1985), one could execute: </plain></SENT>
</text></p><preformat>
fasxl -a cds.fas | fasgrep -t xl0
Â â³N[^P][ST][^P]â³ | fascut -f 1..-2</preformat><p><text><SENT sid="344" pm="."><plain>The first command in the pipeline translates each sequence and appends the translation to the description with the tag âxl0â (indicating translation in the zeroth reading frame). </plain></SENT>
<SENT sid="345" pm="."><plain>The second command in the pipeline uses a regular expression to represent the N-glycosylation amino acid motif pattern as the value of a âname:valueâ pair in the description with tag âxl0,â hence processing the annotations produced by fasxl. </plain></SENT>
<SENT sid="346" pm="."><plain>The regex argument to fasgrep is quoted to protect the argument from interpretation by the shell. </plain></SENT>
<SENT sid="347" pm="."><plain>The last command in the pipeline removes the last field in the description, restoring records as they were before they were annotated by fasxl. </plain></SENT>
</text></p></sec><sec><title><text><SENT sid="348" pm="."><plain>4.3. </plain></SENT>
<SENT sid="349" pm="."><plain>Sorting records by third codon position composition </plain></SENT>
</text></title><p><text><SENT sid="350" pm="."><plain>Another example illustrates the powerful expression of ranges in fascut. </plain></SENT>
<SENT sid="351" pm="."><plain>An optional âbyâ parameter in ranges allows increments or decrements in steps larger than one. </plain></SENT>
<SENT sid="352" pm="."><plain>To extract third-position bases from codon sequence records, compute and annotate their compositions into record descriptions, ultimately sorting records by their third-position adenosine contents, do: </plain></SENT>
</text></p><preformat>fascut 3:-1:3 cds.fas | fascomp | fassort
Â -nt comp_A</preformat></sec><sec><title><text><SENT sid="353" pm="."><plain>4.4. </plain></SENT>
<SENT sid="354" pm="."><plain>More advanced merging of data records </plain></SENT>
</text></title><p><text><SENT sid="355" pm="."><plain>More advanced usage of faspaste requires Unix pipelines. </plain></SENT>
<SENT sid="356" pm="."><plain>For example to join both descriptions and sequences from two data-files, execute: </plain></SENT>
</text></p><preformat>faspaste data1.fas data2.fas | faspaste
Â -d - data2.fas</preformat><p><text><SENT sid="357" pm="."><plain>The hyphen second argument (-) to the second instance of faspaste refers to the input received from standard input through the pipe. </plain></SENT>
<SENT sid="358" pm="."><plain>This example works because by default, faspaste uses (âmutatesâ) records from the data stream named in its first argument to receive the data concatenated from all records. </plain></SENT>
</text></p><p><text><SENT sid="359" pm="."><plain>To prepend the first sequence of one file repeatedly to every sequence in another file, execute: </plain></SENT>
</text></p><preformat>
fashead -n 1 t/data/fasxl_test4.fas |
Â faspaste -r - t/data/fasxl_test4.fas</preformat><p><text><SENT sid="360" pm="."><plain>To prepend the first sequence of one file repeatedly to every other sequence in another file, using identifiers and descriptions from the second file in the output, execute: </plain></SENT>
</text></p><preformat>
fashead -n 1 t/data/fasxl_test3.fas |
Â faspaste -r -R 2 - t/data/fasxl_test4.fas</preformat></sec></sec><sec><title><text><SENT sid="361" pm="."><plain>5. </plain></SENT>
<SENT sid="362" pm="."><plain>Further documentation and usage examples </plain></SENT>
</text></title><p><text><SENT sid="363" pm="."><plain>Upon installation, FAST generates and installs a complete man page for each FAST utility, which should be accessible by one or both of the following commands: </plain></SENT>
</text></p><preformat>man fasgrep
perldoc fasgrep</preformat><p><text><SENT sid="364" pm="."><plain>In addition, a FAST Cookbook has been contributed by the authors and is available with the source code distribution or from the project GitHub repository at <ext-link ext-link-type="uri" xlink:href="https://github.com/tlawrence3/FAST">https://github.com/tlawrence3/FAST</ext-link>. </plain></SENT>
</text></p></sec><SecTag type="CONCL"><sec><title><text><SENT sid="365" pm="."><plain>6. </plain></SENT>
<SENT sid="366" pm="."><plain>Concluding remarks and future directions </plain></SENT>
</text></title><p><text><SENT sid="367" pm="."><plain>Planned additions in future versions of FAST include fasrand and alnrand for automated sampling, permutations and bootstrapping of sequences and sites, respectively, and fasgo and fasgosort for selection and sorting of records by Gene Ontology categories (The Gene Ontology Consortium, 2015). </plain></SENT>
</text></p></sec></SecTag><sec><title><text><SENT sid="368" pm="."><plain>Availability </plain></SENT>
</text></title><p><text><SENT sid="369" pm="."><plain>Stable versions of FAST are released through the Comprehensive Perl Archive Network (CPAN) at <ext-link ext-link-type="uri" xlink:href="http://search.cpan.org/~dhard/">http://search.cpan.org/~dhard/</ext-link>. </plain></SENT>
<SENT sid="370" pm="."><plain>Development of FAST is through its GitHub repository at <ext-link ext-link-type="uri" xlink:href="https://github.com/tlawrence3/FAST">https://github.com/tlawrence3/FAST</ext-link>. </plain></SENT>
<SENT sid="371" pm="."><plain>For latest news on the FAST project please check the Ardell Lab homepage at <ext-link ext-link-type="uri" xlink:href="http://compbio.ucmerced.edu/ardell/software/FAST/">http://compbio.ucmerced.edu/ardell/software/FAST/</ext-link>. </plain></SENT>
</text></p></sec><SecTag type="AUTH_CONT"><sec><title><text><SENT sid="372" pm="."><plain>Author contributions </plain></SENT>
</text></title><p><text><SENT sid="373" pm="."><plain>DA conceived, designed, and wrote much of FAST. </plain></SENT>
<SENT sid="374" pm="."><plain>TL. contributed major code factorizations and reorganization and fastail. </plain></SENT>
<SENT sid="375" pm="."><plain>KK contributed code including faspaste, and fashead. </plain></SENT>
<SENT sid="376" pm="."><plain>RL contributed an analysis of code dependencies for the FAST installer. </plain></SENT>
<SENT sid="377" pm="."><plain>PB tested installation and running on Windows using Strawberry Perl. </plain></SENT>
<SENT sid="378" pm="."><plain>All authors, especially DC and CC, contributed documentation, testing, and code fixes. </plain></SENT>
<SENT sid="379" pm="."><plain>KA and DA wrote the FAST Cookbook. </plain></SENT>
<SENT sid="380" pm="."><plain>DA wrote the paper with major contributions from DC and TL All authors made minor contributions to the manuscript, reviewed the final version of the manuscript and agree to be accountable for its contents. </plain></SENT>
</text></p><sec><title><text><SENT sid="381" pm="."><plain>Conflict of interest statement </plain></SENT>
</text></title><p><text><SENT sid="382" pm="."><plain>The authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest. </plain></SENT>
</text></p></sec></sec></SecTag></body><back><fn-group><SecTag type="ACK_FUND"><fn fn-type="financial-disclosure"><p><text4fund><text><SENT sid="383" pm="."><plain>Funding. </plain></SENT>
<SENT sid="384" pm="."><plain>DA gratefully acknowledges an NSF-DBI Postdoctoral Fellowship in Biological Informatics, an AY2009-2010 award from UC Merced's Graduate Research Council, a Chancellor's Award from UC Merced's second Chancellor Sung-Mo Kang, the NSF-funded URM program Undergraduate Research in Computational Biology at UC Merced (DBI-1040962) for support of KK and PB, and support of the UC Merced Library Open Access Fund Work Group. </plain></SENT>
</text></text4fund></p></fn></SecTag></fn-group><SecTag type="ACK_FUND"><ack><p><text4fund><text><SENT sid="385" pm="."><plain>We acknowledge Christopher Clark for help in establishing a Git repository for FAST, as well as Julie Phillips and other Ardell lab members or students who used these tools and gave feedback. </plain></SENT>
<SENT sid="386" pm="."><plain>DA gratefully acknowledges Professors Laura Landweber, Siv Andersson and Leif Kirsebom in whose laboratories the FAST tools were first developed as well as the Linnaeus Centre for Bioinformatics at Uppsala University. </plain></SENT>
</text></text4fund></p></ack></SecTag><SecTag type="SUPPL"><sec sec-type="supplementary-material" id="s2"><title>Supplementary material</title><p>The Supplementary Material for this article can be found online at: <ext-link ext-link-type="uri" xlink:href="http://journal.frontiersin.org/article/10.3389/fgene.2015.00172/abstract">http://journal.frontiersin.org/article/10.3389/fgene.2015.00172/abstract</ext-link></p><p>This is an archival copy, correct at time of publication. For the most recent and up to date information, please follow the links in the main text of the article.</p><supplementary-material content-type="local-data"><media xlink:href="DataSheet1.ZIP"><caption><p><text><SENT sid="387" pm="."><plain>Click here for additional data file. </plain></SENT>
</text></p></caption></media></supplementary-material></sec></SecTag><SecTag type="REF"><ref-list><title>References</title><ref id="B1"><text><SENT sid="388" pm="."><plain>AbeT.InokuchiH.YamadaY.MutoA.IwasakiY.IkemuraT. (2014). tRNADB-CE: tRNA gene database well-timed in the era of big sequence data. Front. </plain></SENT>
<SENT sid="389" pm="."><plain>Genet. 5:114. 10.3389/fgene.2014.00114<?supplied-pmid 24822057?>24822057 </plain></SENT>
</text></ref><ref id="B2"><text><SENT sid="390" pm="."><plain>ArdellD. </plain></SENT>
<SENT sid="391" pm="."><plain>H. (2004). SCANMS: adjusting for multiple comparisons in sliding window neutrality tests. Bioinformatics 20, 1986â1988. 10.1093/bioinformatics/bth187<?supplied-pmid 15059827?>15059827 </plain></SENT>
</text></ref><ref id="B3"><text><SENT sid="392" pm="."><plain>ArdellD. </plain></SENT>
<SENT sid="393" pm="."><plain>H.LozuponeC. </plain></SENT>
<SENT sid="394" pm="."><plain>A.LandweberL. </plain></SENT>
<SENT sid="395" pm="."><plain>F. (2003). Polymorphism, recombination and alternative unscrambling in the DNA polymerase alpha gene of the ciliate stylonychia lemnae (alveolata; class spirotrichea). Genetics 165, 1761â1777. <?supplied-pmid 14704164?>14704164 </plain></SENT>
</text></ref><ref id="B4"><text><SENT sid="396" pm="."><plain>BaggerlyK. </plain></SENT>
<SENT sid="397" pm="."><plain>A.CoombesK. </plain></SENT>
<SENT sid="398" pm="."><plain>R. (2009). Deriving chemosensitivity from cell lines: forensic bioinformatics and reproducible research in high-throughput biology. Ann. </plain></SENT>
<SENT sid="399" pm="."><plain>Appl. </plain></SENT>
<SENT sid="400" pm="."><plain>Stat. 3, 1309â1334. 10.1214/09-AOAS291 </plain></SENT>
</text></ref><ref id="B5"><text><SENT sid="401" pm="."><plain>BaggerlyK. </plain></SENT>
<SENT sid="402" pm="."><plain>A.CoombesK. </plain></SENT>
<SENT sid="403" pm="."><plain>R. (2011). What information should be required to support clinical omicsÄ° publications? Clin. </plain></SENT>
<SENT sid="404" pm="."><plain>Chem. 57, 688â690. 10.1373/clinchem.2010.158618<?supplied-pmid 21364027?>21364027 </plain></SENT>
</text></ref><ref id="B6"><text><SENT sid="405" pm="."><plain>BarnesN. (2010). Publish your computer code: it is good enough. Nature 467, 753â753. 10.1038/467753a<?supplied-pmid 20944687?>20944687 </plain></SENT>
</text></ref><ref id="B7"><text><SENT sid="406" pm="."><plain>BensonD. </plain></SENT>
<SENT sid="407" pm="."><plain>A.Karsch-MizrachiI.LipmanD. </plain></SENT>
<SENT sid="408" pm="."><plain>J.OstellJ.SayersE. </plain></SENT>
<SENT sid="409" pm="."><plain>W. (2009). GenBank. Nucleic Acids Res. 37, D26âD31. 10.1093/nar/gkn723<?supplied-pmid 18940867?>18940867 </plain></SENT>
</text></ref><ref id="B8"><text><SENT sid="410" pm="."><plain>BlankenbergD.Hillman-JacksonJ. (2014). Analysis of next-generation sequencing data using Galaxy, in Stem Cell Transcriptional Networks, Vol. </plain></SENT>
<SENT sid="411" pm="."><plain>1150, of Methods in Molecular Biology, ed KidderpagesB. </plain></SENT>
<SENT sid="412" pm="."><plain>L. (New York, NY: Springer), 21â43. </plain></SENT>
</text></ref><ref id="B9"><text><SENT sid="413" pm="."><plain>BoulesteixA.-L. (2010). Over-optimism in bioinformatics research. Bioinformatics 26, 437â439. 10.1093/bioinformatics/btp648<?supplied-pmid 19942585?>19942585 </plain></SENT>
</text></ref><ref id="B10"><text><SENT sid="414" pm="."><plain>BradnamK.KorfI. (2012). UNIX and Perl to the Rescue!: a Field Guide for the Life Sciences (and Other Data-rich Pursuits). Cambridge: Cambridge University Press. </plain></SENT>
</text></ref><ref id="B11"><text><SENT sid="415" pm="."><plain>CasadevallA.SteenR. </plain></SENT>
<SENT sid="416" pm="."><plain>G.FangF. </plain></SENT>
<SENT sid="417" pm="."><plain>C. (2014). Sources of error in the retracted scientific literature. FASEB J. 28, 3847â3855. 10.1096/fj.14-256735<?supplied-pmid 24928194?>24928194 </plain></SENT>
</text></ref><ref id="B12"><text><SENT sid="418" pm="."><plain>CunninghamF.AmodeM. </plain></SENT>
<SENT sid="419" pm="."><plain>R.BarrellD.BealK.BillisK.BrentS.. </plain></SENT>
<SENT sid="420" pm="."><plain>(2015). Ensembl 2015. Nucleic Acids Res. 43, D662âD669. 10.1093/nar/gku1010<?supplied-pmid 25352552?>25352552 </plain></SENT>
</text></ref><ref id="B13"><text><SENT sid="421" pm="."><plain>DelaglioF.GrzesiekS.VuisterG. </plain></SENT>
<SENT sid="422" pm="."><plain>W.ZhuG.PfeiferJ.BaxA. (1995). NMRPipe: a multidimensional spectral processing system based on unix pipes. J. Biomol. </plain></SENT>
<SENT sid="424" pm="."><plain>NMR 6, 277â293. 10.1007/BF00197809<?supplied-pmid 8520220?>8520220 </plain></SENT>
</text></ref><ref id="B14"><text><SENT sid="425" pm="."><plain>DelescluseM.FranconvilleR.JouclaS.LieuryT.PouzatC. (2012). Making neurophysiological data analysis reproducible: why and how? J. Phys. </plain></SENT>
<SENT sid="427" pm="."><plain>Paris 106, 159â170. 10.1016/j.jphysparis.2011.09.011<?supplied-pmid 21986476?>21986476 </plain></SENT>
</text></ref><ref id="B15"><text><SENT sid="428" pm="."><plain>EwensW. </plain></SENT>
<SENT sid="429" pm="."><plain>J. (1972). The sampling theory of selectively neutral alleles. Theor. </plain></SENT>
<SENT sid="430" pm="."><plain>Popul. </plain></SENT>
<SENT sid="431" pm="."><plain>Biol. 3, 87â112. 10.1016/0040-5809(72)90035-4<?supplied-pmid 4667078?>4667078 </plain></SENT>
</text></ref><ref id="B16"><text><SENT sid="432" pm="."><plain>FuY. </plain></SENT>
<SENT sid="433" pm="."><plain>X.LiW. </plain></SENT>
<SENT sid="434" pm="."><plain>H. (1993). Statistical tests of neutrality of mutations. Genetics 133, 693â709. <?supplied-pmid 8454210?>8454210 </plain></SENT>
</text></ref><ref id="B17"><text><SENT sid="435" pm="."><plain>GarlanD.ShawM. (1994). An introduction to software architecture. Comput. </plain></SENT>
<SENT sid="436" pm="."><plain>Sci. </plain></SENT>
<SENT sid="437" pm="."><plain>Dep. <?supplied-pmid 6355407?>6355407 </plain></SENT>
</text></ref><ref id="B18"><text><SENT sid="438" pm="."><plain>GordonA. (2009). FASTX Toolkit. </plain></SENT>
<SENT sid="439" pm="."><plain>Available online at: <ext-link ext-link-type="uri" xlink:href="http://cancan.cshl.edu/labmembers/gordon/fastx_toolkit/index.html">http://cancan.cshl.edu/labmembers/gordon/fastx_toolkit/index.html</ext-link> [Online: accessed 25-January-2015]. </plain></SENT>
</text></ref><ref id="B19"><text><SENT sid="440" pm="."><plain>GouyM.GuindonS.GascuelO. (2010). SeaView version 4: a multiplatform graphical user interface for sequence alignment and phylogenetic tree building. Mol. </plain></SENT>
<SENT sid="441" pm="."><plain>Biol. </plain></SENT>
<SENT sid="442" pm="."><plain>Evol. 27, 221â224. 10.1093/molbev/msp259<?supplied-pmid 19854763?>19854763 </plain></SENT>
</text></ref><ref id="B20"><text><SENT sid="443" pm="."><plain>HuangY.GottardoR. (2013). Comparability and reproducibility of biomedical data. Brief. </plain></SENT>
<SENT sid="444" pm="."><plain>Bioinform. 14, 391â401. 10.1093/bib/bbs078<?supplied-pmid 23193203?>23193203 </plain></SENT>
</text></ref><ref id="B21"><text><SENT sid="445" pm="."><plain>HutsonS. (2010). Data handling errors spur debate over clinical trial. Nat. </plain></SENT>
<SENT sid="446" pm="."><plain>Med. 16:618. 10.1038/nm0610-618a<?supplied-pmid 20526299?>20526299 </plain></SENT>
</text></ref><ref id="B22"><text><SENT sid="447" pm="."><plain>IoannidisJ. </plain></SENT>
<SENT sid="448" pm="."><plain>P. </plain></SENT>
<SENT sid="449" pm="."><plain>A.AllisonD. </plain></SENT>
<SENT sid="450" pm="."><plain>B.BallC. </plain></SENT>
<SENT sid="451" pm="."><plain>A.CoulibalyI.CuiX.CulhaneA. </plain></SENT>
<SENT sid="452" pm="."><plain>C.. </plain></SENT>
<SENT sid="453" pm="."><plain>(2008). Repeatability of published microarray gene expression analyses. Nat. </plain></SENT>
<SENT sid="454" pm="."><plain>Genet. 41, 149â155. 10.1038/ng.295<?supplied-pmid 19174838?>19174838 </plain></SENT>
</text></ref><ref id="B23"><text><SENT sid="455" pm="."><plain>JoppaL. </plain></SENT>
<SENT sid="456" pm="."><plain>N.McInernyG.HarperR.SalidoL.TakedaK.O'HaraK.. </plain></SENT>
<SENT sid="457" pm="."><plain>(2013). Troubling trends in scientific software use. Science 340, 814â815. 10.1126/science.1231535<?supplied-pmid 23687031?>23687031 </plain></SENT>
</text></ref><ref id="B24"><text><SENT sid="458" pm="."><plain>KnuthD. </plain></SENT>
<SENT sid="459" pm="."><plain>E. (1984). Literate programming. Comput. </plain></SENT>
<SENT sid="460" pm="."><plain>J. 27, 97â111. 10.1093/comjnl/27.2.97 </plain></SENT>
</text></ref><ref id="B25"><text><SENT sid="461" pm="."><plain>KornfeldR.KornfeldS. (1985). Assembly of asparagine-linked oligosaccharides. Ann. </plain></SENT>
<SENT sid="462" pm="."><plain>Rev. </plain></SENT>
<SENT sid="463" pm="."><plain>Biochem. 54, 631â664. 10.1146/annurev.bi.54.070185.003215<?supplied-pmid 3896128?>3896128 </plain></SENT>
</text></ref><ref id="B26"><text><SENT sid="464" pm="."><plain>LeonardA. </plain></SENT>
<SENT sid="465" pm="."><plain>C.McHaliM. (2013). DNA replication origins. Cold Spring Harb. </plain></SENT>
<SENT sid="466" pm="."><plain>Perspect. </plain></SENT>
<SENT sid="467" pm="."><plain>Biol. 5:a010116. 10.1101/cshperspect.a010116<?supplied-pmid 23838439?>23838439 </plain></SENT>
</text></ref><ref id="B27"><text><SENT sid="468" pm="."><plain>LiH.HandsakerB.WysokerA.FennellT.RuanJ.HomerN.. </plain></SENT>
<SENT sid="469" pm="."><plain>(2009). The sequence alignment/map format and SAMtools. Bioinformatics 25, 2078â2079. 10.1093/bioinformatics/btp352<?supplied-pmid 19505943?>19505943 </plain></SENT>
</text></ref><ref id="B28"><text><SENT sid="470" pm="."><plain>LibradoP.RozasJ. (2009). DnaSP v5: a software for comprehensive analysis of DNA polymorphism data. Bioinformatics 25, 1451â1452. 10.1093/bioinformatics/btp187<?supplied-pmid 19346325?>19346325 </plain></SENT>
</text></ref><ref id="B29"><text><SENT sid="471" pm="."><plain>LipmanD. </plain></SENT>
<SENT sid="472" pm="."><plain>J.PearsonW. </plain></SENT>
<SENT sid="473" pm="."><plain>R. (1985). Rapid and sensitive protein similarity searches. Science 227, 1435â1441. 10.1126/science.2983426<?supplied-pmid 2983426?>2983426 </plain></SENT>
</text></ref><ref id="B30"><text><SENT sid="474" pm="."><plain>LushboughC. </plain></SENT>
<SENT sid="475" pm="."><plain>M.JenneweinD. </plain></SENT>
<SENT sid="476" pm="."><plain>M.BrendelV. </plain></SENT>
<SENT sid="477" pm="."><plain>P. (2011). The bioextract server: a web-based bioinformatic workflow platform. Nucleic Acids Res. 39 Suppl. </plain></SENT>
<SENT sid="478" pm="."><plain>2, W528âW532. 10.1093/nar/gkr286<?supplied-pmid 21546552?>21546552 </plain></SENT>
</text></ref><ref id="B31"><text><SENT sid="479" pm="."><plain>MarkowitzV. </plain></SENT>
<SENT sid="480" pm="."><plain>M.ChenI.-M. </plain></SENT>
<SENT sid="481" pm="."><plain>A.PalaniappanK.ChuK.SzetoE.PillayM.. </plain></SENT>
<SENT sid="482" pm="."><plain>(2014). IMG 4 version of the integrated microbial genomes comparative analysis system. Nucleic Acids Res. 42, D560âD567. 10.1093/nar/gkt963<?supplied-pmid 24165883?>24165883 </plain></SENT>
</text></ref><ref id="B32"><text><SENT sid="483" pm="."><plain>McIlroyD. (1969). Mass-produced software components, in Proceedings of the 1st International Conference on Software Engineering, eds BuxtonJ.NaurP.RandellB. (Garmisch-Pattenkirchen), 138â155. </plain></SENT>
</text></ref><ref id="B33"><text><SENT sid="484" pm="."><plain>MorinA.UrbanJ.AdamsP. </plain></SENT>
<SENT sid="485" pm="."><plain>D.FosterI.SaliA.BakerD.. </plain></SENT>
<SENT sid="486" pm="."><plain>(2012). Shining light into black boxes. Science 336, 159â160. 10.1126/science.1218263<?supplied-pmid 22499926?>22499926 </plain></SENT>
</text></ref><ref id="B34"><text><SENT sid="487" pm="."><plain>NeiM.LiW. </plain></SENT>
<SENT sid="488" pm="."><plain>H. (1979). Mathematical model for studying genetic variation in terms of restriction endonucleases. Proc. </plain></SENT>
<SENT sid="489" pm="."><plain>Natl. </plain></SENT>
<SENT sid="490" pm="."><plain>Acad. </plain></SENT>
<SENT sid="491" pm="."><plain>Sci. </plain></SENT>
<SENT sid="492" pm="."><plain>U.S.A. 76, 5269â5273. 10.1073/pnas.76.10.5269<?supplied-pmid 291943?>291943 </plain></SENT>
</text></ref><ref id="B35"><text><SENT sid="493" pm="."><plain>OinnT.GreenwoodM.AddisM.AlpdemirM. </plain></SENT>
<SENT sid="494" pm="."><plain>N.FerrisJ.GloverK. (2006). Taverna: lessons in creating a workflow environment for the life sciences. Concurrency Comput. </plain></SENT>
<SENT sid="495" pm="."><plain>Pract. </plain></SENT>
<SENT sid="496" pm="."><plain>Exp. 18, 1067â1100. 10.1002/cpe.993 </plain></SENT>
</text></ref><ref id="B36"><text><SENT sid="497" pm="."><plain>PeekJ. (2001). Why Use a Command Line Instead of Windows? Available online at: <ext-link ext-link-type="uri" xlink:href="http://www.linuxdevcenter.com/pub/a/linux/2001/11/15/learnunixos.html">http://www.linuxdevcenter.com/pub/a/linux/2001/11/15/learnunixos.html</ext-link> </plain></SENT>
</text></ref><ref id="B37"><text><SENT sid="498" pm="."><plain>PengR. </plain></SENT>
<SENT sid="499" pm="."><plain>D. (2009). Reproducible research and biostatistics. Biostatistics 10, 405â408. 10.1093/biostatistics/kxp014<?supplied-pmid 19535325?>19535325 </plain></SENT>
</text></ref><ref id="B38"><text><SENT sid="500" pm="."><plain>PengR. </plain></SENT>
<SENT sid="501" pm="."><plain>D. (2011). Reproducible research in computational science. Science 334, 1226â1227. 10.1126/science.1213847<?supplied-pmid 22144613?>22144613 </plain></SENT>
</text></ref><ref id="B39"><text><SENT sid="502" pm="."><plain>RamppM.SoddemannT.LedererH. (2006). The MIGenAS integrated bioinformatics toolkit for web-based sequence analysis. Nucleic Acids Res. 34, W15âW19. 10.1093/nar/gkl254<?supplied-pmid 16844980?>16844980 </plain></SENT>
</text></ref><ref id="B40"><text><SENT sid="503" pm="."><plain>RiceP.LongdenI.BleasbyA. (2000). EMBOSS: the european molecular biology open software suite. Trends Genet. 16, 276â277. 10.1016/S0168-9525(00)02024-2<?supplied-pmid 10827456?>10827456 </plain></SENT>
</text></ref><ref id="B41"><text><SENT sid="504" pm="."><plain>RosenbloomK. </plain></SENT>
<SENT sid="505" pm="."><plain>R.ArmstrongJ.BarberG. </plain></SENT>
<SENT sid="506" pm="."><plain>P.CasperJ.ClawsonH.DiekhansM.. </plain></SENT>
<SENT sid="507" pm="."><plain>(2015). The UCSC genome browser database: 2015 update. Nucleic Acids Res. 43, D670âD681. 10.1093/nar/gku1177<?supplied-pmid 25428374?>25428374 </plain></SENT>
</text></ref><ref id="B42"><text><SENT sid="508" pm="."><plain>SayersE. </plain></SENT>
<SENT sid="509" pm="."><plain>W.BarrettT.BensonD. </plain></SENT>
<SENT sid="510" pm="."><plain>A.BryantS. </plain></SENT>
<SENT sid="511" pm="."><plain>H.CaneseK.ChetverninV.. </plain></SENT>
<SENT sid="512" pm="."><plain>(2009). Database resources of the national Center for biotechnology information. Nucleic Acids Res. 37, D5âD15. 10.1093/nar/gkp382<?supplied-pmid 18940862?>18940862 </plain></SENT>
</text></ref><ref id="B43"><text><SENT sid="513" pm="."><plain>SeemannT. (2013). Ten recommendations for creating usable bioinformatics command line software. Gigascience 2:15. 10.1186/2047-217X-2-15<?supplied-pmid 24225083?>24225083 </plain></SENT>
</text></ref><ref id="B44"><text><SENT sid="514" pm="."><plain>SimonsenK. </plain></SENT>
<SENT sid="515" pm="."><plain>L.ChurchillG. </plain></SENT>
<SENT sid="516" pm="."><plain>A.AquadroC. </plain></SENT>
<SENT sid="517" pm="."><plain>F. (1995). Properties of statistical tests of neutrality for DNA polymorphism data. Genetics 141, 413â429. <?supplied-pmid 8536987?>8536987 </plain></SENT>
</text></ref><ref id="B45"><text><SENT sid="518" pm="."><plain>SmithS. </plain></SENT>
<SENT sid="519" pm="."><plain>W.OverbeekR.WoeseC. </plain></SENT>
<SENT sid="520" pm="."><plain>R.GilbertW.GillevetP. </plain></SENT>
<SENT sid="521" pm="."><plain>M. (1994). The genetic data environment an expandable GUI for multiple sequence analysis. Comput. </plain></SENT>
<SENT sid="522" pm="."><plain>Appl. </plain></SENT>
<SENT sid="523" pm="."><plain>Biosci. 10, 671â675. 10.1093/bioinformatics/10.6.671<?supplied-pmid 7704666?>7704666 </plain></SENT>
</text></ref><ref id="B46"><text><SENT sid="524" pm="."><plain>StajichJ. </plain></SENT>
<SENT sid="525" pm="."><plain>E.BlockD.BoulezK.BrennerS. </plain></SENT>
<SENT sid="526" pm="."><plain>E.ChervitzS. </plain></SENT>
<SENT sid="527" pm="."><plain>A.DagdigianC.. </plain></SENT>
<SENT sid="528" pm="."><plain>(2002). The bioperl toolkit: perl modules for the life sciences. Genome Res. 12, 1611â1618. 10.1101/gr.361602<?supplied-pmid 12368254?>12368254 </plain></SENT>
</text></ref><ref id="B47"><text><SENT sid="529" pm="."><plain>StajichJ. </plain></SENT>
<SENT sid="530" pm="."><plain>E.HahnM. </plain></SENT>
<SENT sid="531" pm="."><plain>W. (2005). Disentangling the effects of demography and selection in human history. Mol. </plain></SENT>
<SENT sid="532" pm="."><plain>Biol. </plain></SENT>
<SENT sid="533" pm="."><plain>Evol. 22, 63â73. 10.1093/molbev/msh252<?supplied-pmid 15356276?>15356276 </plain></SENT>
</text></ref><ref id="B48"><text><SENT sid="534" pm="."><plain>StothardP. (2000). The sequence manipulation suite: JavaScript programs for analyzing and formatting protein and DNA sequences. Biotechniques 28, 1102, 1104. <?supplied-pmid 10868275?>10868275 </plain></SENT>
</text></ref><ref id="B49"><text><SENT sid="535" pm="."><plain>StutzM. (2000). Linux and the Tools Philosophy. </plain></SENT>
<SENT sid="536" pm="."><plain>Available online at: <ext-link ext-link-type="uri" xlink:href="http://www.linuxdevcenter.com/pub/a/linux/2000/07/25/LivingLinux.html">http://www.linuxdevcenter.com/pub/a/linux/2000/07/25/LivingLinux.html</ext-link> </plain></SENT>
</text></ref><ref id="B50"><text><SENT sid="537" pm="."><plain>TajimaF. (1989). Statistical method for testing the neutral mutation hypothesis by DNA polymorphism. Genetics 123, 585â595. <?supplied-pmid 2513255?>2513255 </plain></SENT>
</text></ref><ref id="B51"><text><SENT sid="538" pm="."><plain>The Gene Ontology Consortium. (2015). Gene ontology consortium: going forward. Nucleic Acids Res. 43, D1049âD1056. 10.1093/nar/gku1179<?supplied-pmid 25428369?>25428369 </plain></SENT>
</text></ref><ref id="B52"><text><SENT sid="539" pm="."><plain>VillesenP. (2007). FaBox: an online toolbox for fasta sequences. Mol. </plain></SENT>
<SENT sid="540" pm="."><plain>Ecol. </plain></SENT>
<SENT sid="541" pm="."><plain>Notes 7, 965â968. 10.1111/j.1471-8286.2007.01821.x </plain></SENT>
</text></ref><ref id="B53"><text><SENT sid="542" pm="."><plain>WaterhouseA. </plain></SENT>
<SENT sid="543" pm="."><plain>M.ProcterJ. </plain></SENT>
<SENT sid="544" pm="."><plain>B.MartinD. </plain></SENT>
<SENT sid="545" pm="."><plain>M. </plain></SENT>
<SENT sid="546" pm="."><plain>A.ClampM.BartonG. </plain></SENT>
<SENT sid="547" pm="."><plain>J. (2009). Jalview version 2âa multiple sequence alignment editor and analysis workbench. Bioinformatics 25, 1189â1191. 10.1093/bioinformatics/btp033<?supplied-pmid 19151095?>19151095 </plain></SENT>
</text></ref><ref id="B54"><text><SENT sid="548" pm="."><plain>WattersonG. (1975). On the number of segregating sites in genetical models without recombination. Theor. </plain></SENT>
<SENT sid="549" pm="."><plain>Popul. </plain></SENT>
<SENT sid="550" pm="."><plain>Biol. 7, 256â276. 10.1016/0040-5809(75)90020-9<?supplied-pmid 1145509?>1145509 </plain></SENT>
</text></ref><ref id="B55"><text><SENT sid="551" pm="."><plain>WilsonG. (2014). Software carpentry: lessons learned. F1000Res. 3:62. 10.12688/f1000research.3-62.v1<?supplied-pmid 24715981?>24715981 </plain></SENT>
</text></ref><ref id="B56"><text><SENT sid="552" pm="."><plain>YatesA.BealK.KeenanS.McLarenW.PignatelliM.RitchieG.. </plain></SENT>
<SENT sid="553" pm="."><plain>(2015). The Ensembl REST API: ensembl data for any language. Bioinformatics 31, 143â145. 10.1093/bioinformatics/btu613<?supplied-pmid 25236461?>25236461 </plain></SENT>
</text></ref></ref-list></SecTag></back></article>
