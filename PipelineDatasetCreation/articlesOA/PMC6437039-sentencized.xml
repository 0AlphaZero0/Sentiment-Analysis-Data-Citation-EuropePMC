<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN" "JATS-archivearticle1.dtd"> 
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?><?DTDIdentifier.IdentifierType public?><?SourceDTD.DTDName journalpublishing.dtd?><?SourceDTD.Version 2.3?><?ConverterInfo.XSLTName jp2nlmx2.xsl?><?ConverterInfo.Version 1?><front><journal-meta><journal-id journal-id-type="nlm-ta">Front Bioeng Biotechnol</journal-id><journal-id journal-id-type="iso-abbrev">Front Bioeng Biotechnol</journal-id><journal-id journal-id-type="publisher-id">Front. Bioeng. Biotechnol.</journal-id><journal-title-group><journal-title>Frontiers in Bioengineering and Biotechnology</journal-title></journal-title-group><issn pub-type="epub">2296-4185</issn><publisher><publisher-name>Frontiers Media S.A.</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">6437039</article-id><article-id pub-id-type="doi">10.3389/fbioe.2019.00046</article-id><article-categories><subj-group subj-group-type="heading"><subject>Bioengineering and Biotechnology</subject><subj-group><subject>Original Research</subject></subj-group></subj-group></article-categories><title-group><article-title><SecTag type="TITLE"><text><SENT sid="0" pm="."><plain>ParAlleL: A Novel Population-Based Approach to Biological Logic Gates </plain></SENT>
</text></SecTag></article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Millacura</surname><given-names>Felipe A.</given-names></name><xref ref-type="corresp" rid="c001"><sup>*</sup></xref><uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/658888/overview"/></contrib><contrib contrib-type="author"><name><surname>Largey</surname><given-names>Brendan</given-names></name><uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/699667/overview"/></contrib><contrib contrib-type="author"><name><surname>French</surname><given-names>Christopher E.</given-names></name><xref ref-type="corresp" rid="c002"><sup>*</sup></xref><uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/19365/overview"/></contrib></contrib-group><aff><institution>School of Biological Sciences, Institute of Quantitative Biology, Biochemistry and Biotechnology, University of Edinburgh</institution>, <addr-line>Edinburgh</addr-line>, <country>United Kingdom</country></aff><author-notes><fn fn-type="edited-by"><p><text><SENT sid="1" pm="."><plain>Edited by: Jussi Jantti, VTT Technical Research Centre of Finland Ltd, Finland </plain></SENT>
</text></p></fn><fn fn-type="edited-by"><p><text><SENT sid="2" pm="."><plain>Reviewed by: Thomas Dandekar, University of Wuerzburg, Germany; Chris John Myers, The University of Utah, United States </plain></SENT>
</text></p></fn><corresp id="c001">*Correspondence: Felipe A. Millacura <email>S1647595@sms.ed.ac.uk</email></corresp><corresp id="c002">Christopher E. French <email>c.french@ed.ac.uk</email></corresp><fn fn-type="other" id="fn001"><p><text><SENT sid="3" pm="."><plain>This article was submitted to Synthetic Biology, a section of the journal Frontiers in Bioengineering and Biotechnology </plain></SENT>
</text></p></fn></author-notes><pub-date pub-type="epub"><day>21</day><month>3</month><year>2019</year></pub-date><pub-date pub-type="collection"><year>2019</year></pub-date><volume>7</volume><elocation-id>46</elocation-id><history><date date-type="received"><day>17</day><month>12</month><year>2018</year></date><date date-type="accepted"><day>27</day><month>2</month><year>2019</year></date></history><permissions><copyright-statement>Copyright © 2019 Millacura, Largey and French.</copyright-statement><copyright-year>2019</copyright-year><copyright-holder>Millacura, Largey and French</copyright-holder><license xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License (CC BY). The use, distribution or reproduction in other forums is permitted, provided the original author(s) and the copyright owner(s) are credited and that the original publication in this journal is cited, in accordance with accepted academic practice. No use, distribution or reproduction is permitted which does not comply with these terms.</license-p></license></permissions><abstract><p><SecTag type="ABS"><text><SENT sid="4" pm="."><plain>In vivo logic gates have proven difficult to combine into larger devices. </plain></SENT>
<SENT sid="5" pm="."><plain>Our cell-based logic system, ParAlleL, decomposes a large circuit into a collection of small subcircuits working in parallel, each subcircuit responding to a different combination of inputs. </plain></SENT>
<SENT sid="6" pm="."><plain>A final global output is then generated by a combination of the responses. </plain></SENT>
<SENT sid="7" pm="."><plain>Using ParAlleL, for the first time a completely functional 3-bit full adder and full subtractor were generated using Escherichia coli cells, as well as a calculator-style display that shows a numeric result, from 0 to 7, when the proper 3 bit binary inputs are introduced into the system. </plain></SENT>
<SENT sid="8" pm="."><plain>ParAlleL demonstrates the use of a parallel approach for the design of cell-based logic gates that facilitates the generation and analysis of complex processes, without the need for complex genetic engineering. </plain></SENT>
</text></SecTag></p></abstract><SecTag type="KEYWORD"><kwd-group><kwd><italic>Escherichia coli</italic></kwd><kwd>3-bits</kwd><kwd>full adder</kwd><kwd>full subtractor</kwd><kwd>calculator-like display</kwd><kwd>parallel approach</kwd></kwd-group></SecTag><funding-group><award-group><funding-source id="cn001">Comisión Nacional de Investigación Científica y Tecnológica<named-content content-type="fundref-id">10.13039/501100002848</named-content></funding-source><award-id rid="cn001">CONICYT/BC-PhD 72170403</award-id></award-group></funding-group><counts><fig-count count="3"/><table-count count="0"/><equation-count count="0"/><ref-count count="14"/><page-count count="6"/><word-count count="3264"/></counts></article-meta></front><body><SecTag type="INTRO"><sec sec-type="intro" id="s1"><title><text><SENT sid="9" pm="."><plain>Introduction </plain></SENT>
</text></title><p><text><SENT sid="10" pm="."><plain>A major challenge in the field of synthetic biology is the construction of complex logic circuits that analyze variables as in electronics; where a single circuit accepts one or more binary inputs to generate one or more binary outputs. </plain></SENT>
<SENT sid="11" pm="."><plain>A cell-based logic network consists of engineered cells producing an output macromolecule only if the corresponding pattern of inputs is present. </plain></SENT>
<SENT sid="12" pm="."><plain>The mechanism of analysis is commonly based on the use of transcriptional regulators, transcription factors, polymerases, receptors, or recombinases (Brenner et al., 2018). </plain></SENT>
<SENT sid="13" pm="."><plain>Some examples of genetic circuits mimicking computational behavior are toggle switches, oscillators, boolean logic gates, feedback controllers, and multiplexers. </plain></SENT>
<SENT sid="14" pm="."><plain>Although there are genetic circuits that simulate computational behavior, the complex engineering of their biological chassis is affected by gene expression noise, mutation, cell death, undefined, and changing extracellular environments and improper interactions with the cellular context (Andrianantoandro et al., 2006). </plain></SENT>
<SENT sid="15" pm="."><plain>Furthermore, complex genetic engineering is necessary when multiple input variables are analyzed, limiting the processing capacity of the system. </plain></SENT>
</text></p><p><text><SENT sid="16" pm="."><plain>Biological multiplexers analyze one or more signals over a common transmission line using interconnected transcription factors, recombinases, antisense RNA, or CRISPR-like technology (Nielsen and Voigt, 2014; Roquet et al., 2016; Brenner et al., 2018). </plain></SENT>
<SENT sid="17" pm="."><plain>However, complex genetic engineering is needed for wiring the basic computational units, becoming inefficient for moving beyond simple NOT or AND logic gates or for scaling to 3 bit logic circuits. </plain></SENT>
<SENT sid="18" pm="."><plain>The complexity of the genetic engineering required can be reduced by using distributed logic circuits, where the computation is distributed among several physically separated cellular consortia that each sense only one signal and respond by secreting a communication molecule (Regot et al., 2011). </plain></SENT>
<SENT sid="19" pm="."><plain>As a circuit responds to one signal, but not another, due to spatial distribution, a change in the state of the system can be triggered as response, making synthetic learning possible (Macia et al., 2017; Shipman et al., 2017). </plain></SENT>
<SENT sid="20" pm="."><plain>Even though the consortium approach makes Boolean circuit design simpler, it still shows a slow response and considerable complexity since each cell needs to recognize, synthesize and secrete a wiring molecule (Macia et al., 2016). </plain></SENT>
</text></p><p><text><SENT sid="21" pm="."><plain>Here we propose an alternative logic architecture, which decomposes a large circuit into a collection of small subcircuits acting in parallel (hereafter ParAlleL). </plain></SENT>
<SENT sid="22" pm="."><plain>Rather than having a single type of agent (such as a genetically engineered cell) doing the computation, ParAlleL has separate types of agent that each react to a different combination of inputs. </plain></SENT>
<SENT sid="23" pm="."><plain>A final output is then generated by combination of the responses, making all kinds of binary operation possible. </plain></SENT>
<SENT sid="24" pm="."><plain>As an example, here we show the implementation of this concept using cells resistant to different combinations of antibiotics, with the response indicated by growth. </plain></SENT>
<SENT sid="25" pm="."><plain>This is used to demonstrate a completely functional 3 bit full adder and full subtractor, as well as a calculator-style display that shows digits from 0 to 7 based on three binary input bits. </plain></SENT>
</text></p></sec></SecTag><SecTag type="METHODS"><sec sec-type="methods" id="s2"><title><text><SENT sid="26" pm="."><plain>Methodology </plain></SENT>
</text></title><sec><title><text><SENT sid="27" pm="."><plain>Reagents and Stock Solution Preparations </plain></SENT>
</text></title><p><text><SENT sid="28" pm="."><plain>Antibiotic stock solutions were prepared as follows: 100 mg/ml carbenicilin disodium salt (Sigma-Aldrich #C1389), 50 mg/ml kanamycin sulfate (PanReac Applichem #A1493), 20 mg/ml chloramphenicol (Acros Organics #22792), 10 mg/ml tetracycline hydrochloryde (Duchefa Biochemie #T0150), 10 mg/ml gentamicin sulfate (Melford #G0124), and 50 mg/ml spectinomycin.HCl (LKT Labs #S6018). </plain></SENT>
<SENT sid="29" pm="."><plain>Developing solution contained 0.1 %w/v bromothymol blue (Sigma-Aldrich #114421) and 400 mM Trizma base pH7.5 (Sigma-Aldrich #T1503). </plain></SENT>
</text></p></sec><sec><title><text><SENT sid="30" pm="."><plain>Generation of Subcircuit Cells </plain></SENT>
</text></title><p><text><SENT sid="31" pm="."><plain>E. coli JM109 was transformed with 200–300 pg of plasmid pSB4A5 (AmpR) or pSB4C5 (ChlR) (Registry of Standard Biological Parts) and selected on 100 μg/ml carbenicilin (Am) or 20 μg/ml chloramphenicol (Ch), respectively. </plain></SENT>
<SENT sid="32" pm="."><plain>Cells carrying the first bit plasmid were made chemically competent (Chung et al., 1989) and transformed with 200–300 pg of the 2nd bit plasmid, pSB1T3 (TetR) or pSB1K3 (KanR) (Registry of Standard Biological Parts). </plain></SENT>
<SENT sid="33" pm="."><plain>Selection was performed with the first antibiotic (Am or Ch) and the addition of 10 μg/ml Tetracycline (Tc) or 50 μg/ml kanamycin (Km), obtaining the two-bit combinations Km/Am (KA), Tc/Am (TA), Km/Ch (KC), and Tc/Ch (TC). </plain></SENT>
<SENT sid="34" pm="."><plain>This set of strains is sufficient to implement all two-bit binary operations. </plain></SENT>
</text></p><p><text><SENT sid="35" pm="."><plain>The third bit layer was generated by transforming these four strains with pSEVA631 (GenR) (Silva-Rocha et al., 2012; GenBank <ext-link ext-link-type="DDBJ/EMBL/GenBank" xlink:href="JX560348">JX560348</ext-link>) or pMO9075 (SpmR) (Keller et al., 2011). </plain></SENT>
<SENT sid="36" pm="."><plain>Resulting strains were selected on the 2-bit antibiotic combinations plus 10 μg/ml gentamicin (Gm) or 50 μg/ml spectinomycin (Sm). </plain></SENT>
<SENT sid="37" pm="."><plain>This gave 8 strains, designated ATG (Am/Tc/Gm), AKG (Am/Km/Gm), ATS (Am/Tc/Sm), AKS (Am/Km/Sm), CTG (Ch/Tc/Gm), CTS (Ch/Tc/Sm), CKG (Ch/Km/Gm), CKS (Ch/Km/Sm) based on their resistance markers. </plain></SENT>
<SENT sid="38" pm="."><plain>This set of strains is sufficient to implement all three-bit binary operations. </plain></SENT>
<SENT sid="39" pm="."><plain>Plasmid specifications are listed in Figure S2, Tables S1, S3, with further information about these antibiotics in Table S2. </plain></SENT>
<SENT sid="40" pm="."><plain>Plasmid sequences are available in different formats at <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.7488/ds/2497">https://doi.org/10.7488/ds/2497</ext-link>. </plain></SENT>
</text></p></sec><sec><title><text><SENT sid="41" pm="."><plain>Three-Bit Logic Operations </plain></SENT>
</text></title><p><text><SENT sid="42" pm="."><plain>Tests were performed in 96-well microplates by inoculating cells (1:100) in LB broth (100 μL) supplemented with 1%w/v d(+)-glucose (Fisher Chemical #G0500). </plain></SENT>
<SENT sid="43" pm="."><plain>Plates were incubated for 18 h at 37°C without shaking and then developed by addition of the developing solution (0.1%w/v bromothymol blue in 400 mM Tris, pH7.5) in a ratio 1:20. </plain></SENT>
<SENT sid="44" pm="."><plain>Images were obtained using a Kodak ESPC315 Flatbed scanner. </plain></SENT>
<SENT sid="45" pm="."><plain>Design of the calculator-like display, full adder, and subtractor are shown in Figures 2, 3 and in Supplementary material (Figure S3). </plain></SENT>
<SENT sid="46" pm="."><plain>Raw figures were deposited at <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.7488/ds/2497">https://doi.org/10.7488/ds/2497</ext-link>. </plain></SENT>
</text></p></sec></sec></SecTag><SecTag type="RESULTS"><sec sec-type="results" id="s3"><title><text><SENT sid="47" pm="."><plain>Results </plain></SENT>
</text></title><p><text><SENT sid="48" pm="."><plain>In the distributed logic system of ParAlleL each input bit has two forms, ZERO and ONE, each of which is essential to certain output agents and inhibitory to others. </plain></SENT>
<SENT sid="49" pm="."><plain>Thus each agent reacts only to a certain combination of input bits, allowing generation of any arbitrary pattern of outputs for any pattern of inputs. </plain></SENT>
<SENT sid="50" pm="."><plain>In the implementation shown here, each input bit comes in two forms, each being an antibiotic lethal to sensitive strains. </plain></SENT>
<SENT sid="51" pm="."><plain>In this case, bit A is represented by ampicillin for zero, chloramphenicol for one, bit B by kanamycin for zero, tetracycline for one, and bit C by gentamicin for zero, spectinomycin for one. </plain></SENT>
<SENT sid="52" pm="."><plain>Thus, four strains are needed to implement any operation with two input bits, and eight strains for three input bits. </plain></SENT>
<SENT sid="53" pm="."><plain>In contrast to other cell-based logic schemes, only very minimal genetic engineering is required, essentially transformation with 3 different antibiotic resistance markers. </plain></SENT>
</text></p><p><text><SENT sid="54" pm="."><plain>Cells show a global response concordant with the behavior expected for a 1 bit, 2 bit, or 3 bit system (Figure 1). </plain></SENT>
<SENT sid="55" pm="."><plain>For instance, when the input 101 (chloramphenicol, tetracycline and spectinomycin) is added to the system growth is only observed in the corresponding CTS cells, which carry the proper resistance markers. </plain></SENT>
<SENT sid="56" pm="."><plain>The response time of the system is around 12 h (Figure S1) but plates were developed at 18 h to avoid false negatives or positives. </plain></SENT>
</text></p><SecTag type="FIG"><fig id="F1" position="float"><label>Figure 1</label><caption><p><text><SENT sid="57" pm="."><plain>ParAlleL responding to 1 bit, 2 bit, and 3 bit inputs. </plain></SENT>
<SENT sid="58" pm="."><plain>ParAlleL subcircuit cells were spatially distributed in different wells (vertically) and exposed to specified 1 bit, 2 bit, or 3 bit inputs (top of each column). </plain></SENT>
<SENT sid="59" pm="."><plain>Cells were inoculated (1:100) in LB supplemented with 1% w/v glucose. </plain></SENT>
<SENT sid="60" pm="."><plain>After 18 h of incubation at 37°C, plates were developed by addition of 0.05 volumes of the developing solution. </plain></SENT>
</text></p></caption><graphic xlink:href="fbioe-07-00046-g0001"/></fig></SecTag><p><text><SENT sid="61" pm="."><plain>In order to further test the ParAlleL system, a digital calculator-like display was designed (Figure 2A). </plain></SENT>
<SENT sid="62" pm="."><plain>In this case, multiple subcircuit cells are mixed in one well and the global response displays a number from 0 to 7 when the proper binary input is applied. </plain></SENT>
<SENT sid="63" pm="."><plain>Numbers represent the total eight possible values encoded within 3-bit binary inputs. </plain></SENT>
</text></p><SecTag type="FIG"><fig id="F2" position="float"><label>Figure 2</label><caption><p><text><SENT sid="64" pm="."><plain>Digital calculator-like display using 3 bit ParAlleL. </plain></SENT>
<SENT sid="65" pm="."><plain>Figure shows all numerals from zero to seven based on the 8 binary inputs provided. (A) Subcircuit cells were mixed and distributed in a 3 × 5 matrix and inoculated (1:100) in LB supplemented with 1%w/v glucose. </plain></SENT>
<SENT sid="66" pm="."><plain>Plate was developed after 18 h of incubation, by addition of 0.05 volumes of developing solution. (B) Output number results obtained by addition of each 3 bit antibiotic combination. </plain></SENT>
</text></p></caption><graphic xlink:href="fbioe-07-00046-g0002"/></fig></SecTag><p><text><SENT sid="67" pm="."><plain>Input configuration versatility was proven by representing bit A in this case by gentamicin for zero, spectinomycin for one, bit B by kanamycin for zero, tetracycline for one, and bit C by ampicillin for zero, chloramphenicol for one. </plain></SENT>
<SENT sid="68" pm="."><plain>For instance, once input 110 represented by Ch/Km/Gm is added in the system, the number 6 is displayed (Figure 2). </plain></SENT>
</text></p><p><text><SENT sid="69" pm="."><plain>Finally, a full adder and a full subtractor were designed. </plain></SENT>
<SENT sid="70" pm="."><plain>A full-adder adds three binary inputs, often denoted as A, B, and Cin, generating a Sum result (S) and a Carry-out (Cout). </plain></SENT>
<SENT sid="71" pm="."><plain>A full subtractor, on the other hand, has a minuend (X), a subtrahend (Y) and an additional Borrow-in (Bin) as inputs. </plain></SENT>
<SENT sid="72" pm="."><plain>The subtraction operation produces a difference (D) and a Borrow (Bout) (Figure 3). </plain></SENT>
</text></p><SecTag type="FIG"><fig id="F3" position="float"><label>Figure 3</label><caption><p><text><SENT sid="73" pm="."><plain>Full adder and subtractor using the 3 bit ParAlleL system. </plain></SENT>
<SENT sid="74" pm="."><plain>The figure shows results of addition and subtraction using the ParAlleL for 3 bit system. </plain></SENT>
<SENT sid="75" pm="."><plain>Cells were mixed as shown in Figure S3 and inoculated (1:100) in LB supplemented with 1%w/v glucose. </plain></SENT>
<SENT sid="76" pm="."><plain>After 18 hours of incubation, the plate was developed by addition of the 0.05 volumes of developing solution. </plain></SENT>
</text></p></caption><graphic xlink:href="fbioe-07-00046-g0003"/></fig></SecTag><p><text><SENT sid="77" pm="."><plain>In order to generate the full adder and subtractor, multiple subcircuit cells were mixed and distributed in two different wells (Figure S3). </plain></SENT>
<SENT sid="78" pm="."><plain>One well represents the solution (S) or difference (D) and a second one the carry (Cout) or borrow (Bout), for the adder and subtractor, respectively (Figure 3). </plain></SENT>
<SENT sid="79" pm="."><plain>A yellow color represents growth and a positive output 1, a blue color represents no growth and a binary 0 output instead. </plain></SENT>
</text></p></sec></SecTag><SecTag type="DISCUSS,CONCL"><sec id="s4"><title><text><SENT sid="80" pm="."><plain>Conclusions/Discussion </plain></SENT>
</text></title><p><text><SENT sid="81" pm="."><plain>Subcircuits that solve complex calculations in parallel have been extensively used for computation in order to reduce the total computation time. </plain></SENT>
<SENT sid="82" pm="."><plain>Translating this approach to biological systems would allow us to analyze complex processes, currently difficult in synthetic biology, as multiple simple sub-circuits. </plain></SENT>
</text></p><p><text><SENT sid="83" pm="."><plain>In our proof of concept, we present a biological information processing system, ParAlleL, capable of exploiting the parallelism in mixed bacterial cultures. </plain></SENT>
<SENT sid="84" pm="."><plain>ParAlleL decomposes the analysis of 2 and 3 bit complex inputs, into 4 and 8 sub circuits, respectively (Figure 1). </plain></SENT>
<SENT sid="85" pm="."><plain>Each sub-circuit corresponds to a different E. coli strain carrying a different combination of antibiotic resistance markers (Table S1). </plain></SENT>
<SENT sid="86" pm="."><plain>As an example, in the 3 bit system the input 000 is represented by the antibiotics ampicillin, tetracycline and gentamicin (Figure 1). </plain></SENT>
<SENT sid="87" pm="."><plain>When this input is entered into the system, all cells that are not encoded for responding to 000 will die, but cells carrying the proper plasmid combination, pSB4A5, pSB1T3, and pSEVA621 will not (Figures 1, 2), therefore, a live/dead response (output) is achieved in all sub circuits, the output of each well being one (growth) or zero (failure to grow) (Figure 2 and Figure S2). </plain></SENT>
</text></p><p><text><SENT sid="88" pm="."><plain>ParAlleL uses cellular consortia instead of a single type of cell. </plain></SENT>
<SENT sid="89" pm="."><plain>A similar approach has been developed by Macia et al. (2016, 2017) using eukaryotic cells, and even showing the possibility of generating transient memory. </plain></SENT>
<SENT sid="90" pm="."><plain>However, that approach requires a sophisticated design as it relies on a secreted intermediate molecule (hormone-like) that must be kept at the right production level, and that should be previously activated by X (Repressor) and Y (SsrA-tagged protein) degradation. </plain></SENT>
<SENT sid="91" pm="."><plain>Furthermore, since the output of the circuit is distributed among different consortia, the concentration of the secreted molecule can differ according to the number of cells simultaneously producing it. </plain></SENT>
<SENT sid="92" pm="."><plain>This kind of multicellular approach and others based on single cells require sophisticated wiring design (Silva-Rocha and de Lorenzo, 2008; Siuti et al., 2013; Macia et al., 2016, 2017). </plain></SENT>
<SENT sid="93" pm="."><plain>By contrast, ParAlleL requires very minimal genetic modification and little tuning to obtain reliable outputs (Figures 2, 3). </plain></SENT>
</text></p><p><text><SENT sid="94" pm="."><plain>The implementation of ParAlleL presented here is simple, but its further development to useful applications presents a number of challenges. </plain></SENT>
<SENT sid="95" pm="."><plain>Firstly, expansion to 4 bits and beyond would require further well-behaved and non-cross-reacting antibiotic resistance markers, and would probably lead to even greater disparities in growth rate than those observed in the three-bit system (Figure S1). </plain></SENT>
<SENT sid="96" pm="."><plain>This could be addressed, and the flexibility and usefulness of the system increased, by moving away from direct use of antibiotics to a system using tightly controlled inducible promoters, each controlling a lethal “death gene,” such as ccdB, with either the presence or absence of the inducer leading to lethality. </plain></SENT>
<SENT sid="97" pm="."><plain>In this way the system could be made to respond to different combinations of useful inputs, for example in the construction of multiplexed biosensors. </plain></SENT>
</text></p><p><text><SENT sid="98" pm="."><plain>However, to achieve the full potential of ParAlleL, it will be necessary to generate layered systems in which the output from one layer serves as input to another layer. </plain></SENT>
<SENT sid="99" pm="."><plain>This might be accomplished via quorum sensing, but the implementation would be rather complex and limited. </plain></SENT>
<SENT sid="100" pm="."><plain>A more attractive option is to transfer the same concept, using a set of agents which each responds to a single combination of inputs, to an alternative system. </plain></SENT>
<SENT sid="101" pm="."><plain>For example, the concept could be implemented in a cell-free system, in which inputs may be present as small molecules interacting with transcription factors, or as DNA or RNA oligonucleotides. </plain></SENT>
<SENT sid="102" pm="."><plain>Outputs from the first layer, in the form of DNA or RNA molecules generated by DNA replication (e.g., PCR) or transcription, could then serve as inputs to a second layer. </plain></SENT>
<SENT sid="103" pm="."><plain>For example, in a PCR-based approach, one of a set of templates would be amplified based on which primer oligonucleotides were added; the output PCR product could then be processed to generate another set of oligonucleotides, or used directly to initiate priming on a second set of templates via formation of three-way junctions. </plain></SENT>
<SENT sid="104" pm="."><plain>Alternatively, in a transcription-based system, output RNAs from a first layer computation could act as guide RNAs directing binding of CRISPR-based transcription factors to further templates to generate a new set of guide RNAs, eventually leading to production of an output RNA such as a mRNA leading to translation of a visually detectable signal. </plain></SENT>
</text></p><p><text><SENT sid="105" pm="."><plain>Another interesting aspect of ParAlleL is that, since the final output is the result of a population-based calculation, these systems may show a level of “Byzantine fault tolerance,” allowing reliable outcomes even in the face of levels of noise which are unavoidable in biological systems. </plain></SENT>
<SENT sid="106" pm="."><plain>This would represent a new level of robustness in biological computation systems. </plain></SENT>
</text></p></sec></SecTag><sec sec-type="data-availability" id="s5"><title><text><SENT sid="107" pm="."><plain>Data Availability </plain></SENT>
</text></title><p><text><SENT sid="108" pm="."><plain>All datasets generated for this study are included in the manuscript and/or the supplementary files. </plain></SENT>
<SENT sid="109" pm="."><plain>More Data is available at <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.7488/ds/2497">https://doi.org/10.7488/ds/2497</ext-link>. </plain></SENT>
</text></p></sec><SecTag type="AUTH_CONT"><sec id="s6"><title><text><SENT sid="110" pm="."><plain>Author Contributions </plain></SENT>
</text></title><p><text><SENT sid="111" pm="."><plain>FM and CF conceived and designed the experiments. </plain></SENT>
<SENT sid="112" pm="."><plain>FM and BL performed the experiments. </plain></SENT>
<SENT sid="113" pm="."><plain>FM and CF analyzed and validated the data. </plain></SENT>
<SENT sid="114" pm="."><plain>FM and CF contributed reagents, materials, and analysis tools. </plain></SENT>
<SENT sid="115" pm="."><plain>FM and CF wrote—reviewed &amp; edited the manuscript. </plain></SENT>
</text></p><sec><title><text><SENT sid="116" pm="."><plain>Conflict of Interest Statement </plain></SENT>
</text></title><p><text><SENT sid="117" pm="."><plain>The authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest. </plain></SENT>
</text></p></sec></sec></SecTag></body><back><SecTag type="ACK_FUND"><ack><p><text4fund><text><SENT sid="118" pm="."><plain>The authors acknowledge the valuable assistance of Dr. Louise Horsfall for supplying the pMO9075 plasmid and Dr. Aitor De las Heras for supplying the pSEVA631 plasmid. </plain></SENT>
<SENT sid="119" pm="."><plain>A pre-print version of the manuscript has been published on bioRxiv (Millacura et al., 2018). </plain></SENT>
</text></text4fund></p></ack></SecTag><fn-group><SecTag type="ACK_FUND"><fn fn-type="financial-disclosure"><p><text4fund><text><SENT sid="120" pm="."><plain>Funding. This work was supported by CONICYT/BC-PhD 72170403 (FM). </plain></SENT>
</text></text4fund></p></fn></SecTag></fn-group><SecTag type="SUPPL"><sec sec-type="supplementary-material" id="s7"><title>Supplementary Material</title><p>The Supplementary Material for this article can be found online at: <ext-link ext-link-type="uri" xlink:href="https://www.frontiersin.org/articles/10.3389/fbioe.2019.00046/full#supplementary-material">https://www.frontiersin.org/articles/10.3389/fbioe.2019.00046/full#supplementary-material</ext-link></p><supplementary-material content-type="local-data" id="SM1"><media xlink:href="Data_Sheet_1.pdf"><caption><p><text><SENT sid="121" pm="."><plain>Click here for additional data file. </plain></SENT>
</text></p></caption></media></supplementary-material></sec></SecTag><SecTag type="REF"><ref-list><title>References</title><ref id="B1"><text><SENT sid="122" pm="."><plain>AndrianantoandroE.BasuS.KarigD. </plain></SENT>
<SENT sid="123" pm="."><plain>K.WeissR. (2006). Synthetic biology: new engineering rules for an emerging discipline. Mol. </plain></SENT>
<SENT sid="124" pm="."><plain>Syst. </plain></SENT>
<SENT sid="125" pm="."><plain>Biol. 2:2006.0028. 10.1038/msb4100073<?supplied-pmid 16738572?>16738572 </plain></SENT>
</text></ref><ref id="B2"><text><SENT sid="126" pm="."><plain>BrennerM. </plain></SENT>
<SENT sid="127" pm="."><plain>J.ChoJ. </plain></SENT>
<SENT sid="128" pm="."><plain>H.WongN. </plain></SENT>
<SENT sid="129" pm="."><plain>M. </plain></SENT>
<SENT sid="130" pm="."><plain>L.WongW. </plain></SENT>
<SENT sid="131" pm="."><plain>W. (2018). Synthetic biology: immunotherapy by design. Annu. </plain></SENT>
<SENT sid="132" pm="."><plain>Rev. </plain></SENT>
<SENT sid="133" pm="."><plain>Biomed. </plain></SENT>
<SENT sid="134" pm="."><plain>Eng. 20, 95–118. 10.1146/annurev-bioeng-062117-121147<?supplied-pmid 29345976?>29345976 </plain></SENT>
</text></ref><ref id="B3"><text><SENT sid="135" pm="."><plain>ChungC. </plain></SENT>
<SENT sid="136" pm="."><plain>T.NiemelaS. </plain></SENT>
<SENT sid="137" pm="."><plain>L.MillerR. </plain></SENT>
<SENT sid="138" pm="."><plain>H. (1989). One-step preparation of competent Escherichia coli: transformation and storage of bacterial cells in the same solution. Proc. </plain></SENT>
<SENT sid="139" pm="."><plain>Natl. </plain></SENT>
<SENT sid="140" pm="."><plain>Acad. </plain></SENT>
<SENT sid="141" pm="."><plain>Sci. </plain></SENT>
<SENT sid="142" pm="."><plain>U.S.A. 86, 2172–2175. 10.1073/pnas.86.7.2172<?supplied-pmid 2648393?>2648393 </plain></SENT>
</text></ref><ref id="B4"><text><SENT sid="143" pm="."><plain>KellerK. </plain></SENT>
<SENT sid="144" pm="."><plain>L.WallJ. </plain></SENT>
<SENT sid="145" pm="."><plain>D.ChhabraS. (2011). Methods for engineering sulfate reducing bacteria of the genus Desulfovibrio, in Methods in Enzymology. </plain></SENT>
<SENT sid="146" pm="."><plain>Vol. </plain></SENT>
<SENT sid="147" pm="."><plain>497. ed VoigtC. (California, CA: Academic Press), 503–517. </plain></SENT>
</text></ref><ref id="B5"><text><SENT sid="148" pm="."><plain>MaciaJ.ManzoniR.CondeN.UrriosA.de NadalE.SoléR.. </plain></SENT>
<SENT sid="149" pm="."><plain>(2016). Implementation of complex biological logic circuits using spatially distributed multicellular consortia. PLoS Comput. </plain></SENT>
<SENT sid="150" pm="."><plain>Biol. 12:e1004685. 10.1371/journal.pcbi.1004685<?supplied-pmid 26829588?>26829588 </plain></SENT>
</text></ref><ref id="B6"><text><SENT sid="151" pm="."><plain>MaciaJ.VidiellaB.SoléR. </plain></SENT>
<SENT sid="152" pm="."><plain>V. (2017). Synthetic associative learning in engineered multicellular consortia. J. R. </plain></SENT>
<SENT sid="154" pm="."><plain>Soc. </plain></SENT>
<SENT sid="155" pm="."><plain>Interface 14:20170158. 10.1098/rsif.2017.0158<?supplied-pmid 28404872?>28404872 </plain></SENT>
</text></ref><ref id="B7"><text><SENT sid="156" pm="."><plain>MillacuraF. </plain></SENT>
<SENT sid="157" pm="."><plain>A.LargeyB.FrenchC. </plain></SENT>
<SENT sid="158" pm="."><plain>E. (2018). BioLogic, a parallel approach to cell-based logic gates. bioRxiv [Preprint]. 10.1101/303032 </plain></SENT>
</text></ref><ref id="B8"><text><SENT sid="159" pm="."><plain>NielsenA. </plain></SENT>
<SENT sid="160" pm="."><plain>A.VoigtC. </plain></SENT>
<SENT sid="161" pm="."><plain>A. (2014). Multi-input CRISPR/Cas genetic circuits that interface host regulatory networks. Mol. </plain></SENT>
<SENT sid="162" pm="."><plain>Syst. </plain></SENT>
<SENT sid="163" pm="."><plain>Biol. 10:763. 10.15252/msb.20145735<?supplied-pmid 25422271?>25422271 </plain></SENT>
</text></ref><ref id="B9"><text><SENT sid="164" pm="."><plain>RegotS.MaciaJ.CondeN.FurukawaK.KjellénJ.PeetersT.. </plain></SENT>
<SENT sid="165" pm="."><plain>(2011). Distributed biological computation with multicellular engineered networks. Nature 469, 207–211. 10.1038/nature09679<?supplied-pmid 21150900?>21150900 </plain></SENT>
</text></ref><ref id="B10"><text><SENT sid="166" pm="."><plain>RoquetN.SoleimanyA. </plain></SENT>
<SENT sid="167" pm="."><plain>P.FerrisA. </plain></SENT>
<SENT sid="168" pm="."><plain>C.AaronsonS.LuT. </plain></SENT>
<SENT sid="169" pm="."><plain>K. (2016). Synthetic recombinase-based state machines in living cells. Science 353:aad8559. 10.1126/science.aad8559<?supplied-pmid 27463678?>27463678 </plain></SENT>
</text></ref><ref id="B11"><text><SENT sid="170" pm="."><plain>ShipmanS. </plain></SENT>
<SENT sid="171" pm="."><plain>L.NivalaJ.MacklisJ. </plain></SENT>
<SENT sid="172" pm="."><plain>D.ChurchG. </plain></SENT>
<SENT sid="173" pm="."><plain>M. (2017). CRISPR–Cas encoding of a digital movie into the genomes of a population of living bacteria. Nature 547, 345–349. 10.1038/nature23017<?supplied-pmid 28700573?>28700573 </plain></SENT>
</text></ref><ref id="B12"><text><SENT sid="174" pm="."><plain>Silva-RochaR.de LorenzoV. (2008). Mining logic gates in prokaryotic transcriptional regulation networks. FEBS Lett. 582, 1237–1244. 10.1016/j.febslet.2008.01.060<?supplied-pmid 18275855?>18275855 </plain></SENT>
</text></ref><ref id="B13"><text><SENT sid="175" pm="."><plain>Silva-RochaR.Martínez-GarcíaE.CallesB.ChavarríaM.Arce-RodríguezA.de Las HerasA.. </plain></SENT>
<SENT sid="176" pm="."><plain>(2012). The Standard European Vector Architecture (SEVA): a coherent platform for the analysis and deployment of complex prokaryotic phenotypes. Nucleic Acids Res. 41, D666–D675. 10.1093/nar/gks1119<?supplied-pmid 23180763?>23180763 </plain></SENT>
</text></ref><ref id="B14"><text><SENT sid="177" pm="."><plain>SiutiP.YazbekJ.LuT. </plain></SENT>
<SENT sid="178" pm="."><plain>K. (2013). Synthetic circuits integrating logic and memory in living cells. Nat. </plain></SENT>
<SENT sid="179" pm="."><plain>Biotechnol. 31, 448–452. 10.1038/nbt.2510<?supplied-pmid 23396014?>23396014 </plain></SENT>
</text></ref></ref-list></SecTag></back></article>
