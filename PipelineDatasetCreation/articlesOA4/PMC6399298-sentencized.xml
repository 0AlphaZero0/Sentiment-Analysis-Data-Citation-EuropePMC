<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN" "JATS-archivearticle1.dtd"> 
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?><?DTDIdentifier.IdentifierType public?><?SourceDTD.DTDName A++V2.4.dtd?><?SourceDTD.Version 2.4?><?ConverterInfo.XSLTName springer2nlmx2.xsl?><?ConverterInfo.Version 1?><front><journal-meta><journal-id journal-id-type="nlm-ta">Nat Commun</journal-id><journal-id journal-id-type="iso-abbrev">Nat Commun</journal-id><journal-title-group><journal-title>Nature Communications</journal-title></journal-title-group><issn pub-type="epub">2041-1723</issn><publisher><publisher-name>Nature Publishing Group UK</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">6399298</article-id><article-id pub-id-type="publisher-id">9027</article-id><article-id pub-id-type="doi">10.1038/s41467-019-09027-x</article-id><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title><SecTag type="TITLE"><text><SENT sid="0" pm="."><plain>Deep convolutional neural networks for accurate somatic mutation detection </plain></SENT>
</text></SecTag></article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Sahraeian</surname><given-names>Sayed Mohammad Ebrahim</given-names></name><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author"><name><surname>Liu</surname><given-names>Ruolin</given-names></name><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author"><name><surname>Lau</surname><given-names>Bayo</given-names></name><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author"><name><surname>Podesta</surname><given-names>Karl</given-names></name><xref ref-type="aff" rid="Aff2">2</xref></contrib><contrib contrib-type="author"><name><surname>Mohiyuddin</surname><given-names>Marghoob</given-names></name><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author" corresp="yes"><name><surname>Lam</surname><given-names>Hugo Y. K.</given-names></name><address><email>hugo.lam@roche.com</email></address><xref ref-type="aff" rid="Aff1">1</xref></contrib><aff id="Aff1"><label>1</label>Roche Sequencing Solutions, Belmont, CA 94002 USA </aff><aff id="Aff2"><label>2</label>Microsoft Azure, Dublin 18, D18 P521 Ireland </aff></contrib-group><pub-date pub-type="epub"><day>4</day><month>3</month><year>2019</year></pub-date><pub-date pub-type="pmc-release"><day>4</day><month>3</month><year>2019</year></pub-date><pub-date pub-type="collection"><year>2019</year></pub-date><volume>10</volume><elocation-id>1041</elocation-id><history><date date-type="received"><day>14</day><month>11</month><year>2018</year></date><date date-type="accepted"><day>14</day><month>2</month><year>2019</year></date></history><permissions><copyright-statement>© The Author(s) 2019</copyright-statement><license license-type="OpenAccess"><license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The images or other third party material in this article are included in the article’s Creative Commons license, unless indicated otherwise in a credit line to the material. If material is not included in the article’s Creative Commons license and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this license, visit <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>.</license-p></license></permissions><abstract id="Abs1"><p id="Par1"><SecTag type="ABS"><text><SENT sid="1" pm="."><plain>Accurate detection of somatic mutations is still a challenge in cancer analysis. </plain></SENT>
<SENT sid="2" pm="."><plain>Here we present NeuSomatic, the first convolutional neural network approach for somatic mutation detection, which significantly outperforms previous methods on different sequencing platforms, sequencing strategies, and tumor purities. </plain></SENT>
<SENT sid="3" pm="."><plain>NeuSomatic summarizes sequence alignments into small matrices and incorporates more than a hundred features to capture mutation signals effectively. </plain></SENT>
<SENT sid="4" pm="."><plain>It can be used universally as a stand-alone somatic mutation detection method or with an ensemble of existing methods to achieve the highest accuracy. </plain></SENT>
</text></SecTag></p></abstract><abstract id="Abs2" abstract-type="web-summary"><p id="Par2"><SecTag type="ABS"><text><SENT sid="5" pm="."><plain>Somatic mutations are crucial to the understanding of cancer genesis, progression, and treatment, but are still challenging to detect. </plain></SENT>
<SENT sid="6" pm="."><plain>Here the authors present NeuSomatic, a convolutional neural network approach for accurate somatic mutation detection across various sequencing scenarios. </plain></SENT>
</text></SecTag></p></abstract><custom-meta-group><custom-meta><meta-name>issue-copyright-statement</meta-name><meta-value>© The Author(s) 2019</meta-value></custom-meta></custom-meta-group></article-meta></front><body><SecTag type="INTRO"><sec id="Sec1" sec-type="introduction"><title><text><SENT sid="7" pm="."><plain>Introduction </plain></SENT>
</text></title><p id="Par3"><text><SENT sid="8" pm="."><plain>Somatic mutations are critical signatures in cancer genesis, progression, and treatment. </plain></SENT>
<SENT sid="9" pm="."><plain>Accurate detection of somatic mutations is challenging due to tumor-normal cross contamination, tumor heterogeneity, sequencing artifacts, and coverage. </plain></SENT>
<SENT sid="10" pm="."><plain>In general, effectively filtering false-positive calls, which are introduced by the aforementioned issues, and precisely keeping hard-to-catch true-positive calls, which may occur with low allele-frequency (AF) or occur in low-complexity regions, are crucial for an accurate somatic mutation detection algorithm. </plain></SENT>
</text></p><p id="Par4"><text><SENT sid="11" pm="."><plain>To date, a range of tools have been developed to address the somatic mutation detection problem including MuTect21, MuSE2, VarDict3, VarScan24, Strelka25, and SomaticSniper6. </plain></SENT>
<SENT sid="12" pm="."><plain>These tools employ different statistical and algorithmic approaches, which perform well in certain cancer or sample types for which they were designed; however, they are limited in generalization to a broader range of sample types and sequencing technologies and thus may exhibit suboptimal accuracy in such scenarios7–9. </plain></SENT>
<SENT sid="13" pm="."><plain>In our earlier work, SomaticSeq10, we used an ensemble approach to maximize the sensitivity by integrating algorithmically orthogonal methods. </plain></SENT>
<SENT sid="14" pm="."><plain>It also used machine learning to integrate almost a hundred features to keep the precision high, leading to an accuracy improvement over all individual methods. </plain></SENT>
<SENT sid="15" pm="."><plain>Nevertheless, the machine-learning backbone used in SomaticSeq relies on a set of extracted features for the mutations’ locations. </plain></SENT>
<SENT sid="16" pm="."><plain>As a result, it cannot fully capture the raw information in the genomic contexts of the somatic mutations to further distinguish true somatic mutations from background errors, limiting its performance in challenging situations, such as low-complexity regions and low tumor purity. </plain></SENT>
</text></p><p id="Par5"><text><SENT sid="17" pm="."><plain>Here we address the limitation of generalizability and complexity of statistical modeling of tumor sequencing data by leveraging deep Convolutional Neural Networks (CNNs). </plain></SENT>
<SENT sid="18" pm="."><plain>CNNs have recently shown significant performance in classification problems from different domains including germline variant calling11–13 and skin cancer classification14. </plain></SENT>
<SENT sid="19" pm="."><plain>Even so, applying CNNs to the challenging problem of somatic mutation detection has not been explored. </plain></SENT>
<SENT sid="20" pm="."><plain>The only previous deep learning based attempt15 was to apply a six-layer fully connected neural network to a set of manually extracted features. </plain></SENT>
<SENT sid="21" pm="."><plain>This approach lacks the power provided by the CNN architecture, which is to learn feature representations directly from the raw data using patterns seen in local regions. </plain></SENT>
<SENT sid="22" pm="."><plain>Besides, due to the complexity of fully connected networks, it has less generalizability and scalability as seen in CNNs. </plain></SENT>
</text></p><p id="Par6"><text><SENT sid="23" pm="."><plain>We introduce NeuSomatic, the first CNN-based approach for somatic mutation detection that can effectively leverage signals derived from sequence alignment, as well as from other methods to accurately identify somatic mutations. </plain></SENT>
<SENT sid="24" pm="."><plain>Unlike other deep learning based methods that are focused on germline variants, NeuSomatic is addressing a bigger unmet need in terms of accuracy due to the complexity of tumor samples. </plain></SENT>
<SENT sid="25" pm="."><plain>It can effectively capture important mutation signals directly from the raw data and consistently achieve high accuracy for different sequencing technologies, sample purities, and sequencing strategies such as whole-genome vs. target enrichment. </plain></SENT>
</text></p></sec></SecTag><SecTag type="RESULTS"><sec id="Sec2" sec-type="results"><title><text><SENT sid="26" pm="."><plain>Results </plain></SENT>
</text></title><sec id="Sec3"><title><text><SENT sid="27" pm="."><plain>NeuSomatic overview </plain></SENT>
</text></title><p id="Par7"><text><SENT sid="28" pm="."><plain>The inputs to NeuSomatic’s network are candidate somatic mutations identified by scanning the sequence alignments for the tumor sample as well as the matched normal sample (Fig. 1; Supplementary Figs. 1 and 2). </plain></SENT>
<SENT sid="29" pm="."><plain>Somatic mutations reported by other methods can also be included in this list of candidates. </plain></SENT>
<SENT sid="30" pm="."><plain>For each candidate locus, we construct a 3-dimensional feature matrix M (of size k × 5 × 32), consisting of k channels each of size 5 × 32, to capture signals from the region centered around that locus. </plain></SENT>
<SENT sid="31" pm="."><plain>Each channel of the matrix M has five rows representing the four nucleotide bases as well as the gapped base (‘−’), and 32 columns representing the alignment columns around the candidate location.Fig. 1NeuSomatic overview. a Toy example of input matrix preparation for a given candidate somatic SNV. </plain></SENT>
<SENT sid="32" pm="."><plain>Sequence alignment information in a window of seven bases around the candidate somatic mutation is extracted. </plain></SENT>
<SENT sid="33" pm="."><plain>The reference sequence is then augmented by adding gaps to account for insertions in the reads. </plain></SENT>
<SENT sid="34" pm="."><plain>The augmented alignment is then summarized into the reference matrix, the tumor count matrix, and the normal count matrix. </plain></SENT>
<SENT sid="35" pm="."><plain>The count matrices record the number of A/C/G/T and gap (‘-‘) characters in each column of the alignment, while the reference matrix records the reference bases in each column. </plain></SENT>
<SENT sid="36" pm="."><plain>The count matrices are then normalized by coverage to reflect base frequencies in each column. </plain></SENT>
<SENT sid="37" pm="."><plain>Separate channels are reserved to record the tumor and normal coverages. b The input 3-dimensional matrix and the proposed NeuSomatic network architecture. </plain></SENT>
<SENT sid="38" pm="."><plain>The input matrix consists of reference channel, tumor and normal-frequency channels, coverage and position channels, followed by several channels summarizing the alignment features. </plain></SENT>
<SENT sid="39" pm="."><plain>When used in ensemble mode, NeuSomatic also includes additional channels for other individual methods features. </plain></SENT>
<SENT sid="40" pm="."><plain>NeuSomatic network architecture consists of nine convolutional layers structured in four blocks with shortcut identity connections. </plain></SENT>
<SENT sid="41" pm="."><plain>We use two softmax classifiers and one regressor on the final layer to predict the mutation type, size, and position </plain></SENT>
</text></p><p id="Par8"><text><SENT sid="42" pm="."><plain>The first three channels, respectively, are the reference, tumor-frequency, and normal-frequency channels that summarize the reference bases around the candidate locus, as well as the frequency of different bases in that region. </plain></SENT>
<SENT sid="43" pm="."><plain>We augment the reference sequence around the candidate locus with gaps corresponding to the insertions in the read alignments (Fig. 1a; Supplementary Figs. 1 and 2) in order to capture the insertions. </plain></SENT>
<SENT sid="44" pm="."><plain>Thus, each column of tumor and normal-frequency matrices represents the frequency of A/C/G/T/gap bases in the corresponding multiple sequence alignment (MSA) column of the tumor and normal samples, respectively. </plain></SENT>
<SENT sid="45" pm="."><plain>The remaining channels summarize other features, such as coverage, base quality, mapping quality, strand-bias, and clipping information for reads supporting different bases. </plain></SENT>
<SENT sid="46" pm="."><plain>If NeuSomatic is used in the ensemble mode, we also use additional channels for features reported by the individual somatic mutation detection methods. </plain></SENT>
<SENT sid="47" pm="."><plain>With this concise, yet comprehensive structured representation, NeuSomatic can use the necessary information in tumor, normal, and reference to differentiate difficult to catch somatic mutations with low AF from germline variants, as well as sequencing errors. </plain></SENT>
<SENT sid="48" pm="."><plain>This design also enables the use of convolutional filters in the CNN to capture contextual patterns in the sub-blocks of the matrix. </plain></SENT>
</text></p><p id="Par9"><text><SENT sid="49" pm="."><plain>To compare to other CNN approaches used in genomics problems, DeepVariant11 uses read pileup as the input for germline variant calling. </plain></SENT>
<SENT sid="50" pm="."><plain>In contrast, we use base frequency summary for each column as the input to our network. </plain></SENT>
<SENT sid="51" pm="."><plain>This simplifies the CNN structure, allowing a substantially more efficient implementation. </plain></SENT>
<SENT sid="52" pm="."><plain>For example, DeepVariant takes ~1000 CPU core-hours to call germline variants for a 30× whole-genome sample16, whereas the stand-alone version of NeuSomatic can detect somatic mutations from 30× tumor-normal pair samples in ~156 CPU core-hours, despite handling two (tumor-normal) samples instead of one and looking for candidates at lower somatic AFs than germline 50 or 100% AF. </plain></SENT>
<SENT sid="53" pm="."><plain>Another germline variant calling method, Clairvoyante12, uses three channels to summarize base counts for allele counts, deletions, and insertions at the center of the window. </plain></SENT>
<SENT sid="54" pm="."><plain>In contrast, we summarize all these events in a single base frequency matrix using the reference augmentation approach described earlier, which can clearly represent all the insertion and deletion (INDEL) events across the window. </plain></SENT>
</text></p><p id="Par10"><text><SENT sid="55" pm="."><plain>NeuSomatic employs a novel CNN structure that predicts the type and length of a candidate somatic mutation given the feature matrix M (Fig. 1b). </plain></SENT>
<SENT sid="56" pm="."><plain>The proposed CNN consists of nine convolutional layers structured in four blocks with shortcut identity connections inspired by ResNet17 but with a different formation to adapt to the proposed input structure. </plain></SENT>
<SENT sid="57" pm="."><plain>We use two softmax classifiers and one regressor on the final layer. </plain></SENT>
<SENT sid="58" pm="."><plain>The first classifier identifies whether the candidate is a non-somatic call, SNV, insertion, or deletion. </plain></SENT>
<SENT sid="59" pm="."><plain>The second classifier predicts the length of the somatic mutation with four classes (0 indicating non-somatic, or lengths from 1, 2, or greater than 2), and the regressor predicts the location of the somatic mutation. </plain></SENT>
<SENT sid="60" pm="."><plain>Using the output of these classifiers we identify the set of somatic mutations. </plain></SENT>
<SENT sid="61" pm="."><plain>If the lengths of INDELs are predicted to be larger than 2, we perform a simple post-processing step on reads overlapping that position to resolve the INDEL sequence from the read alignment CIGAR string. </plain></SENT>
<SENT sid="62" pm="."><plain>This has been shown to perform well for data generated by Illumina sequencers. </plain></SENT>
<SENT sid="63" pm="."><plain>For higher error rate sequencing data, more complex local realignment post-processing is conducted to resolve the INDEL sequence. </plain></SENT>
</text></p><p id="Par11"><text><SENT sid="64" pm="."><plain>Since NeuSomatic can be used in stand-alone and ensemble modes, we use NeuSomatic-S to denote the stand-alone mode, while reserving NeuSomatic to denote the ensemble mode. </plain></SENT>
<SENT sid="65" pm="."><plain>We compared NeuSomatic and NeuSomatic-S against the state-of-the-art somatic mutation detection methods including MuTect21, MuSE2, SomaticSniper6, Strelka25, VarDict3, and VarScan24, and against the ensemble approach, SomaticSeq10. </plain></SENT>
<SENT sid="66" pm="."><plain>We compared and contrasted performance using multiple synthetic and real datasets. </plain></SENT>
<SENT sid="67" pm="."><plain>We report below, the synthetic datasets in increasing order of somatic mutation detection difficulty considering the AF of somatic mutation in the datasets. </plain></SENT>
</text></p></sec><sec id="Sec4"><title><text><SENT sid="68" pm="."><plain>Comparison on the Platinum sample mixture dataset </plain></SENT>
</text></title><p id="Par12"><text><SENT sid="69" pm="."><plain>For the first synthetic dataset, as in previous studies5,10 we mixed two normal Platinum Genomes18 samples, NA12877 and NA12878, at 70:30, 50:50, and 25:75 tumor purity ratios to create three tumor contamination profiles, and at 5:95 ratio to create a contaminated normal sample. </plain></SENT>
<SENT sid="70" pm="."><plain>We also included a test with 100% pure normal and 50% pure tumor. </plain></SENT>
<SENT sid="71" pm="."><plain>We used the germline variants in NA12878, which were reference calls in NA12877 as truth set for the evaluation. </plain></SENT>
<SENT sid="72" pm="."><plain>Both NeuSomatic-S and NeuSomatic significantly outperformed all other methods (Fig. 2 and Supplementary Table 1). </plain></SENT>
<SENT sid="73" pm="."><plain>NeuSomatic’s performance improvement over other approaches increased with lower, more challenging tumor purities (25:75 mixture). </plain></SENT>
<SENT sid="74" pm="."><plain>In summary, NeuSomatic yielded up to 99.6 and 97.2% F1-scores for SNVs and INDELs, respectively, overall and an improvement of up to 7.2% over the best method in the lowest sample purity for this dataset. </plain></SENT>
<SENT sid="75" pm="."><plain>For the sample with 50% tumor purity, reducing normal purity from 100 to 95% had minor impact on NeuSomatic’s performance (&lt;0.3%), whereas it caused ~3% decrease in SomaticSeq accuracy.Fig. 2Performance analysis of the Platinum two sample mixture dataset. </plain></SENT>
<SENT sid="76" pm="."><plain>In this dataset, four tumor and normal purity scenarios (50% T:100% N, 70% T:95% N, 50% T:95% N, and 25% T:95% N) are used. a Precision-recall analysis: the confidence or quality scores are used to derive the precision-recall curves. </plain></SENT>
<SENT sid="77" pm="."><plain>The highest F1-score achieved by each algorithm is printed on the curve and marked with a solid circle. b Performance analysis of INDEL accuracy (F1-score) for different INDEL sizes </plain></SENT>
</text></p></sec><sec id="Sec5"><title><text><SENT sid="78" pm="."><plain>Comparison on the ICGC-TCGA DREAM challenge datasets </plain></SENT>
</text></title><p id="Par13"><text><SENT sid="79" pm="."><plain>For the second synthetic dataset, we used the ICGC-TCGA DREAM Challenge Stage 3 and Stage 4 datasets19, which were constructed by computationally spiking mutations into a healthy genome of a paired normal sample with different AFs (See Methods). </plain></SENT>
<SENT sid="80" pm="."><plain>We mixed the tumor and normal samples to create five tumor/normal purity senarios. </plain></SENT>
<SENT sid="81" pm="."><plain>NeuSomatic-S outperformed all other stand-alone methods for both Stage 3 and Stage 4 datasets by over 8% for SNVs and 22% for INDELs on average (Figs. 3 and 4; Supplementary Tables 2 and 3). </plain></SENT>
<SENT sid="82" pm="."><plain>This performance improvement increased with decreasing tumor purity. </plain></SENT>
<SENT sid="83" pm="."><plain>We further observed that NeuSomatic (the ensemble mode) clearly outperformed both SomaticSeq and NeuSomatic-S, even though NeuSomatic-S still outperformed SomaticSeq in more challenging scenarios, such as SNVs in the 25:75 mixture and INDELs in the 25:75 and 50:50 mixtures. </plain></SENT>
<SENT sid="84" pm="."><plain>In summary, NeuSomatic yielded up to 96.2 and 93.5% F1-scores for SNVs and INDELs, respectively, overall and an improvement of up to 34.6% over the best method in the lowest sample purity. </plain></SENT>
<SENT sid="85" pm="."><plain>For the sample with 50% tumor purity, reducing normal purity from 100 to 95% had minor impact on NeuSomatic’s performance (~1.2% on average), whereas SomaticSeq and Strelka2 had &gt;3% decrease in F1-score.Fig. 3Performance analysis of the DREAM Stage 3 dataset. </plain></SENT>
<SENT sid="86" pm="."><plain>In this dataset, five tumor and normal purity scenarios (100% T:100% N, 50% T:100% N, 70% T:95% N, 50% T:95% N, and 25% T:95% N) are used. a Precision-recall analysis: the confidence or quality scores are used to derive the precision-recall curves. </plain></SENT>
<SENT sid="87" pm="."><plain>The highest F1-score achieved by each algorithm is printed on the curve and marked with a solid circle. b Performance analysis of INDEL accuracy (F1-score) for different INDEL sizesFig. 4Performance analysis of the DREAM Stage 4 dataset. </plain></SENT>
<SENT sid="88" pm="."><plain>In this dataset, five tumor and normal purity scenarios (100% T:100% N, 50% T:100% N, 70% T:95% N, 50% T:95% N, and 25% T:95% N) are used. a Precision-recall analysis: the confidence or quality scores are used to derive the precision-recall curves. </plain></SENT>
<SENT sid="89" pm="."><plain>The highest F1-score achieved by each algorithm is printed on the curve and marked with a solid circle. b Performance analysis of INDEL accuracy (F1-score) for different INDEL sizes </plain></SENT>
</text></p></sec><sec id="Sec6"><title><text><SENT sid="90" pm="."><plain>Comparison on the Platinum tumor spike dataset </plain></SENT>
</text></title><p id="Par14"><text><SENT sid="91" pm="."><plain>For the third synthetic dataset, as in previous studies1,10, we constructed a tumor sample by spiking reads from NA12878 into NA12877 in variant positions of NA12878 with spike in frequencies sampled from a binomial distribution with means [0.05, 0.1, 0.2, 0.3] and used an independent set of NA12877 reads as pure normal. </plain></SENT>
<SENT sid="92" pm="."><plain>Note that, unlike earlier strategy, which mixed samples in fixed proportions yielding somatic mutations at fixed AFs, this mixing approach generated them at varying AFs ranging from 0.025 to 0.3. </plain></SENT>
<SENT sid="93" pm="."><plain>NeuSomatic yielded 80.9 and 66.7% F1-scores for SNVs and INDELs, respectively, overall and an improvement of up to 4% over the best method (Supplementary Fig. 3; Supplementary Table 4). </plain></SENT>
<SENT sid="94" pm="."><plain>For low AF somatic mutations, the performance improvement was even higher (11% improvement for AF = 0.025 and 8% improvement for AF = 0.05) (Supplementary Fig. 3b). </plain></SENT>
</text></p></sec><sec id="Sec7"><title><text><SENT sid="95" pm="."><plain>Comparison on the whole-exome and targeted panels </plain></SENT>
</text></title><p id="Par15"><text><SENT sid="96" pm="."><plain>To assess the performance of NeuSomatic on different target enrichments, we used a whole-exome and a targeted panel dataset from the Ashkenazi Jewish trio20 (Supplementary Figs. 4 and 5; Supplementary Tables 5 and 6). </plain></SENT>
<SENT sid="97" pm="."><plain>We trained NeuSomatic and SomaticSeq on the whole-exome dataset and applied the trained model on both the whole-exome and the panel. </plain></SENT>
<SENT sid="98" pm="."><plain>For whole-exome, NeuSomatic achieved up to 99.3 and 88.6% F1-scores for SNVs and INDELs, respectively. </plain></SENT>
<SENT sid="99" pm="."><plain>For the targeted panel, NeuSomatic and NeuSomatic-S consistently outperformed other methods with &gt;99.2% F1-score for SNVs. </plain></SENT>
<SENT sid="100" pm="."><plain>Applying the model trained on whole-genome Platinum-mixture data on both target enrichment sets yielded similar performance, which confirmed the robustness of NeuSomatic (Supplementary Figs. 6 and 7). </plain></SENT>
<SENT sid="101" pm="."><plain>Similar to other datasets, for the sample with 50% tumor purity, reducing normal purity from 100 to 95% on whole-exome dataset could minimally reduce NeuSomatic’s F1-score (~0.3% on average), whereas SomaticSeq and Strelka2 had &gt;5% decrease in F1-score. </plain></SENT>
</text></p></sec><sec id="Sec8"><title><text><SENT sid="102" pm="."><plain>Comparison on the PacBio dataset </plain></SENT>
</text></title><p id="Par16"><text><SENT sid="103" pm="."><plain>We further evaluated NeuSomatic’s performance on reads with high error rates, particularly those from the long-read sequencing platforms. </plain></SENT>
<SENT sid="104" pm="."><plain>We used tumor-normal pair samples simulated with 20, 30, and 50% AF somatic mutations based on the raw PacBio reads (Fig. 5, Supplementary Table 7). </plain></SENT>
<SENT sid="105" pm="."><plain>NeuSomatic identified somatic SNVs and INDELs with F1-scores of up to 98.1 and 86.2%, respectively, which outperformed VarDict3 by up to 34.4% for SNVs and up to 53.2% for INDELs. </plain></SENT>
<SENT sid="106" pm="."><plain>This analysis confirms the capability of NeuSomatic in detecting somatic mutations even when the sequence reads have high error rate as in PacBio long raw reads. </plain></SENT>
</text></p></sec><sec id="Sec9"><title><text><SENT sid="107" pm="."><plain>Comparison for different INDEL sizes </plain></SENT>
</text></title><p id="Par17"><text><SENT sid="108" pm="."><plain>It is worth noting that NeuSomatic consistently outperformed other methods for various INDEL sizes in different datasets (Figs. 2b, 3b, 4b, 5b; Supplementary Figs. 3c and 8). </plain></SENT>
<SENT sid="109" pm="."><plain>For large (&gt;50 bases) INDELs, since most of the short reads with somatic INDELs are soft-clipped, the INDEL information is lost in the pileup count matrices. </plain></SENT>
<SENT sid="110" pm="."><plain>For such cases, NeuSomatic benefited from other methods’ predictions, since some of the methods like VarDict and MuTect2 used local assembly for their predictions.Fig. 5Performance analysis of the PacBio dataset. </plain></SENT>
<SENT sid="111" pm="."><plain>In this dataset, three tumor and normal purity scenarios (70% T:95% N, 50% T:95% N, and 25% T:95% N) are used. a Precision-recall analysis: the confidence or quality scores are used to derive the precision-recall curves. </plain></SENT>
<SENT sid="112" pm="."><plain>The highest F1-score achieved by each algorithm is printed on the curve and marked with a solid circle. b Performance analysis of INDEL accuracy (F1-score) for different INDEL sizes </plain></SENT>
</text></p></sec><sec id="Sec10"><title><text><SENT sid="113" pm="."><plain>INDEL type and position accuracy </plain></SENT>
</text></title><p id="Par18"><text><SENT sid="114" pm="."><plain>For all datasets discussed, we also assessed the performance of INDEL calling by different somatic mutation detection methods using the more relaxed criterion of simply predicting the positions of the somatic INDELs correctly (and ignoring the exact INDEL sequence). </plain></SENT>
<SENT sid="115" pm="."><plain>Again, we observed similar superiority of NeuSomatic over other schemes indicating that the main improvements are contributed by the proposed CNN structure and not the post-processing INDEL resolution steps (Supplementary Figs. 9 and 10). </plain></SENT>
</text></p></sec><sec id="Sec11"><title><text><SENT sid="116" pm="."><plain>Read coverage analysis </plain></SENT>
</text></title><p id="Par19"><text><SENT sid="117" pm="."><plain>To evaluate the impact of sequence coverage on different techniques, we downsampled the whole-exome dataset to obtain samples with sequence coverages in the range of 20× and 100× (Fig. 6, Supplementary Fig. 11). </plain></SENT>
<SENT sid="118" pm="."><plain>NeuSomatic consistently outperformed other techniques for different coverages. </plain></SENT>
<SENT sid="119" pm="."><plain>The improvement increased as the problem became more challenging for lower coverages samples. </plain></SENT>
<SENT sid="120" pm="."><plain>In addition, reducing the coverage from 100× to 50× had very minimal impact (~1.5% for SNVs and ~5% for INDELS) on NeuSomatic, whereas SomaticSeq’s F1-score dropped by ~20% for both SNVs and INDELs, and Strelka2’s F1-score dropped by ~13% for SNVs and ~15% for INDELs. </plain></SENT>
<SENT sid="121" pm="."><plain>This analysis revealed both the robustness of NeuSomatic to coverage perturbations, as well as its advantage in challenging scenarios, which could be seen at lower coverages.Fig. 6Performance analysis of the sequence coverage impact on the whole-exome sample mixture dataset. </plain></SENT>
<SENT sid="122" pm="."><plain>In this example, tumor has 50% purity and normal has 95% purity. Y-axis illustrates the highest F1-score achieved by each algorithm for sample alignments coverages ranging from 20× to 100× </plain></SENT>
</text></p></sec><sec id="Sec12"><title><text><SENT sid="123" pm="."><plain>Training robustness </plain></SENT>
</text></title><p id="Par20"><text><SENT sid="124" pm="."><plain>We assessed the robustness of NeuSomatic’s training for specific purity by training and testing on different purities for the DREAM Challenge Stage 3 datasets. </plain></SENT>
<SENT sid="125" pm="."><plain>Supplementary Fig. 12 shows that performance degrades only marginally even when we trained and tested on very different tumor purities. </plain></SENT>
<SENT sid="126" pm="."><plain>We also observed that training using data aggregated from multiple tumor purities was as good as training on the target tumor purity (Supplementary Fig. 12). </plain></SENT>
<SENT sid="127" pm="."><plain>This suggests that a training set incorporating multiple tumor purities is sufficient to get a model, which is robust to tumor purity variation. </plain></SENT>
</text></p></sec><sec id="Sec13"><title><text><SENT sid="128" pm="."><plain>Comparison on real data </plain></SENT>
</text></title><p id="Par21"><text><SENT sid="129" pm="."><plain>In the absence of a high-quality, comprehensive ground truth dataset for somatic mutations21, like the Genome-in-a-Bottle gold set for germline variants22, we would not be able to calculate F1 accuracy outside of synthetic data. </plain></SENT>
<SENT sid="130" pm="."><plain>Fortunately, there are existing datasets with validated somatic mutations we could take to estimate the accuracy performance of NeuSomatic on real data (See Methods for more details on how to extrapolate the F1-score on real data). </plain></SENT>
<SENT sid="131" pm="."><plain>We used two datasets: CLL123, a chronic lymphocytic leukemia patient whole-genome data with 961 validated somatic SNVs, and COLO-82924,25, an immortal metastatic malignant melanoma cell line-derived whole-genome dataset with 454 validated somatic SNVs. </plain></SENT>
<SENT sid="132" pm="."><plain>To evaluate NeuSomatic on these two real WGS samples, we used models trained on the DREAM Challenge Stage 3. </plain></SENT>
<SENT sid="133" pm="."><plain>As shown in Supplementary Tables 8 and 9, NeuSomatic achieved the highest extrapolated F1-score of 99.7 and 93.2%, respectively, for the COLO-829 malignant melanoma sample and the CLL1 chronic lymphocytic leukemia sample. </plain></SENT>
<SENT sid="134" pm="."><plain>We also evaluated NeuSomatic on a TCGA26,27 whole-exome sequencing (WES) sample of colorectal adenocarcinoma (TCGA-AZ-6601), achieving the highest extrapolated F1-score of over 99.6%(Supplementary Table 10). </plain></SENT>
</text></p><p id="Par22"><text><SENT sid="135" pm="."><plain>In order to demonstrate NeuSomatic’s scalability and cost effectiveness on the cloud, we also processed 261 whole-exome sequenced cancer samples (Supplementary Table 11) from TCGA on the Microsoft Azure cloud platform using both the ensemble and stand-alone modes. </plain></SENT>
<SENT sid="136" pm="."><plain>These samples were taken across multiple cancer types including colorectal adenocarcinoma, ovarian serus adenocarcinoma, cervical squamous cell carcinoma, and endocervical adenocarcinoma. </plain></SENT>
<SENT sid="137" pm="."><plain>While the cloud platform enabled us to automatically spin up compute instances on demand, it took, on average, 2.42 hours and 0.72 hours for ensemble and stand-alone modes, respectively, to process each sample. </plain></SENT>
<SENT sid="138" pm="."><plain>Using Azure’s pre-emptible compute instances (the standard H16 instance types were used with 16 cores each) resulted in low per sample processing costs of 0.77 USD and 0.23 USD for the ensemble and stand-alone modes, respectively. </plain></SENT>
<SENT sid="139" pm="."><plain>We also assessed the accuracy of NeuSomatic on these samples by comparing against the 44,270 validated SNPs across these samples, which provided us with recall rates of 98.9 and 97.2% for ensemble and stand-alone modes, respectively. </plain></SENT>
<SENT sid="140" pm="."><plain>Thus, NeuSomatic not only can be used on different sequencing technologies or sequencing strategies but also can be run on a variety of compute platforms including a local HPC cluster and on an elastic cloud compute infrastructure. </plain></SENT>
</text></p></sec></sec></SecTag><SecTag type="DISCUSS"><sec id="Sec14" sec-type="discussion"><title><text><SENT sid="141" pm="."><plain>Discussion </plain></SENT>
</text></title><p id="Par23"><text><SENT sid="142" pm="."><plain>NeuSomatic is the first deep learning based framework for somatic mutation detection, which is high-performing and universal. </plain></SENT>
<SENT sid="143" pm="."><plain>While using the same CNN architecture, it achieves the best accuracy for varying tumor purities across multiple datasets ranging from synthetic to real, across multiple sequencing strategies ranging from whole genome to targeted as well as across multiple sequencing technologies ranging from short reads to high-error long reads. </plain></SENT>
<SENT sid="144" pm="."><plain>Specifically, for low tumor purities and low allelic frequencies, NeuSomatic significantly outperforms other state-of-the-art somatic mutation detection methods, thus demonstrating its capability in addressing the hard problem. </plain></SENT>
<SENT sid="145" pm="."><plain>NeuSomatic utilizes an efficient implementation of convolutional neural networks for solving the somatic mutation detection problem with speed and accuracy. </plain></SENT>
<SENT sid="146" pm="."><plain>It uses a novel summarization of tumor/normal alignment information as a set of input matrices that can effectively capture main signals in the genomic context. </plain></SENT>
<SENT sid="147" pm="."><plain>Training the proposed CNN architecture on these matrices enables learning feature representations directly from the raw data. </plain></SENT>
<SENT sid="148" pm="."><plain>The deep features, learned from observed training data, can accurately identify the important mutation signatures that can differentiate true calls from artifacts introduced by sequencing errors, cross contamination, or coverage biases. </plain></SENT>
<SENT sid="149" pm="."><plain>We believe NeuSomatic advances the state-of-the-art significantly by providing a very broadly applicable approach for somatic mutation detection. </plain></SENT>
</text></p></sec></SecTag><SecTag type="METHODS"><sec id="Sec15"><title><text><SENT sid="150" pm="."><plain>Methods </plain></SENT>
</text></title><sec id="Sec16"><title><text><SENT sid="151" pm="."><plain>ICGC-TCGA DREAM Challenge data </plain></SENT>
</text></title><p id="Par24"><text><SENT sid="152" pm="."><plain>Stage 3 data consist of a normal sample and a tumor sample constructed by computationally spiking 7,903 SNVs and 7,604 INDELs mutations into a healthy genome of the same normal sample with three different AFs of 50, 33, and 20% to create synthetic but realistic tumoral normal pairs. </plain></SENT>
<SENT sid="153" pm="."><plain>Stage 4 data have similar formation, but with 16,268 SNVs and 14,194 INDELs in two subclones of 30 and 15% AF. </plain></SENT>
<SENT sid="154" pm="."><plain>We then constructed an impure normal by mixing 95% normal and 5% tumor reads. </plain></SENT>
<SENT sid="155" pm="."><plain>We also constructed four tumor mixtures by mixing tumor and normal, respectively, at 100:0, 70:30, 50:50, and 25:75 ratios. </plain></SENT>
<SENT sid="156" pm="."><plain>Thus, the somatic mutations across these four tumor mixture ratios have AFs ranging from 5 to 50% for Stage 3 dataset, and 3.75 to 30% for Stage 4 dataset. </plain></SENT>
</text></p></sec><sec id="Sec17"><title><text><SENT sid="157" pm="."><plain>Platinum synthetic tumor data </plain></SENT>
</text></title><p id="Par25"><text><SENT sid="158" pm="."><plain>We downloaded 200× Platinum genomes samples NA12878 and NA12877 and their truth germline variants (v2017-1.0)18 to construct a virtual tumor and normal pair (ENA accession number PRJEB3246). </plain></SENT>
<SENT sid="159" pm="."><plain>For the normal, we downsampled NA12877 to 50×. </plain></SENT>
<SENT sid="160" pm="."><plain>For tumor, we constructed three 50× in silico mixture samples with 70, 50, and 25% tumor purities, by independently downsampling NA12877, respectively, at 15×, 25×, and 37.5×, and mixing each with downsampled NA12878 at 35×, 25×, and 12.5×. </plain></SENT>
<SENT sid="161" pm="."><plain>We use the heterozygous and homozygous variants in NA12878, which are reference calls in NA12877 and are at least five bases apart from NA12877 variants and 300 base apart from each other as the truth set for the training and evaluation steps (1,103,285 SNVs and 174,754 INDELs). </plain></SENT>
<SENT sid="162" pm="."><plain>Thus, depending on the zygosity of the germline variants in NA12878, somatic mutations across these three tumor mixture ratios have AFs ranging from 12.5 to 70%. </plain></SENT>
</text></p><p id="Par26"><text><SENT sid="163" pm="."><plain>We also generated another 50× virtual tumor sample by randomly spiking reads from a downsampled (to 50× coverage) NA12878 into a downsampled (to 50× coverage) NA12877 data at heterozygous and homozygous variant locations in NA12878, which are reference calls in NA12877. </plain></SENT>
<SENT sid="164" pm="."><plain>For each variant, we randomly assigned the frequencies of spiked reads from a binomial distribution with means [0.05, 0.1, 0.2, 0.3]. </plain></SENT>
<SENT sid="165" pm="."><plain>Thus, depending on the zygosity of the variant, the mean somatic mutations AFs ranges from 2.5 to 30%. </plain></SENT>
<SENT sid="166" pm="."><plain>To avoid ambiguity in the truth set, we only used variants for which the relevant paired-end reads did not overlap any other variants (316,050 SNVs and 46,978 INDELs). </plain></SENT>
<SENT sid="167" pm="."><plain>This generated a contaminated tumor with reads from NA12878. </plain></SENT>
<SENT sid="168" pm="."><plain>We also used another independent downsampled (to 50×) data for NA12877 as the pure normal. </plain></SENT>
</text></p><p id="Par27"><text><SENT sid="169" pm="."><plain>For both experiments, FastQ files and truth germline variants were downloaded and aligned with BWA-MEM (v0.7.15)28 followed by Picard MarkDuplicates (v2.10.10) (<ext-link ext-link-type="uri" xlink:href="https://broadinstitute.github.io/picard">https://broadinstitute.github.io/picard</ext-link>), and GATK IndelRealigner and Base Quality Score Recalibration (v3.7)29. </plain></SENT>
</text></p></sec><sec id="Sec18"><title><text><SENT sid="170" pm="."><plain>Real tumor-normal pair data </plain></SENT>
</text></title><p id="Par28"><text><SENT sid="171" pm="."><plain>We used the CLL1 chronic lymphocytic leukemia dataset23 (accession: <ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/ega/datasets/EGAD00001000023EGAD00001000023">https://www.ebi.ac.uk/ega/datasets/EGAD00001000023</ext-link>) and the COLO-829 immortal metastatic malignant melanoma cell line dataset24,25 (accession: <ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/ega/studies/EGAS00000000052EGAS00000000052">https://www.ebi.ac.uk/ega/studies/EGAS00000000052</ext-link>) to assess our approach on real tumor-normal pair data with published lists of validated somatic mutations. </plain></SENT>
</text></p><p id="Par29"><text><SENT sid="172" pm="."><plain>The COLO-829 dataset consists of 80× whole-genome sequencing tumor sample and its matched normal blood COLO-829BL sample at 60×, with 454 validated somatic SNVs. </plain></SENT>
<SENT sid="173" pm="."><plain>CLL1 has a whole-genome sequencing tumor sample and a matched normal, respectively, at 53× and 42× coverage, with 961 published somatic SNVs. </plain></SENT>
</text></p><p id="Par30"><text><SENT sid="174" pm="."><plain>The TCGA-AZ-660126,27 dataset is a whole-exome sequencing of a colon adenocarcinoma tumor sample and its matched normal tissue from TCGA. </plain></SENT>
<SENT sid="175" pm="."><plain>The tumor and normal samples were sequenced at depths of 145× and 165×, respectively. </plain></SENT>
<SENT sid="176" pm="."><plain>We used 952 validated SNVs in TCGA30 and COSMIC31 databases as the ground truth somatic mutations for this sample. </plain></SENT>
</text></p><p id="Par31"><text><SENT sid="177" pm="."><plain>For real data, we compute extrapolated precision as the percentage of predicted somatic mutations that have been called by at least two stand-alone methods, or have been reported as verified somatic mutations in at least two samples of the same cancer type in COSMIC database. </plain></SENT>
<SENT sid="178" pm="."><plain>We then compute extrapolated F1-score based on the harmonic mean of recall and this extrapolated precision. </plain></SENT>
</text></p></sec><sec id="Sec19"><title><text><SENT sid="179" pm="."><plain>Whole-exome and targeted panel data </plain></SENT>
</text></title><p id="Par32"><text><SENT sid="180" pm="."><plain>To assess NeuSomatic on different target enrichment experiments we used whole-exome datasets from the Ashkenazi Jewish trio20. </plain></SENT>
<SENT sid="181" pm="."><plain>We downloaded deep-sequenced (200× coverage) whole-exome alignment files for HG003 and HG004 (<ext-link ext-link-type="uri" xlink:href="ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/">ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/</ext-link>), along with the high-confidence germline variants (Genome-in-a-Bottle release v3.3.2). </plain></SENT>
<SENT sid="182" pm="."><plain>We then used mixtures of random 70×, 50×, and 25× downsamples of HG004 and 30×, 50×, and 75× downsamples of HG003, to construct 70, 50, and 25% pure tumor samples, respectively. </plain></SENT>
<SENT sid="183" pm="."><plain>We also constructed a 95% pure normal by mixing 95× HG003 and 5× HG004 downsampled alignments. </plain></SENT>
<SENT sid="184" pm="."><plain>For our analysis, we used Agilent SureSelect Human All Exon V5 BED file. </plain></SENT>
<SENT sid="185" pm="."><plain>The ground truth somatic mutations were identified similar to the Platinum synthetic tumor data (11,720 SNVs, 878 INDELs). </plain></SENT>
<SENT sid="186" pm="."><plain>Depending on the zygosity of the germline variants in HG004, somatic mutations across these three tumor mixture ratios have AFs ranging from 12.5 to 70% </plain></SENT>
</text></p><p id="Par33"><text><SENT sid="187" pm="."><plain>For validating the performance on the target panel, we restricted the above alignment and truth data to Illumina’s TruSight inherited disease panel BED file (216 SNVs, 5 INDELs). </plain></SENT>
<SENT sid="188" pm="."><plain>We only evaluated the performance on SNVs due to the limited number of true INDELs in the target panel region. </plain></SENT>
</text></p></sec><sec id="Sec20"><title><text><SENT sid="189" pm="."><plain>PacBio data </plain></SENT>
</text></title><p id="Par34"><text><SENT sid="190" pm="."><plain>For long-reads analysis, we downloaded the high-confidence germline variants (Genome-in-a-Bottle release v3.3.2) for HG002 sample (<ext-link ext-link-type="uri" xlink:href="ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/">ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/</ext-link>)20. </plain></SENT>
<SENT sid="191" pm="."><plain>We built the long-reads error profile using the CHM1 dataset32 (SRA accession SRX533609). </plain></SENT>
<SENT sid="192" pm="."><plain>We then simulated a 100× pure normal sample using the VarSim simulation framework33 in combination with the LongISLND in silico long-reads sequencer simulator34. </plain></SENT>
<SENT sid="193" pm="."><plain>Using a set of random somatic mutations, we also simulated a 100× pure tumor sample with the same error profile. </plain></SENT>
<SENT sid="194" pm="."><plain>We used NGMLR (v0.2.6)35 to align the sequences. </plain></SENT>
<SENT sid="195" pm="."><plain>We then mixed a 47.5× downsample of pure normal alignment and 2.5× downsample of the pure tumor alignment to form the 50× normal pair with 95% purity, and mixed 40×, 35×, and 25× independent downsamples of normal, respectively, with 10×, 15×, and 25× downsamples of pure tumor, to construct 50× tumor mixtures of 20, 30, and 50% purity. </plain></SENT>
<SENT sid="196" pm="."><plain>We restricted the training set to a 120 megabase region in chromosome 1 (with 39,818 truth somatic SNVs and 38,804 truth somatic INDELs), and the testing set to whole chromosome 22 (with 12,201 truth somatic SNVs and 12,185 truth somatic INDELs). </plain></SENT>
<SENT sid="197" pm="."><plain>Somatic mutations across the three tumor mixture ratios have AFs ranging from 20 to 50%. </plain></SENT>
</text></p></sec><sec id="Sec21"><title><text><SENT sid="198" pm="."><plain>Candidate mutation preparation </plain></SENT>
</text></title><p id="Par35"><text><SENT sid="199" pm="."><plain>As the first step, we scan tumor read alignments to find candidate locations with evidence of mutations. </plain></SENT>
<SENT sid="200" pm="."><plain>Many of these positions have either germline variants or erroneous calls made due to the complexity of the genomic region, or sequencing artifacts. </plain></SENT>
<SENT sid="201" pm="."><plain>We apply a set of liberal filters on the set of candidate locations to make sure the number of such locations is reasonable. </plain></SENT>
<SENT sid="202" pm="."><plain>In general, for SNVs, we required AF ≥0.03 or more than two reads supporting the SNV and Phred scaled base quality score larger than 19 (larger than 14 for real WES dataset) as the minimum requirements. </plain></SENT>
<SENT sid="203" pm="."><plain>For 1-base INDELs, we required AF ≥0.02 or more than one read support. </plain></SENT>
<SENT sid="204" pm="."><plain>For INDELs larger than 1-base, we require AF ≥0.03. </plain></SENT>
<SENT sid="205" pm="."><plain>For the ensemble approach, we also included any somatic mutation detected by other somatic mutation detection methods as input candidate. </plain></SENT>
<SENT sid="206" pm="."><plain>For the PacBio dataset, we used AF ≥0.1 for SNVs and INDELs larger than 1-base, and AF ≥0.15 for 1-base INDELs. </plain></SENT>
</text></p><p id="Par36"><text><SENT sid="207" pm="."><plain>For the DREAM Challenge dataset, we excluded variants existing in dbSNP36 from the input candidates. </plain></SENT>
<SENT sid="208" pm="."><plain>For fair comparison, we also filtered dbSNP calls for all other somatic mutation detection tools. </plain></SENT>
</text></p></sec><sec id="Sec22"><title><text><SENT sid="209" pm="."><plain>Input mutation matrix </plain></SENT>
</text></title><p id="Par37"><text><SENT sid="210" pm="."><plain>For each candidate position, we prepare a 3-dimensional matrix M with k channels of size 5 × 32 (Fig. 1a; Supplementary Figs. 1 and 2). </plain></SENT>
<SENT sid="211" pm="."><plain>The five rows in each channel corresponds to four DNA bases A, C, G, and T, and the gap character (‘−’). </plain></SENT>
<SENT sid="212" pm="."><plain>Each of the 32 columns of the matrix represents one column of the alignment. </plain></SENT>
</text></p><p id="Par38"><text><SENT sid="213" pm="."><plain>For each candidate location, we extract the tumor and normal read alignments. </plain></SENT>
<SENT sid="214" pm="."><plain>As shown in Fig. 1a, we then consider the read alignments of tumor and normal sample to the reference as an MSA. </plain></SENT>
<SENT sid="215" pm="."><plain>To this end, we augment the reference sequence by adding gaps to the reference sequence, when there is insertion in reads. </plain></SENT>
<SENT sid="216" pm="."><plain>It must be noted that this process does not need any further realignment of the original read alignments of input BAM files, but only restructuring the alignments into MSA format by assigning additional columns wherever insertions has occurred. </plain></SENT>
<SENT sid="217" pm="."><plain>If there are multiple distinct insertions in multiple reads after a specific position, we consider them as left-aligned sequences and put them in the same set of columns (See for instance insertions of A and C bases in the nineth column of the toy example in Fig. 1a). </plain></SENT>
<SENT sid="218" pm="."><plain>With this read representation, we find the frequency of A/C/G/T/- characters in each column and record separate matrices for tumor and normal samples (channels C2 and C3 in matrix M). </plain></SENT>
<SENT sid="219" pm="."><plain>In channel C1, we record the reference base (or gap) in each column. </plain></SENT>
<SENT sid="220" pm="."><plain>Channels Ci (4 ≤ i ≤ k) record other alignment signals in tumor and normal samples, such as coverage, base quality, mapping quality, strands, clipping information, edit distance, alignment score, and paired-end information. </plain></SENT>
<SENT sid="221" pm="."><plain>For instance, for the base quality channel, we have a matrix of size 5 × 32 for each sample, which records the average base quality of reads that have a given base (for a given row) in each column. </plain></SENT>
<SENT sid="222" pm="."><plain>As another instance, for the edit distance channel, we have a matrix of size 5 × 32 for each sample, which records the average edit distance of reads that have a given base (for a given row) in each column. </plain></SENT>
<SENT sid="223" pm="."><plain>One channel of matrix M is devoted to specify the column where the candidate is located in. </plain></SENT>
<SENT sid="224" pm="."><plain>In the current implementation, we used a total of 26 channels in the stand-alone NeuSomatic-S approach. </plain></SENT>
</text></p><p id="Par39"><text><SENT sid="225" pm="."><plain>For the ensemble extension of NeuSomatic, we also included additional channels to capture features reported by each of the six individual methods used. </plain></SENT>
<SENT sid="226" pm="."><plain>In this implementation, we used 93 additional channels to represent features extracted from other methods, and alignments reported by SomaticSeq. </plain></SENT>
<SENT sid="227" pm="."><plain>Thus, the ensemble mode of NeuSomatic had 119 input channels for each candidate matrix. </plain></SENT>
</text></p><p id="Par40"><text><SENT sid="228" pm="."><plain>For each candidate location, we report the alignment information in a window of seven bases around the candidate. </plain></SENT>
<SENT sid="229" pm="."><plain>We reserve 32 columns to take into account the augmented alignment with insertions. </plain></SENT>
<SENT sid="230" pm="."><plain>In rare cases where we have a large insertion, 32 columns may not be enough to represent the alignment. </plain></SENT>
<SENT sid="231" pm="."><plain>For such cases, we truncate the insertions so that we can record at least three bases in the vicinity of the candidate. </plain></SENT>
</text></p></sec><sec id="Sec23"><title><text><SENT sid="232" pm="."><plain>CNN architecture </plain></SENT>
</text></title><p id="Par41"><text><SENT sid="233" pm="."><plain>The proposed CNN (Fig. 1b) consists of nine convolutional layers structured as follows. </plain></SENT>
<SENT sid="234" pm="."><plain>The input matrices are fed into the first convolution layer with 64 output channels, 1 × 3 kernel size and Relu activation followed by a batch normalization and a max-pooling layer. </plain></SENT>
<SENT sid="235" pm="."><plain>The output of this layer is then fed to a set of four blocks with shortcut identity connection similar to ResNet structure. </plain></SENT>
<SENT sid="236" pm="."><plain>These blocks consist of a convolution layer with 3 × 3 kernels followed by batch normalization and a convolution layer with 5 × 5 kernels. </plain></SENT>
<SENT sid="237" pm="."><plain>Between these shortcut blocks, we use batch normalization and max-pooling layers. </plain></SENT>
<SENT sid="238" pm="."><plain>The output of final block is fed to a fully connected layer of size 240. </plain></SENT>
<SENT sid="239" pm="."><plain>The resulting feature vector is then fed to two softmax classifiers and a regressor. </plain></SENT>
<SENT sid="240" pm="."><plain>The first classifier is a 4-way classifier that predicts the mutation type from the four classes of non-somatic, SNV, insertion, and deletion. </plain></SENT>
<SENT sid="241" pm="."><plain>The second classifier predicts the length of the predicted mutation from the four categories of 0, 1, 2, and ≥3. </plain></SENT>
<SENT sid="242" pm="."><plain>Non-somatic calls are annotated as zero size mutations, SNVs and 1-base INDELs are annotated as size 1, while 2-base and ≥3 size INDELs are, respectively, annotated as 2 and ≥3 size mutations. </plain></SENT>
<SENT sid="243" pm="."><plain>The regressor predicts the column of the mutations in the matrix, to assure the prediction is targeted the right position and is optimized using a smooth L1 loss function. </plain></SENT>
</text></p><p id="Par42"><text><SENT sid="244" pm="."><plain>The CNN has less than 900 K parameters, which enables us to have a highly efficient implementation by using large batch sizes. </plain></SENT>
<SENT sid="245" pm="."><plain>The whole-genome training process took ~8 h on a machine with 8 Tesla K80 Nvidia GPU’s. </plain></SENT>
</text></p></sec><sec id="Sec24"><title><text><SENT sid="246" pm="."><plain>CNN training </plain></SENT>
</text></title><p id="Par43"><text><SENT sid="247" pm="."><plain>For DREAM Challenge, Platinum, and target enrichment datasets, we randomly split the genomic regions to 50% training and 50% testing sets. </plain></SENT>
<SENT sid="248" pm="."><plain>For the PacBio dataset, we trained NeuSomatic on a 120 megabase region on chromosome 1, and tested it on all of chromosome 22. </plain></SENT>
</text></p><p id="Par44"><text><SENT sid="249" pm="."><plain>For each dataset, we combined the generated training input matrices from all different tumor/normal purity scenarios, and used the combined set for training the network. </plain></SENT>
<SENT sid="250" pm="."><plain>We then applied this unified trained model to test in each individual tumor/normal purity setting. </plain></SENT>
</text></p><p id="Par45"><text><SENT sid="251" pm="."><plain>The DREAM Challenge dataset has 15,507 somatic mutations for Stage 3 and 30,462 somatic mutations for Stage 4. </plain></SENT>
<SENT sid="252" pm="."><plain>For better network training, we spiked in ~95 K more SNVs and ~95 K more INDELs with similar AF distributions to the original DREAM data into the tumor samples of Stages 3 and 4 using BAMSurgeon19. </plain></SENT>
</text></p><p id="Par46"><text><SENT sid="253" pm="."><plain>We trained the network using a batch size of 1000 with SGD optimizer with learning rate of 0.01, and momentum of 0.9, and we multiplied the learning rate by 0.1 every 400 epochs. </plain></SENT>
</text></p><p id="Par47"><text><SENT sid="254" pm="."><plain>Since, in general, the input candidate locations have significantly more non-somatic (reference or germline) calls than true somatic mutations, in each epoch we use all the true somatic mutations in the training set and randomly selected non-somatic candidates with twice the number of the true somatic mutations. </plain></SENT>
<SENT sid="255" pm="."><plain>We used a weighted softmax classification loss function, to balance for the number of candidates in each category. </plain></SENT>
<SENT sid="256" pm="."><plain>For DREAM Challenge data, since we added more synthetic mutations in the training set, we boosted the weight for the non-somatic category to achieve higher precision on test set. </plain></SENT>
</text></p><p id="Par48"><text><SENT sid="257" pm="."><plain>For assessing synthetic target enrichment datasets, we used whole-exome and whole-genome data as the training set. </plain></SENT>
</text></p><p id="Par49"><text><SENT sid="258" pm="."><plain>To test on real WGS samples CLL1 and COLO-829, we used models trained on DREAM Challenge Stage 3 for SomaticSeq and NeuSomatic. </plain></SENT>
<SENT sid="259" pm="."><plain>For the real WES sample TCGA-AZ-6601, we prepared a training set using data from another TCGA WES dataset, TCGA-AZ-431530. </plain></SENT>
<SENT sid="260" pm="."><plain>We mixed the tumor and normal alignments from this dataset and split the mixture into two equal alignments. </plain></SENT>
<SENT sid="261" pm="."><plain>We then used one alignment as the pure normal and spiked in ~91 K random SNVs and ~9 K random INDELs into the other alignment using BAMSurgeon to generate a synthetic tumor sample for training. </plain></SENT>
<SENT sid="262" pm="."><plain>We used models trained on this synthetic tumor-normal WES dataset to test NeuSomatic and SomaticSeq on the real WES dataset, TCGA-AZ-6601. </plain></SENT>
<SENT sid="263" pm="."><plain>For the experiment on 261 real TCGA samples, we used a similar approach to prepare a training set using 12 TCGA samples. </plain></SENT>
<SENT sid="264" pm="."><plain>The models trained on this synthetic dataset were used to test on the 261 TCGA samples. </plain></SENT>
</text></p></sec><sec id="Sec25"><title><text><SENT sid="265" pm="."><plain>Hyper-parameter tuning </plain></SENT>
</text></title><p id="Par50"><text><SENT sid="266" pm="."><plain>For hyper-parameter tuning, we used 10% of the genome in the DREAM Challenge Stage 3 experiment and used the derived parameters in all other experiments. </plain></SENT>
</text></p><p id="Par51"><text><SENT sid="267" pm="."><plain>We further explored different network architectures such as the pre-activation ResNet architecture with 4 to 16 ResNet blocks (including ResNet-18 and ResNet-34 architectures) (Supplementary Fig. 13a–e), as well as some variants of the proposed residual NeuSomatic architecture (Supplementary Fig. 13f–m). </plain></SENT>
<SENT sid="268" pm="."><plain>To evaluate these networks, we split the training data in the DREAM Stage 3 dataset into two halves and used one to train different architectures and the other to evaluate them in the stand-alone mode. </plain></SENT>
<SENT sid="269" pm="."><plain>Supplementary Table 12 compares these architectures in terms of accuracy, number of network parameters, memory usage, and speed. </plain></SENT>
<SENT sid="270" pm="."><plain>In general, all these networks can obtain relatively high accuracy compared to the conventional somatic mutation detection approaches. </plain></SENT>
<SENT sid="271" pm="."><plain>This observation revealed the importance of the proposed data summarization approach, which captures main signals in the genomic context of the candidates and facilitates efficient implementation of convolutional networks on the somatic mutation detection problem. </plain></SENT>
<SENT sid="272" pm="."><plain>The default ReSNet architectures with two 3 × 3 convolution filters (Supplementary Fig. 13a–e) have lower average accuracy compared to those with the proposed residual blocks (Supplementary Fig. 13f–m). </plain></SENT>
<SENT sid="273" pm="."><plain>In addition, networks with strided convolution (Supplementary Fig. 13a–g) have larger number of network parameters and run-time requirements. </plain></SENT>
<SENT sid="274" pm="."><plain>In summary, although each network architecture shows advantages in some of the compared aspects, we selected the proposed NeuSomatic network architecture (Fig. 1b; Supplementary Fig. 13k) as our default network architecture as a compromise of all these factors, while other networks can easily be adapted by users given their use-cases and time/computational constraints. </plain></SENT>
</text></p></sec><sec id="Sec26"><title><text><SENT sid="275" pm="."><plain>Other somatic mutation detection algorithms </plain></SENT>
</text></title><p id="Par52"><text><SENT sid="276" pm="."><plain>We used Strelka2 (v2.8.4), Mutect2 (v4.0.0.0), SomaticSniper (v1.0.5.0), MuSE (v1.0rc), VarDict (v1.5.1), VarScan2 (v2.3.7), and SomaticSeq (v2.7.0) somatic mutation detection algorithms in our analysis, with their default settings. </plain></SENT>
</text></p><p id="Par53"><text><SENT sid="277" pm="."><plain>We used VarDict as an alternative approach to NeuSomatic on PacBio data. </plain></SENT>
<SENT sid="278" pm="."><plain>To enable detecting somatic mutations on high-error rate long reads, we used VarDict with “ −m 10000 −Q 1 −q 5 −X 1 −c 1 −S 2 −E 3 −g 4 −k 0 “ parameter settings. </plain></SENT>
<SENT sid="279" pm="."><plain>Besides, as in NeuSomatic, we used AF ≥0.1 for SNVs and AF ≥0.15 for INDELs. </plain></SENT>
</text></p><p id="Par54"><text><SENT sid="280" pm="."><plain>To train SomaticSeq, we also followed the same 50% train/test region splitting as used for NeuSomatic. </plain></SENT>
<SENT sid="281" pm="."><plain>In addition, as in NeuSomatic, for each dataset we combined the training data from all different tumor/normal purity scenarios to train the SomaticSeq SNV and INDEL classifiers. </plain></SENT>
<SENT sid="282" pm="."><plain>These unified classifiers were then used to predict in each individual tumor/normal purity setting. </plain></SENT>
</text></p><p id="Par55"><text><SENT sid="283" pm="."><plain>For the precision-recall analysis, somatic mutations were sorted based on the confidence or quality scores assigned by each tool. </plain></SENT>
<SENT sid="284" pm="."><plain>For MuSE, we used the tier assignments as the sorting criterion. </plain></SENT>
<SENT sid="285" pm="."><plain>For VarDict, VarScan2, MuTect2, Strelka2, and SomaticSniper we, respectively, used SSF, SSC, TLOD, SomaticEVS, and SSC values reported in the VCF file for sorting. </plain></SENT>
<SENT sid="286" pm="."><plain>For SomaticSeq and NeuSomatic, we used the somatic mutation quality score in the QUAL field. </plain></SENT>
<SENT sid="287" pm="."><plain>NeuSomatic reports quality scores for the predicted somatic mutations based on the probability of predictions by CNN. </plain></SENT>
</text></p><p id="Par56"><text><SENT sid="288" pm="."><plain>To analyze performance on real samples, we used the PASS somatic calls from different methods (For VarDict we restricted to calls with StrongSomatic status). </plain></SENT>
<SENT sid="289" pm="."><plain>For NeuSomatic, we used 0.97 as the quality score threshold for WGS and 0.6 for WES. </plain></SENT>
</text></p></sec><sec id="Sec27"><title><text><SENT sid="290" pm="."><plain>Computational complexity </plain></SENT>
</text></title><p id="Par57"><text><SENT sid="291" pm="."><plain>For whole-genome data, scanning 30× tumor and normal alignments to find candidates, extracting features, and preparing the input matrices can take ~3.9 h on a dual-14 core Intel Xeon CPU E5-2680 v4 2.40 GHz machine. </plain></SENT>
<SENT sid="292" pm="."><plain>The whole-genome training process can take ~8 h on a machine with 8 Tesla K80 Nvidia GPU’s (~90 s per epoch of size 580,000). </plain></SENT>
<SENT sid="293" pm="."><plain>Depending on the cutoff AF on candidate somatic mutations, computing the network predictions for the candidate mutations on a 30× whole-genome data can take ~35 min (with AF cutoff of 0.05, 3.9 M candidates) to ~100 min (with AF cutoff of 0.03, 11.5 M candidates) with 8 Tesla K80 Nvidia GPUs. </plain></SENT>
<SENT sid="294" pm="."><plain>For 125× whole-exome data, the whole scanning, preparation, and computing the network predictions can take ~30 min. </plain></SENT>
<SENT sid="295" pm="."><plain>The end-to-end run times for predicting somatic mutations on a 125× whole-exome dataset and a 30× whole-genome dataset using NeuSomatic ensemble and stand-alone approaches (in CPU-only mode) were compared with other somatic mutation detection techniques in Supplementary Figs. 14 and 15. </plain></SENT>
</text></p></sec><sec id="Sec028"><title><text><SENT sid="296" pm="."><plain>Code availability </plain></SENT>
</text></title><p id="Par058"><text><SENT sid="297" pm="."><plain>NeuSomatic is written in Python and C++. </plain></SENT>
<SENT sid="298" pm="."><plain>Its deep learning framework is implemented using PyTorch 0.3.1 to enable GPU application for training/testing. </plain></SENT>
<SENT sid="299" pm="."><plain>The source code is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/bioinform/neusomatic">https://github.com/bioinform/neusomatic</ext-link> under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International license. </plain></SENT>
<SENT sid="300" pm="."><plain>The results in this paper were based on NeuSomatic v0.1.3. </plain></SENT>
</text></p></sec><sec id="Sec28"><title><text><SENT sid="301" pm="."><plain>Reporting summary </plain></SENT>
</text></title><p id="Par58"><text><SENT sid="302" pm="."><plain>Further information on experimental design is available in the Nature Research Reporting Summary linked to this article. </plain></SENT>
</text></p></sec></sec></SecTag><SecTag type="SUPPL"><sec sec-type="supplementary-material"><title><text><SENT sid="303" pm="."><plain>Supplementary information </plain></SENT>
</text></title><sec id="Sec29"><p><text><SENT sid="304" pm="."><plain>Supplementary Information Reporting Summary </plain></SENT>
</text></p></sec></sec></SecTag></body><back><fn-group><fn><p><text><SENT sid="305" pm="."><plain>Journal peer review information: Nature Communications thanks Daniel Chow and the other anonymous reviewer(s) for their contribution to the peer review of this work. </plain></SENT>
</text></p></fn><fn><p><text><SENT sid="306" pm="."><plain>Publisher’s note: Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations. </plain></SENT>
</text></p></fn></fn-group><SecTag type="SUPPL"><sec><title>Supplementary information</title><p><bold>Supplementary Information</bold> accompanies this paper at 10.1038/s41467-019-09027-x.</p></sec></SecTag><SecTag type="ACK_FUND"><ack><title>Acknowledgements</title><p><text4fund><text><SENT sid="307" pm="."><plain>We thank Li Tai Fang, Yunfei Guo, Lijing Yao, Betty Ulitsky, Jian Li, Anoop Grewal, Daniel Kogan, and Michael Braverman from Roche Sequencing Solutions for fruitful discussions and proofreading the manuscript. </plain></SENT>
</text></text4fund></p></ack></SecTag><SecTag type="ACK_FUND"><notes notes-type="author-contribution"><title>Author contributions</title><p><text4fund><text><SENT sid="308" pm="."><plain>S.M.E.S., M.M., and H.Y.K.L conceived the study, reviewed the analysis, and wrote the manuscript. </plain></SENT>
<SENT sid="309" pm="."><plain>H.Y.K.L designed the study. </plain></SENT>
<SENT sid="310" pm="."><plain>M.M. and H.Y.K.L. supervised the study. </plain></SENT>
<SENT sid="311" pm="."><plain>S.M.E.S designed and developed the NeuSomatic algorithm and its software. </plain></SENT>
<SENT sid="312" pm="."><plain>R.L. and S.M.E.S developed the algorithm for scanning the genome, preparing the augmented alignments, and extracting alignment features. </plain></SENT>
<SENT sid="313" pm="."><plain>S.M.E.S performed the overall analysis. </plain></SENT>
<SENT sid="314" pm="."><plain>B.L., S.M.E.S., and M.M. performed the long-read analysis. </plain></SENT>
<SENT sid="315" pm="."><plain>S.M.E.S., M.M., and K.P. performed the cloud computation. </plain></SENT>
<SENT sid="316" pm="."><plain>All authors reviewed and edited the manuscript. </plain></SENT>
</text></text4fund></p></notes></SecTag><notes notes-type="data-availability"><title>Data availability</title><p>Sequence data for this study were collected from various sources, i.e., the European Nucleotide Archive (accession: PRJEB3246; <ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/ena">https://www.ebi.ac.uk/ena</ext-link>), the Sequence Read Archive (accession: SRX1026041; <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/sra">https://www.ncbi.nlm.nih.gov/sra</ext-link>), the International Cancer Genome Consortium (project: ICGC-TCGA DREAM Mutation Calling Challeng, controlled access: <ext-link ext-link-type="uri" xlink:href="https://icgc.org/">https://icgc.org/</ext-link>), The Cancer Genome Atlas (accessions: TCGA-AZ-6601, TCGA-AZ-4315; controlled access: <ext-link ext-link-type="uri" xlink:href="https://gdc.cancer.gov/">https://gdc.cancer.gov/</ext-link>), the European Genome-phenome Archive (accessions: EGAS00000000052, EGAD00001000023; controlled access: <ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/ega/">https://www.ebi.ac.uk/ega/</ext-link>), and the Genome-in-a-Bottle (accessions: HG002, HG003, HG004; ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/). Synthetic data were generated from the above datasets using the scripts at <ext-link ext-link-type="uri" xlink:href="https://github.com/bioinform/neusomatic/blob/paper/etc/data_scripts.zip">https://github.com/bioinform/neusomatic/blob/paper/etc/data_scripts.zip</ext-link>. All other relevant data are available upon request.</p></notes><notes notes-type="COI-statement"><sec id="FPar1"><title>Competing interests</title><p>S.M.E.S, M.M., and H.Y.K.L. have filed a patent application on this invention. The remaining authors declare no competing interests.</p></sec></notes><SecTag type="REF"><ref-list id="Bib1"><title>References</title><ref id="CR1"><text><SENT sid="317" pm="."><plain>1.CibulskisKSensitive detection of somatic point mutations in impure and heterogeneous cancer samplesNat. </plain></SENT>
<SENT sid="318" pm="."><plain>Biotechnol.20133121310.1038/nbt.251423396013 </plain></SENT>
</text></ref><ref id="CR2"><text><SENT sid="319" pm="."><plain>2.FanYMuSE: accounting for tumor heterogeneity using a sample-specific error model improves sensitivity and specificity in mutation calling from sequencing dataGenome Biol.20161717810.1186/s13059-016-1029-627557938 </plain></SENT>
</text></ref><ref id="CR3"><text><SENT sid="320" pm="."><plain>3.LaiZVarDict: a novel and versatile variant caller for next-generation sequencing in cancer researchNucleic Acids Res.201644e108e10810.1093/nar/gkw22727060149 </plain></SENT>
</text></ref><ref id="CR4"><text><SENT sid="321" pm="."><plain>4.KoboldtDCVarScan 2: somatic mutation and copy number alteration discovery in cancer by exome sequencingGenome Res.20122256857610.1101/gr.129684.11122300766 </plain></SENT>
</text></ref><ref id="CR5"><text><SENT sid="322" pm="."><plain>5.KimSStrelka2: fast and accurate calling of germline and somatic variantsNat. </plain></SENT>
<SENT sid="323" pm="."><plain>Methods20181559159410.1038/s41592-018-0051-x30013048 </plain></SENT>
</text></ref><ref id="CR6"><text><SENT sid="324" pm="."><plain>6.LarsonDESomaticSniper: identification of somatic point mutations in whole genome sequencing dataBioinformatics20112831131710.1093/bioinformatics/btr66522155872 </plain></SENT>
</text></ref><ref id="CR7"><text><SENT sid="325" pm="."><plain>7.WangQDetecting somatic point mutations in cancer genome sequencing data: a comparison of mutation callersGenome Med.201359110.1186/gm49524112718 </plain></SENT>
</text></ref><ref id="CR8"><text><SENT sid="326" pm="."><plain>8.AliotoTSA comprehensive assessment of somatic mutation detection in cancer using whole-genome sequencingNat. </plain></SENT>
<SENT sid="327" pm="."><plain>Commun.201561000110.1038/ncomms1000126647970 </plain></SENT>
</text></ref><ref id="CR9"><text><SENT sid="328" pm="."><plain>9.RobertsNDA comparative analysis of algorithms for somatic SNV detection in cancerBioinformatics2013292223223010.1093/bioinformatics/btt37523842810 </plain></SENT>
</text></ref><ref id="CR10"><text><SENT sid="329" pm="."><plain>10.FangLTAn ensemble approach to accurately detect somatic mutations using SomaticSeqGenome Biol.20151619710.1186/s13059-015-0758-226381235 </plain></SENT>
</text></ref><ref id="CR11"><text><SENT sid="330" pm="."><plain>11.PoplinRA universal SNP and small-indel variant caller using deep neural networksNat. </plain></SENT>
<SENT sid="331" pm="."><plain>Biotechnol.201836983<?supplied-pmid 30247488?>30247488 </plain></SENT>
</text></ref><ref id="CR12"><text><SENT sid="332" pm="."><plain>12.Luo, R., Sedlazeck, F. </plain></SENT>
<SENT sid="333" pm="."><plain>J., Lam, T.-W. &amp; Schatz, M. </plain></SENT>
<SENT sid="334" pm="."><plain>Clairvoyante: a multi-task convolutional deep neural network for variant calling in single molecule sequencing. <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/early/2018/04/28/310458">https://www.biorxiv.org/content/early/2018/04/28/310458</ext-link> (2018). </plain></SENT>
</text></ref><ref id="CR13"><text><SENT sid="335" pm="."><plain>13.Simple convolutional neural network for genomic variant calling with tensorflow. <ext-link ext-link-type="uri" xlink:href="https://towardsdatascience.com/simple-convolution-neural-network-for-genomic-variant-calling-with-tensorflow-c085dbc2026f">https://towardsdatascience.com/simple-convolution-neural-network-for-genomic-variant-calling-with-tensorflow-c085dbc2026f</ext-link> (2017). </plain></SENT>
</text></ref><ref id="CR14"><text><SENT sid="336" pm="."><plain>14.EstevaADermatologist-level classification of skin cancer with deep neural networksNature201754211511810.1038/nature2105628117445 </plain></SENT>
</text></ref><ref id="CR15"><text><SENT sid="337" pm="."><plain>15.Torracinta, R. et al. </plain></SENT>
<SENT sid="338" pm="."><plain>Adaptive somatic mutations calls with deep learning and semi-simulated data. <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/early/2016/10/04/079087">https://www.biorxiv.org/content/early/2016/10/04/079087</ext-link> (2016). </plain></SENT>
</text></ref><ref id="CR16"><text><SENT sid="339" pm="."><plain>16.Running DeepVariant. <ext-link ext-link-type="uri" xlink:href="https://cloud.google.com/genomics/docs/tutorials/deepvariant">https://cloud.google.com/genomics/docs/tutorials/deepvariant</ext-link> (2018). </plain></SENT>
</text></ref><ref id="CR17"><text><SENT sid="340" pm="."><plain>17.He, K., Zhang, X., Ren, S. &amp; Sun, J. </plain></SENT>
<SENT sid="341" pm="."><plain>Deep residual learning for image recognition. Proc. </plain></SENT>
<SENT sid="342" pm="."><plain>IEEE conf. comput. vis. pattern recognit. 770–778 (2016) <ext-link ext-link-type="uri" xlink:href="http://openaccess.thecvf.com/content_cvpr_2016/html/He_Deep_Residual_Learning_CVPR_2016_paper.html">http://openaccess.thecvf.com/content_cvpr_2016/html/He_Deep_Residual_Learning_CVPR_2016_paper.html</ext-link>. </plain></SENT>
</text></ref><ref id="CR18"><text><SENT sid="343" pm="."><plain>18.EberleMAA reference data set of 5.4 million phased human variants validated by genetic inheritance from sequencing a three-generation 17-member pedigreeGenome Res.20172715716410.1101/gr.210500.11627903644 </plain></SENT>
</text></ref><ref id="CR19"><text><SENT sid="344" pm="."><plain>19.EwingADCombining tumor genome simulation with crowdsourcing to benchmark somatic single-nucleotide-variant detectionNat. </plain></SENT>
<SENT sid="345" pm="."><plain>Methods20151262310.1038/nmeth.340725984700 </plain></SENT>
</text></ref><ref id="CR20"><text><SENT sid="346" pm="."><plain>20.ZookJMExtensive sequencing of seven human genomes to characterize benchmark reference materialsSci. </plain></SENT>
<SENT sid="347" pm="."><plain>Data2016316002510.1038/sdata.2016.2527271295 </plain></SENT>
</text></ref><ref id="CR21"><text><SENT sid="348" pm="."><plain>21.XuCA review of somatic single nucleotide variant calling algorithms for next-generation sequencing dataComput. </plain></SENT>
<SENT sid="349" pm="."><plain>Struct. </plain></SENT>
<SENT sid="350" pm="."><plain>Biotechnol. </plain></SENT>
<SENT sid="351" pm="."><plain>J.201816152410.1016/j.csbj.2018.01.00329552334 </plain></SENT>
</text></ref><ref id="CR22"><text><SENT sid="352" pm="."><plain>22.ZookJMIntegrating human sequence data sets provides a resource of benchmark SNP and indel genotype callsNat. </plain></SENT>
<SENT sid="353" pm="."><plain>Biotechnol.20143224610.1038/nbt.283524531798 </plain></SENT>
</text></ref><ref id="CR23"><text><SENT sid="354" pm="."><plain>23.PuenteXSWhole-genome sequencing identifies recurrent mutations in chronic lymphocytic leukaemiaNature201147510110.1038/nature1011321642962 </plain></SENT>
</text></ref><ref id="CR24"><text><SENT sid="355" pm="."><plain>24.MorseHGMooreGECytogenetic homogeneity in eight independent sites in a case of malignant melanomaCancer Genet. </plain></SENT>
<SENT sid="356" pm="."><plain>Cytogenet.19936910811210.1016/0165-4608(93)90083-X8402545 </plain></SENT>
</text></ref><ref id="CR25"><text><SENT sid="357" pm="."><plain>25.PleasanceEDA comprehensive catalogue of somatic mutations from a human cancer genomeNature201046319110.1038/nature0865820016485 </plain></SENT>
</text></ref><ref id="CR26"><text><SENT sid="358" pm="."><plain>26.NetworkCGAComprehensive molecular characterization of human colon and rectal cancerNature201248733010.1038/nature1125222810696 </plain></SENT>
</text></ref><ref id="CR27"><text><SENT sid="359" pm="."><plain>27.GrassoCSGenetic mechanisms of immune evasion in colorectal cancerCancer Discov.2018873074910.1158/2159-8290.CD-17-132729510987 </plain></SENT>
</text></ref><ref id="CR28"><text><SENT sid="360" pm="."><plain>28.Li, H. </plain></SENT>
<SENT sid="361" pm="."><plain>Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM. <ext-link ext-link-type="uri" xlink:href="https://arxiv.org/abs/1303.3997">https://arxiv.org/abs/1303.3997</ext-link> (2013). </plain></SENT>
</text></ref><ref id="CR29"><text><SENT sid="362" pm="."><plain>29.Van der AuweraGAFrom FastQ data to high-confidence variant calls: the genome analysis toolkit best practices pipelineCurr. </plain></SENT>
<SENT sid="363" pm="."><plain>Protoc. </plain></SENT>
<SENT sid="364" pm="."><plain>Bioinforma.2013431011 </plain></SENT>
</text></ref><ref id="CR30"><text><SENT sid="365" pm="."><plain>30.GrossmanRLToward a shared vision for cancer genomic dataN. </plain></SENT>
<SENT sid="366" pm="."><plain>Engl. </plain></SENT>
<SENT sid="367" pm="."><plain>J. </plain></SENT>
<SENT sid="368" pm="."><plain>Med.20163751109111210.1056/NEJMp160759127653561 </plain></SENT>
</text></ref><ref id="CR31"><text><SENT sid="369" pm="."><plain>31.ForbesSACOSMIC: somatic cancer genetics at high-resolutionNucleic Acids Res.201645D777D78310.1093/nar/gkw112127899578 </plain></SENT>
</text></ref><ref id="CR32"><text><SENT sid="370" pm="."><plain>32.ChaissonMJResolving the complexity of the human genome using single-molecule sequencingNature201551760810.1038/nature1390725383537 </plain></SENT>
</text></ref><ref id="CR33"><text><SENT sid="371" pm="."><plain>33.MuJCVarSim: a high-fidelity simulation and validation framework for high-throughput genome sequencing with cancer applicationsBioinformatics2014311469147110.1093/bioinformatics/btu82825524895 </plain></SENT>
</text></ref><ref id="CR34"><text><SENT sid="372" pm="."><plain>34.LauBLongISLND: in silico sequencing of lengthy and noisy datatypesBioinformatics2016323829383210.1093/bioinformatics/btw60227667791 </plain></SENT>
</text></ref><ref id="CR35"><text><SENT sid="373" pm="."><plain>35.SedlazeckFJAccurate detection of complex structural variations using single-molecule sequencingNat. </plain></SENT>
<SENT sid="374" pm="."><plain>Methods20181546146810.1038/s41592-018-0001-729713083 </plain></SENT>
</text></ref><ref id="CR36"><text><SENT sid="375" pm="."><plain>36.SherrySTdbSNP: the NCBI database of genetic variationNucleic Acids Res.20012930831110.1093/nar/29.1.30811125122 </plain></SENT>
</text></ref></ref-list></SecTag></back></article>
